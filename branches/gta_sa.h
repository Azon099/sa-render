/*    1 */
enum RsEvent
{
  rsCAMERASIZE = 0x0,
  rsCOMMANDLINE = 0x1,
  rsFILELOAD = 0x2,
  rsINPUTDEVICEATTACH = 0x4,
  rsPLUGINATTACH = 0x9,
  rsRWINITIALIZE = 0x15,
  rsRWTERMINATE = 0x16,
  rsSELECTDEVICE = 0x17,
  rsINITIALIZE = 0x18,
  rsTERMINATE = 0x19,
  rsIDLE = 0x1A,
  rsRENDER = 0x1B,
  rsKEYDOWN = 0x1C,
  rsKEYUP = 0x1D,
  rsQUITAPP = 0x1E,
  rsPADBUTTONDOWN = 0x1F,
  rsPADBUTTONUP = 0x20,
  rsPREINITCOMMANDLINE = 0x25,
  rsACTIVATE = 0x26,
};

/*    2 */
enum RsEventStatus
{
  rsEVENTERROR = 0x0,
  rsEVENTPROCESSED = 0x1,
  rsEVENTNOTPROCESSED = 0x2,
};

/*    3 */
enum RwRenderState
{
  rwRENDERSTATENARENDERSTATE = 0x0,
  rwRENDERSTATETEXTURERASTER = 0x1,
  rwRENDERSTATETEXTUREADDRESS = 0x2,
  rwRENDERSTATETEXTUREADDRESSU = 0x3,
  rwRENDERSTATETEXTUREADDRESSV = 0x4,
  rwRENDERSTATETEXTUREPERSPECTIVE = 0x5,
  rwRENDERSTATEZTESTENABLE = 0x6,
  rwRENDERSTATESHADEMODE = 0x7,
  rwRENDERSTATEZWRITEENABLE = 0x8,
  rwRENDERSTATETEXTUREFILTER = 0x9,
  rwRENDERSTATESRCBLEND = 0xA,
  rwRENDERSTATEDESTBLEND = 0xB,
  rwRENDERSTATEVERTEXALPHAENABLE = 0xC,
  rwRENDERSTATEBORDERCOLOR = 0xD,
  rwRENDERSTATEFOGENABLE = 0xE,
  rwRENDERSTATEFOGCOLOR = 0xF,
  rwRENDERSTATEFOGTYPE = 0x10,
  rwRENDERSTATEFOGDENSITY = 0x11,
  rwRENDERSTATECULLMODE = 0x14,
  rwRENDERSTATESTENCILENABLE = 0x15,
  rwRENDERSTATESTENCILFAIL = 0x16,
  rwRENDERSTATESTENCILZFAIL = 0x17,
  rwRENDERSTATESTENCILPASS = 0x18,
  rwRENDERSTATESTENCILFUNCTION = 0x19,
  rwRENDERSTATESTENCILFUNCTIONREF = 0x1A,
  rwRENDERSTATESTENCILFUNCTIONMASK = 0x1B,
  rwRENDERSTATESTENCILFUNCTIONWRITEMASK = 0x1C,
  rwRENDERSTATEALPHATESTFUNCTION = 0x1D,
  rwRENDERSTATEALPHATESTFUNCTIONREF = 0x1E,
};

/*    4 */
enum RwPluginId
{
  rwID_STRUCT = 0x1,
  rwID_STRING = 0x2,
  rwID_EXTENSION = 0x3,
  rwID_CAMERA = 0x5,
  rwID_TEXTURE = 0x6,
  rwID_MATERIAL = 0x7,
  rwID_MATLIST = 0x8,
  rwID_ATOMICSECT = 0x9,
  rwID_PLANESECT = 0xA,
  rwID_WORLD = 0xB,
  rwID_SPLINE = 0xC,
  rwID_MATRIX = 0xD,
  rwID_FRAMELIST = 0xE,
  rwID_GEOMETRY = 0xF,
  rwID_CLUMP = 0x10,
  rwID_LIGHT = 0x12,
  rwID_UNICODESTRING = 0x13,
  rwID_ATOMIC = 0x14,
  rwID_TEXTURENATIVE = 0x15,
  rwID_ANISOTPLUGIN = 0x127,
};

/*    5 */
enum RwPrimitiveType
{
  rwPRIMTYPENAPRIMTYPE = 0x0,
  rwPRIMTYPELINELIST = 0x1,
  rwPRIMTYPEPOLYLINE = 0x2,
  rwPRIMTYPETRILIST = 0x3,
  rwPRIMTYPETRISTRIP = 0x4,
  rwPRIMTYPETRIFAN = 0x5,
  rwPRIMTYPEPOINTLIST = 0x6,
};

/*    6 */
enum RsKeyCode
{
  rsESC = 0x3E8,
  rsF1 = 0x3E9,
  rsF2 = 0x3EA,
  rsF3 = 0x3EB,
  rsF4 = 0x3EC,
  rsF5 = 0x3ED,
  rsF6 = 0x3EE,
  rsF7 = 0x3EF,
  rsF8 = 0x3F0,
  rsF9 = 0x3F1,
  rsF10 = 0x3F2,
  rsF11 = 0x3F3,
  rsF12 = 0x3F4,
  rsINSERT = 0x3F5,
  rsDEL = 0x3F6,
  rsHOME = 0x3F7,
  rsEND = 0x3F8,
  rsPGUP = 0x3F9,
  rsPGDN = 0x3FA,
  rsUP = 0x3FB,
  rsDOWN = 0x3FC,
  rsLEFT = 0x3FD,
  rsRIGHT = 0x3FE,
  rsDIV = 0x3FF,
  rsMUL = 0x400,
  rsADD = 0x401,
  rsSUB = 0x402,
  rsEXTDEL = 0x403,
  rsEXT_END = 0x404,
  rsEXTDOWN = 0x405,
  rsEXTPGDN = 0x406,
  rsEXTLEFT = 0x407,
  rsNUM5 = 0x408,
  rsNUMLOCK = 0x409,
  rsEXTRIGHT = 0x40A,
  rsEXTHOME = 0x40B,
  rsEXTUP = 0x40C,
  rsEXTPGUP = 0x40D,
  rsEXTINSERT = 0x40E,
  rsENTER = 0x40F,
  rsSCROLL = 0x410,
  rsPAUSE = 0x411,
  rsBACK = 0x412,
  rsTAB = 0x413,
  rsCAPSLOCK = 0x414,
  rsEXTENTER = 0x415,
  rsLSHIFT = 0x416,
  rsRSHIFT = 0x417,
  rsSHIFT = 0x418,
  rsLCTRL = 0x419,
  rsRCTRL = 0x41A,
  rsLMENU = 0x41B,
  rsRMENU = 0x41C,
  rsLWIN = 0x41D,
  rsRWIN = 0x41E,
  rsAPPS = 0x41F,
  rsNULL = 0x420,
};

/*    7 */
enum MACRO_FILE_ATTRIBUTE
{
  FILE_ATTRIBUTE_READONLY = 0x1,
  FILE_ATTRIBUTE_HIDDEN = 0x2,
  FILE_ATTRIBUTE_SYSTEM = 0x4,
  FILE_ATTRIBUTE_DIRECTORY = 0x10,
  FILE_ATTRIBUTE_ARCHIVE = 0x20,
  FILE_ATTRIBUTE_ENCRYPTED = 0x40,
  FILE_ATTRIBUTE_NORMAL = 0x80,
  FILE_ATTRIBUTE_TEMPORARY = 0x100,
  FILE_ATTRIBUTE_SPARSE_FILE = 0x200,
  FILE_ATTRIBUTE_REPARSE_POINT = 0x400,
  FILE_ATTRIBUTE_COMPRESSED = 0x800,
  FILE_ATTRIBUTE_OFFLINE = 0x1000,
  FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 0x2000,
};

/*    8 */
enum mcType
{
  mcNull = 0x0,
  mcVehicle = 0x1,
  mcActor = 0x2,
  mcObject = 0x3,
  mcParticle = 0x4,
  mcGroup = 0x5,
  mcUnk6 = 0x6,
  mcUnk7 = 0x7,
  mcActionSequence = 0x8,
  mcDecisionMaker = 0x9,
  mcUnk10 = 0xA,
  mcSearchLight = 0xB,
  mcUnk12 = 0xC,
  mcTexDictionary = 0xD,
};

/*    9 */
enum MACRO_SPIF_SENDCHANGE
{
  SPIF_SENDCHANGE = 2,
  METRICS_USEDEFAULT = -1,
};

/*   10 */
enum MACRO_SPI_GETFILTERKEYS
{
  SPI_GETFILTERKEYS = 50,
  SPI_SETFILTERKEYS = 51,
  SPI_GETTOGGLEKEYS = 52,
  SPI_SETTOGGLEKEYS = 53,
  SPI_GETMOUSEKEYS = 54,
  SPI_SETMOUSEKEYS = 55,
  SPI_GETSHOWSOUNDS = 56,
  SPI_SETSHOWSOUNDS = 57,
  SPI_GETSTICKYKEYS = 58,
  SPI_SETSTICKYKEYS = 59,
  SPI_GETACCESSTIMEOUT = 60,
  SPI_SETACCESSTIMEOUT = 61,
  SPI_GETSERIALKEYS = 62,
  SPI_SETSERIALKEYS = 63,
  SPI_GETSOUNDSENTRY = 64,
  SPI_SETSOUNDSENTRY = 65,
  SPI_GETMOUSEHOVERWIDTH = 98,
  SPI_SETMOUSEHOVERWIDTH = 99,
  SPI_GETMOUSEHOVERHEIGHT = 100,
  SPI_SETMOUSEHOVERHEIGHT = 101,
  SPI_GETMOUSEHOVERTIME = 102,
  SPI_SETMOUSEHOVERTIME = 103,
  SPI_GETWHEELSCROLLLINES = 104,
  SPI_SETWHEELSCROLLLINES = 105,
  SPI_GETSHOWIMEUI = 110,
  SPI_SETSHOWIMEUI = 111,
  SPI_GETMOUSESPEED = 112,
  SPI_SETMOUSESPEED = 113,
  SPI_GETSCREENSAVERRUNNING = 114,
  SPI_GETACTIVEWINDOWTRACKING = 4096,
  SPI_SETACTIVEWINDOWTRACKING = 4097,
  SPI_GETMENUANIMATION = 4098,
  SPI_SETMENUANIMATION = 4099,
  SPI_GETCOMBOBOXANIMATION = 4100,
  SPI_SETCOMBOBOXANIMATION = 4101,
  SPI_GETLISTBOXSMOOTHSCROLLING = 4102,
  SPI_SETLISTBOXSMOOTHSCROLLING = 4103,
  SPI_GETGRADIENTCAPTIONS = 4104,
  SPI_SETGRADIENTCAPTIONS = 4105,
  SPI_GETMENUUNDERLINES = 4106,
  SPI_SETMENUUNDERLINES = 4107,
  SPI_GETACTIVEWNDTRKZORDER = 4108,
  SPI_SETACTIVEWNDTRKZORDER = 4109,
  SPI_GETHOTTRACKING = 4110,
  SPI_SETHOTTRACKING = 4111,
  SPI_GETFOREGROUNDLOCKTIMEOUT = 8192,
  SPI_SETFOREGROUNDLOCKTIMEOUT = 8193,
  SPI_GETACTIVEWNDTRKTIMEOUT = 8194,
  SPI_SETACTIVEWNDTRKTIMEOUT = 8195,
  SPI_GETFOREGROUNDFLASHCOUNT = 8196,
  SPI_SETFOREGROUNDFLASHCOUNT = 8197,
};

/*   11 */
enum MACRO_CS_VREDRAW
{
  CS_VREDRAW = 0x1,
  CS_HREDRAW = 0x2,
  CS_DBLCLKS = 0x8,
  CS_OWNDC = 0x20,
  CS_CLASSDC = 0x40,
  CS_PARENTDC = 0x80,
  CS_NOCLOSE = 0x200,
  CS_SAVEBITS = 0x800,
  CS_BYTEALIGNCLIENT = 0x1000,
  CS_BYTEALIGNWINDOW = 0x2000,
  CS_GLOBALCLASS = 0x4000,
  CS_IME = 0x10000,
};

/*   12 */
enum MACRO_WS_OVERLAPPEDWINDOW
{
  WS_OVERLAPPEDWINDOW = 13565952,
  WS_POPUPWINDOW = -2138570752,
};

/*   13 */
enum MACRO_CW
{
  CW_USEDEFAULT = 0x80000000,
};

/*   14 */
enum MACRO_SPI
{
  SPI_GETBEEP = 1,
  SPI_SETBEEP = 2,
  SPI_GETMOUSE = 3,
  SPI_SETMOUSE = 4,
  SPI_GETBORDER = 5,
  SPI_SETBORDER = 6,
  SPI_GETKEYBOARDSPEED = 10,
  SPI_SETKEYBOARDSPEED = 11,
  SPI_LANGDRIVER = 12,
  SPI_ICONHORIZONTALSPACING = 13,
  SPI_GETSCREENSAVETIMEOUT = 14,
  SPI_SETSCREENSAVETIMEOUT = 15,
  SPI_GETSCREENSAVEACTIVE = 16,
  SPI_SETSCREENSAVEACTIVE = 17,
  SPI_GETGRIDGRANULARITY = 18,
  SPI_SETGRIDGRANULARITY = 19,
  SPI_SETDESKWALLPAPER = 20,
  SPI_SETDESKPATTERN = 21,
  SPI_GETKEYBOARDDELAY = 22,
  SPI_SETKEYBOARDDELAY = 23,
  SPI_ICONVERTICALSPACING = 24,
  SPI_GETICONTITLEWRAP = 25,
  SPI_SETICONTITLEWRAP = 26,
  SPI_GETMENUDROPALIGNMENT = 27,
  SPI_SETMENUDROPALIGNMENT = 28,
  SPI_SETDOUBLECLKWIDTH = 29,
  SPI_SETDOUBLECLKHEIGHT = 30,
  SPI_GETICONTITLELOGFONT = 31,
  SPI_SETDOUBLECLICKTIME = 32,
  SPI_SETMOUSEBUTTONSWAP = 33,
  SPI_SETICONTITLELOGFONT = 34,
  SPI_GETFASTTASKSWITCH = 35,
  SPI_SETFASTTASKSWITCH = 36,
  SPI_SETDRAGFULLWINDOWS = 37,
  SPI_GETDRAGFULLWINDOWS = 38,
  SPI_GETNONCLIENTMETRICS = 41,
  SPI_SETNONCLIENTMETRICS = 42,
  SPI_GETMINIMIZEDMETRICS = 43,
  SPI_SETMINIMIZEDMETRICS = 44,
  SPI_GETICONMETRICS = 45,
  SPI_SETICONMETRICS = 46,
  SPI_SETWORKAREA = 47,
  SPI_GETWORKAREA = 48,
  SPI_SETPENWINDOWS = 49,
  SPI_GETHIGHCONTRAST = 66,
  SPI_SETHIGHCONTRAST = 67,
  SPI_GETKEYBOARDPREF = 68,
  SPI_SETKEYBOARDPREF = 69,
  SPI_GETSCREENREADER = 70,
  SPI_SETSCREENREADER = 71,
  SPI_GETANIMATION = 72,
  SPI_SETANIMATION = 73,
  SPI_GETFONTSMOOTHING = 74,
  SPI_SETFONTSMOOTHING = 75,
  SPI_SETDRAGWIDTH = 76,
  SPI_SETDRAGHEIGHT = 77,
  SPI_SETHANDHELD = 78,
  SPI_GETLOWPOWERTIMEOUT = 79,
  SPI_GETPOWEROFFTIMEOUT = 80,
  SPI_SETLOWPOWERTIMEOUT = 81,
  SPI_SETPOWEROFFTIMEOUT = 82,
  SPI_GETLOWPOWERACTIVE = 83,
  SPI_GETPOWEROFFACTIVE = 84,
  SPI_SETLOWPOWERACTIVE = 85,
  SPI_SETPOWEROFFACTIVE = 86,
  SPI_SETCURSORS = 87,
  SPI_SETICONS = 88,
  SPI_GETDEFAULTINPUTLANG = 89,
  SPI_SETDEFAULTINPUTLANG = 90,
  SPI_SETLANGTOGGLE = 91,
  SPI_GETWINDOWSEXTENSION = 92,
  SPI_SETMOUSETRAILS = 93,
  SPI_GETMOUSETRAILS = 94,
  SPI_SETSCREENSAVERRUNNING = 97,
};

/*   15 */
enum MACRO_KEY
{
  KEY_QUERY_VALUE = 0x1,
  KEY_SET_VALUE = 0x2,
  KEY_CREATE_SUB_KEY = 0x4,
  KEY_ENUMERATE_SUB_KEYS = 0x8,
  KEY_NOTIFY = 0x10,
  KEY_CREATE_LINK = 0x20,
  KEY_READ = 0x20019,
};

/*   16 */
enum MACRO_HKEY
{
  HKEY_CLASSES_ROOT = 0x80000000,
  HKEY_CURRENT_USER = 0x80000001,
  HKEY_LOCAL_MACHINE = 0x80000002,
  HKEY_USERS = 0x80000003,
  HKEY_PERFORMANCE_DATA = 0x80000004,
  HKEY_CURRENT_CONFIG = 0x80000005,
  HKEY_DYN_DATA = 0x80000006,
};

/*   17 */
enum MACRO_FILE_SHARE
{
  FILE_SHARE_WRITE = 0x2,
  FILE_SHARE_DELETE = 0x4,
};

/*   18 */
enum MACRO_CREATE
{
  CREATE_NEW = 1,
  CREATE_ALWAYS = 2,
  OPEN_EXISTING = 3,
  OPEN_ALWAYS = 4,
  TRUNCATE_EXISTING = 5,
};

/*   19 */
enum MACRO_FILE_GENERIC_EXECUTE
{
  FILE_SHARE_READ = 1,
  FILE_GENERIC_EXECUTE = 1179808,
};

/*   20 */
enum MACRO_SPECIFIC
{
  SPECIFIC_RIGHTS_ALL = 0xFFFF,
  ACCESS_SYSTEM_SECURITY = 0x1000000,
  MAXIMUM_ALLOWED = 0x2000000,
  GENERIC_READ = 0x80000000,
};

/*   21 */
enum MACRO_DIERR_NOAGGREGATION
{
  DIERR_NOAGGREGATION = -2147221232,
  DIERR_OTHERAPPHASPRIO = -2147024891,
  DIERR_INPUTLOST = -2147024866,
  DIERR_ACQUIRED = -2147024726,
};

/*   22 */
enum MACRO_VK
{
  VK_LBUTTON = 0x1,
  VK_RBUTTON = 0x2,
  VK_CANCEL = 0x3,
  VK_MBUTTON = 0x4,
  VK_BACK = 0x8,
  VK_TAB = 0x9,
  VK_CLEAR = 0xC,
  VK_RETURN = 0xD,
  VK_SHIFT = 0x10,
  VK_CONTROL = 0x11,
  VK_MENU = 0x12,
  VK_PAUSE = 0x13,
  VK_CAPITAL = 0x14,
  VK_KANA = 0x15,
  VK_HANGEUL = 0x15,
  VK_HANGUL = 0x15,
  VK_JUNJA = 0x17,
  VK_FINAL = 0x18,
  VK_HANJA = 0x19,
  VK_KANJI = 0x19,
  VK_ESCAPE = 0x1B,
  VK_CONVERT = 0x1C,
  VK_NONCONVERT = 0x1D,
  VK_ACCEPT = 0x1E,
  VK_MODECHANGE = 0x1F,
  VK_SPACE = 0x20,
  VK_PRIOR = 0x21,
  VK_NEXT = 0x22,
  VK_END = 0x23,
  VK_HOME = 0x24,
  VK_LEFT = 0x25,
  VK_UP = 0x26,
  VK_RIGHT = 0x27,
  VK_DOWN = 0x28,
  VK_SELECT = 0x29,
  VK_PRINT = 0x2A,
  VK_EXECUTE = 0x2B,
  VK_SNAPSHOT = 0x2C,
  VK_INSERT = 0x2D,
  VK_DELETE = 0x2E,
  VK_HELP = 0x2F,
  VK_LWIN = 0x5B,
  VK_RWIN = 0x5C,
  VK_APPS = 0x5D,
  VK_NUMPAD0 = 0x60,
  VK_NUMPAD1 = 0x61,
  VK_NUMPAD2 = 0x62,
  VK_NUMPAD3 = 0x63,
  VK_NUMPAD4 = 0x64,
  VK_NUMPAD5 = 0x65,
  VK_NUMPAD6 = 0x66,
  VK_NUMPAD7 = 0x67,
  VK_NUMPAD8 = 0x68,
  VK_NUMPAD9 = 0x69,
  VK_MULTIPLY = 0x6A,
  VK_ADD = 0x6B,
  VK_SEPARATOR = 0x6C,
  VK_SUBTRACT = 0x6D,
  VK_DECIMAL = 0x6E,
  VK_DIVIDE = 0x6F,
  VK_F1 = 0x70,
  VK_F2 = 0x71,
  VK_F3 = 0x72,
  VK_F4 = 0x73,
  VK_F5 = 0x74,
  VK_F6 = 0x75,
  VK_F7 = 0x76,
  VK_F8 = 0x77,
  VK_F9 = 0x78,
  VK_F10 = 0x79,
  VK_F11 = 0x7A,
  VK_F12 = 0x7B,
  VK_F13 = 0x7C,
  VK_F14 = 0x7D,
  VK_F15 = 0x7E,
  VK_F16 = 0x7F,
  VK_F17 = 0x80,
  VK_F18 = 0x81,
  VK_F19 = 0x82,
  VK_F20 = 0x83,
  VK_F21 = 0x84,
  VK_F22 = 0x85,
  VK_F23 = 0x86,
  VK_F24 = 0x87,
  VK_NUMLOCK = 0x90,
  VK_SCROLL = 0x91,
  VK_LSHIFT = 0xA0,
  VK_RSHIFT = 0xA1,
  VK_LCONTROL = 0xA2,
  VK_RCONTROL = 0xA3,
  VK_LMENU = 0xA4,
  VK_RMENU = 0xA5,
  VK_PROCESSKEY = 0xE5,
  VK_ATTN = 0xF6,
  VK_CRSEL = 0xF7,
  VK_EXSEL = 0xF8,
  VK_EREOF = 0xF9,
  VK_PLAY = 0xFA,
  VK_ZOOM = 0xFB,
  VK_NONAME = 0xFC,
  VK_PA1 = 0xFD,
  VK_OEM_CLEAR = 0xFE,
  WH_MIN = 0xFFFFFFFF,
};

/*   23 */
enum MACRO_E_NOINTERFACE
{
  E_NOINTERFACE = 0x80004002,
  E_POINTER = 0x80004003,
  E_HANDLE = 0x80070006,
};

/*   24 */
enum MACRO_E
{
  E_NOTIMPL = 0x80004001,
  E_OUTOFMEMORY = 0x8007000E,
  E_INVALIDARG = 0x80070057,
};

/*   25 */
enum MACRO_DSERR_NOAGGREGATION
{
  DSERR_NOAGGREGATION = -2147221232,
  DSERR_BUFFERLOST = -2005401450,
  DSERR_OTHERAPPHASPRIO = -2005401440,
  DSERR_UNINITIALIZED = -2005401430,
};

/*   26 */
enum MACRO_SW_NORMAL
{
  SW_NORMAL = 1,
  SW_SHOWMINIMIZED = 2,
  SW_SHOWMAXIMIZED = 3,
};

/*   27 */
enum MACRO_ERROR_CODE
{
  NO_ERROR = 0,
  ERROR_INVALID_FUNCTION = 1,
  ERROR_FILE_NOT_FOUND = 2,
  ERROR_PATH_NOT_FOUND = 3,
  ERROR_TOO_MANY_OPEN_FILES = 4,
  ERROR_ACCESS_DENIED = 5,
  ERROR_INVALID_HANDLE = 6,
  ERROR_ARENA_TRASHED = 7,
  ERROR_NOT_ENOUGH_MEMORY = 8,
  ERROR_INVALID_BLOCK = 9,
  ERROR_BAD_ENVIRONMENT = 10,
  ERROR_BAD_FORMAT = 11,
  ERROR_INVALID_ACCESS = 12,
  ERROR_INVALID_DATA = 13,
  ERROR_OUTOFMEMORY = 14,
  ERROR_INVALID_DRIVE = 15,
  ERROR_CURRENT_DIRECTORY = 16,
  ERROR_NOT_SAME_DEVICE = 17,
  ERROR_NO_MORE_FILES = 18,
  ERROR_WRITE_PROTECT = 19,
  ERROR_BAD_UNIT = 20,
  ERROR_NOT_READY = 21,
  ERROR_BAD_COMMAND = 22,
  ERROR_CRC = 23,
  ERROR_BAD_LENGTH = 24,
  ERROR_SEEK = 25,
  ERROR_NOT_DOS_DISK = 26,
  ERROR_SECTOR_NOT_FOUND = 27,
  ERROR_OUT_OF_PAPER = 28,
  ERROR_WRITE_FAULT = 29,
  ERROR_READ_FAULT = 30,
  ERROR_GEN_FAILURE = 31,
  ERROR_SHARING_VIOLATION = 32,
  ERROR_LOCK_VIOLATION = 33,
  ERROR_WRONG_DISK = 34,
  ERROR_SHARING_BUFFER_EXCEEDED = 36,
  ERROR_HANDLE_EOF = 38,
  ERROR_HANDLE_DISK_FULL = 39,
  ERROR_NOT_SUPPORTED = 50,
  ERROR_REM_NOT_LIST = 51,
  ERROR_DUP_NAME = 52,
  ERROR_BAD_NETPATH = 53,
  ERROR_NETWORK_BUSY = 54,
  ERROR_DEV_NOT_EXIST = 55,
  ERROR_TOO_MANY_CMDS = 56,
  ERROR_ADAP_HDW_ERR = 57,
  ERROR_BAD_NET_RESP = 58,
  ERROR_UNEXP_NET_ERR = 59,
  ERROR_BAD_REM_ADAP = 60,
  ERROR_PRINTQ_FULL = 61,
  ERROR_NO_SPOOL_SPACE = 62,
  ERROR_PRINT_CANCELLED = 63,
  ERROR_NETNAME_DELETED = 64,
  ERROR_NETWORK_ACCESS_DENIED = 65,
  ERROR_BAD_DEV_TYPE = 66,
  ERROR_BAD_NET_NAME = 67,
  ERROR_TOO_MANY_NAMES = 68,
  ERROR_TOO_MANY_SESS = 69,
  ERROR_SHARING_PAUSED = 70,
  ERROR_REQ_NOT_ACCEP = 71,
  ERROR_REDIR_PAUSED = 72,
  ERROR_FILE_EXISTS = 80,
  ERROR_CANNOT_MAKE = 82,
  ERROR_FAIL_I24 = 83,
  ERROR_OUT_OF_STRUCTURES = 84,
  ERROR_ALREADY_ASSIGNED = 85,
  ERROR_INVALID_PASSWORD = 86,
  ERROR_INVALID_PARAMETER = 87,
  ERROR_NET_WRITE_FAULT = 88,
  ERROR_NO_PROC_SLOTS = 89,
  ERROR_TOO_MANY_SEMAPHORES = 100,
  ERROR_EXCL_SEM_ALREADY_OWNED = 101,
  ERROR_SEM_IS_SET = 102,
  ERROR_TOO_MANY_SEM_REQUESTS = 103,
  ERROR_INVALID_AT_INTERRUPT_TIME = 104,
  ERROR_SEM_OWNER_DIED = 105,
  ERROR_SEM_USER_LIMIT = 106,
  ERROR_DISK_CHANGE = 107,
  ERROR_DRIVE_LOCKED = 108,
  ERROR_BROKEN_PIPE = 109,
  ERROR_OPEN_FAILED = 110,
  ERROR_BUFFER_OVERFLOW = 111,
  ERROR_DISK_FULL = 112,
  ERROR_NO_MORE_SEARCH_HANDLES = 113,
  ERROR_INVALID_TARGET_HANDLE = 114,
  ERROR_INVALID_CATEGORY = 117,
  ERROR_INVALID_VERIFY_SWITCH = 118,
  ERROR_BAD_DRIVER_LEVEL = 119,
  ERROR_CALL_NOT_IMPLEMENTED = 120,
  ERROR_SEM_TIMEOUT = 121,
  ERROR_INSUFFICIENT_BUFFER = 122,
  ERROR_INVALID_NAME = 123,
  ERROR_INVALID_LEVEL = 124,
  ERROR_NO_VOLUME_LABEL = 125,
  ERROR_MOD_NOT_FOUND = 126,
  ERROR_PROC_NOT_FOUND = 127,
  ERROR_WAIT_NO_CHILDREN = 128,
  ERROR_CHILD_NOT_COMPLETE = 129,
  ERROR_DIRECT_ACCESS_HANDLE = 130,
  ERROR_NEGATIVE_SEEK = 131,
  ERROR_SEEK_ON_DEVICE = 132,
  ERROR_IS_JOIN_TARGET = 133,
  ERROR_IS_JOINED = 134,
  ERROR_IS_SUBSTED = 135,
  ERROR_NOT_JOINED = 136,
  ERROR_NOT_SUBSTED = 137,
  ERROR_JOIN_TO_JOIN = 138,
  ERROR_SUBST_TO_SUBST = 139,
  ERROR_JOIN_TO_SUBST = 140,
  ERROR_SUBST_TO_JOIN = 141,
  ERROR_BUSY_DRIVE = 142,
  ERROR_SAME_DRIVE = 143,
  ERROR_DIR_NOT_ROOT = 144,
  ERROR_DIR_NOT_EMPTY = 145,
  ERROR_IS_SUBST_PATH = 146,
  ERROR_IS_JOIN_PATH = 147,
  ERROR_PATH_BUSY = 148,
  ERROR_IS_SUBST_TARGET = 149,
  ERROR_SYSTEM_TRACE = 150,
  ERROR_INVALID_EVENT_COUNT = 151,
  ERROR_TOO_MANY_MUXWAITERS = 152,
  ERROR_INVALID_LIST_FORMAT = 153,
  ERROR_LABEL_TOO_LONG = 154,
  ERROR_TOO_MANY_TCBS = 155,
  ERROR_SIGNAL_REFUSED = 156,
  ERROR_DISCARDED = 157,
  ERROR_NOT_LOCKED = 158,
  ERROR_BAD_THREADID_ADDR = 159,
  ERROR_BAD_ARGUMENTS = 160,
  ERROR_BAD_PATHNAME = 161,
  ERROR_SIGNAL_PENDING = 162,
  ERROR_MAX_THRDS_REACHED = 164,
  ERROR_LOCK_FAILED = 167,
  ERROR_BUSY = 170,
  ERROR_CANCEL_VIOLATION = 173,
  ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174,
  ERROR_INVALID_SEGMENT_NUMBER = 180,
  ERROR_INVALID_ORDINAL = 182,
  ERROR_ALREADY_EXISTS = 183,
  ERROR_INVALID_FLAG_NUMBER = 186,
  ERROR_SEM_NOT_FOUND = 187,
  ERROR_INVALID_STARTING_CODESEG = 188,
  ERROR_INVALID_STACKSEG = 189,
  ERROR_INVALID_MODULETYPE = 190,
  ERROR_INVALID_EXE_SIGNATURE = 191,
  ERROR_EXE_MARKED_INVALID = 192,
  ERROR_BAD_EXE_FORMAT = 193,
  ERROR_ITERATED_DATA_EXCEEDS_64k = 194,
  ERROR_INVALID_MINALLOCSIZE = 195,
  ERROR_DYNLINK_FROM_INVALID_RING = 196,
  ERROR_IOPL_NOT_ENABLED = 197,
  ERROR_INVALID_SEGDPL = 198,
  ERROR_AUTODATASEG_EXCEEDS_64k = 199,
  ERROR_RING2SEG_MUST_BE_MOVABLE = 200,
  ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201,
  ERROR_INFLOOP_IN_RELOC_CHAIN = 202,
  ERROR_ENVVAR_NOT_FOUND = 203,
  ERROR_NO_SIGNAL_SENT = 205,
  ERROR_FILENAME_EXCED_RANGE = 206,
  ERROR_RING2_STACK_IN_USE = 207,
  ERROR_META_EXPANSION_TOO_LONG = 208,
  ERROR_INVALID_SIGNAL_NUMBER = 209,
  ERROR_THREAD_1_INACTIVE = 210,
  ERROR_LOCKED = 212,
  ERROR_TOO_MANY_MODULES = 214,
  ERROR_NESTING_NOT_ALLOWED = 215,
  ERROR_EXE_MACHINE_TYPE_MISMATCH = 216,
  ERROR_BAD_PIPE = 230,
  ERROR_PIPE_BUSY = 231,
  ERROR_NO_DATA = 232,
  ERROR_PIPE_NOT_CONNECTED = 233,
  ERROR_MORE_DATA = 234,
  ERROR_VC_DISCONNECTED = 240,
  ERROR_INVALID_EA_NAME = 254,
  ERROR_EA_LIST_INCONSISTENT = 255,
  ERROR_NO_MORE_ITEMS = 259,
  ERROR_CANNOT_COPY = 266,
  ERROR_DIRECTORY = 267,
  ERROR_EAS_DIDNT_FIT = 275,
  ERROR_EA_FILE_CORRUPT = 276,
  ERROR_EA_TABLE_FULL = 277,
  ERROR_INVALID_EA_HANDLE = 278,
  ERROR_EAS_NOT_SUPPORTED = 282,
  ERROR_NOT_OWNER = 288,
  ERROR_TOO_MANY_POSTS = 298,
  ERROR_PARTIAL_COPY = 299,
  ERROR_OPLOCK_NOT_GRANTED = 300,
  ERROR_INVALID_OPLOCK_PROTOCOL = 301,
  ERROR_MR_MID_NOT_FOUND = 317,
  ERROR_INVALID_ADDRESS = 487,
  ERROR_ARITHMETIC_OVERFLOW = 534,
  ERROR_PIPE_CONNECTED = 535,
  ERROR_PIPE_LISTENING = 536,
  ERROR_EA_ACCESS_DENIED = 994,
  ERROR_OPERATION_ABORTED = 995,
  ERROR_IO_INCOMPLETE = 996,
  ERROR_IO_PENDING = 997,
  ERROR_NOACCESS = 998,
  ERROR_SWAPERROR = 999,
  ERROR_STACK_OVERFLOW = 1001,
  ERROR_INVALID_MESSAGE = 1002,
  ERROR_CAN_NOT_COMPLETE = 1003,
  ERROR_INVALID_FLAGS = 1004,
  ERROR_UNRECOGNIZED_VOLUME = 1005,
  ERROR_FILE_INVALID = 1006,
  ERROR_FULLSCREEN_MODE = 1007,
  ERROR_NO_TOKEN = 1008,
  ERROR_BADDB = 1009,
  ERROR_BADKEY = 1010,
  ERROR_CANTOPEN = 1011,
  ERROR_CANTREAD = 1012,
  ERROR_CANTWRITE = 1013,
  ERROR_REGISTRY_RECOVERED = 1014,
  ERROR_REGISTRY_CORRUPT = 1015,
  ERROR_REGISTRY_IO_FAILED = 1016,
  ERROR_NOT_REGISTRY_FILE = 1017,
  ERROR_KEY_DELETED = 1018,
  ERROR_NO_LOG_SPACE = 1019,
  ERROR_KEY_HAS_CHILDREN = 1020,
  ERROR_CHILD_MUST_BE_VOLATILE = 1021,
  ERROR_NOTIFY_ENUM_DIR = 1022,
  ERROR_DEPENDENT_SERVICES_RUNNING = 1051,
  ERROR_INVALID_SERVICE_CONTROL = 1052,
  ERROR_SERVICE_REQUEST_TIMEOUT = 1053,
  ERROR_SERVICE_NO_THREAD = 1054,
  ERROR_SERVICE_DATABASE_LOCKED = 1055,
  ERROR_SERVICE_ALREADY_RUNNING = 1056,
  ERROR_INVALID_SERVICE_ACCOUNT = 1057,
  ERROR_SERVICE_DISABLED = 1058,
  ERROR_CIRCULAR_DEPENDENCY = 1059,
  ERROR_SERVICE_DOES_NOT_EXIST = 1060,
  ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061,
  ERROR_SERVICE_NOT_ACTIVE = 1062,
  ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063,
  ERROR_EXCEPTION_IN_SERVICE = 1064,
  ERROR_DATABASE_DOES_NOT_EXIST = 1065,
  ERROR_SERVICE_SPECIFIC_ERROR = 1066,
  ERROR_PROCESS_ABORTED = 1067,
  ERROR_SERVICE_DEPENDENCY_FAIL = 1068,
  ERROR_SERVICE_LOGON_FAILED = 1069,
  ERROR_SERVICE_START_HANG = 1070,
  ERROR_INVALID_SERVICE_LOCK = 1071,
  ERROR_SERVICE_MARKED_FOR_DELETE = 1072,
  ERROR_SERVICE_EXISTS = 1073,
  ERROR_ALREADY_RUNNING_LKG = 1074,
  ERROR_SERVICE_DEPENDENCY_DELETED = 1075,
  ERROR_BOOT_ALREADY_ACCEPTED = 1076,
  ERROR_SERVICE_NEVER_STARTED = 1077,
  ERROR_DUPLICATE_SERVICE_NAME = 1078,
  ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079,
  ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080,
  ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081,
  ERROR_NO_RECOVERY_PROGRAM = 1082,
  ERROR_END_OF_MEDIA = 1100,
  ERROR_FILEMARK_DETECTED = 1101,
  ERROR_BEGINNING_OF_MEDIA = 1102,
  ERROR_SETMARK_DETECTED = 1103,
  ERROR_NO_DATA_DETECTED = 1104,
  ERROR_PARTITION_FAILURE = 1105,
  ERROR_INVALID_BLOCK_LENGTH = 1106,
  ERROR_DEVICE_NOT_PARTITIONED = 1107,
  ERROR_UNABLE_TO_LOCK_MEDIA = 1108,
  ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109,
  ERROR_MEDIA_CHANGED = 1110,
  ERROR_BUS_RESET = 1111,
  ERROR_NO_MEDIA_IN_DRIVE = 1112,
  ERROR_NO_UNICODE_TRANSLATION = 1113,
  ERROR_DLL_INIT_FAILED = 1114,
  ERROR_SHUTDOWN_IN_PROGRESS = 1115,
  ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116,
  ERROR_IO_DEVICE = 1117,
  ERROR_SERIAL_NO_DEVICE = 1118,
  ERROR_IRQ_BUSY = 1119,
  ERROR_MORE_WRITES = 1120,
  ERROR_COUNTER_TIMEOUT = 1121,
  ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122,
  ERROR_FLOPPY_WRONG_CYLINDER = 1123,
  ERROR_FLOPPY_UNKNOWN_ERROR = 1124,
  ERROR_FLOPPY_BAD_REGISTERS = 1125,
  ERROR_DISK_RECALIBRATE_FAILED = 1126,
  ERROR_DISK_OPERATION_FAILED = 1127,
  ERROR_DISK_RESET_FAILED = 1128,
  ERROR_EOM_OVERFLOW = 1129,
  ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130,
  ERROR_POSSIBLE_DEADLOCK = 1131,
  ERROR_MAPPED_ALIGNMENT = 1132,
  ERROR_SET_POWER_STATE_VETOED = 1140,
  ERROR_SET_POWER_STATE_FAILED = 1141,
  ERROR_TOO_MANY_LINKS = 1142,
  ERROR_OLD_WIN_VERSION = 1150,
  ERROR_APP_WRONG_OS = 1151,
  ERROR_SINGLE_INSTANCE_APP = 1152,
  ERROR_RMODE_APP = 1153,
  ERROR_INVALID_DLL = 1154,
  ERROR_NO_ASSOCIATION = 1155,
  ERROR_DDE_FAIL = 1156,
  ERROR_DLL_NOT_FOUND = 1157,
  ERROR_NO_MORE_USER_HANDLES = 1158,
  ERROR_MESSAGE_SYNC_ONLY = 1159,
  ERROR_SOURCE_ELEMENT_EMPTY = 1160,
  ERROR_DESTINATION_ELEMENT_FULL = 1161,
  ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162,
  ERROR_MAGAZINE_NOT_PRESENT = 1163,
  ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164,
  ERROR_DEVICE_REQUIRES_CLEANING = 1165,
  ERROR_DEVICE_DOOR_OPEN = 1166,
  ERROR_DEVICE_NOT_CONNECTED = 1167,
  ERROR_NOT_FOUND = 1168,
  ERROR_NO_MATCH = 1169,
  ERROR_SET_NOT_FOUND = 1170,
  ERROR_POINT_NOT_FOUND = 1171,
  ERROR_NO_TRACKING_SERVICE = 1172,
  ERROR_NO_VOLUME_ID = 1173,
  ERROR_BAD_DEVICE = 1200,
  ERROR_CONNECTION_UNAVAIL = 1201,
  ERROR_DEVICE_ALREADY_REMEMBERED = 1202,
  ERROR_NO_NET_OR_BAD_PATH = 1203,
  ERROR_BAD_PROVIDER = 1204,
  ERROR_CANNOT_OPEN_PROFILE = 1205,
  ERROR_BAD_PROFILE = 1206,
  ERROR_NOT_CONTAINER = 1207,
  ERROR_EXTENDED_ERROR = 1208,
  ERROR_INVALID_GROUPNAME = 1209,
  ERROR_INVALID_COMPUTERNAME = 1210,
  ERROR_INVALID_EVENTNAME = 1211,
  ERROR_INVALID_DOMAINNAME = 1212,
  ERROR_INVALID_SERVICENAME = 1213,
  ERROR_INVALID_NETNAME = 1214,
  ERROR_INVALID_SHARENAME = 1215,
  ERROR_INVALID_PASSWORDNAME = 1216,
  ERROR_INVALID_MESSAGENAME = 1217,
  ERROR_INVALID_MESSAGEDEST = 1218,
  ERROR_SESSION_CREDENTIAL_CONFLICT = 1219,
  ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220,
  ERROR_DUP_DOMAINNAME = 1221,
  ERROR_NO_NETWORK = 1222,
  ERROR_CANCELLED = 1223,
  ERROR_USER_MAPPED_FILE = 1224,
  ERROR_CONNECTION_REFUSED = 1225,
  ERROR_GRACEFUL_DISCONNECT = 1226,
  ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227,
  ERROR_ADDRESS_NOT_ASSOCIATED = 1228,
  ERROR_CONNECTION_INVALID = 1229,
  ERROR_CONNECTION_ACTIVE = 1230,
  ERROR_NETWORK_UNREACHABLE = 1231,
  ERROR_HOST_UNREACHABLE = 1232,
  ERROR_PROTOCOL_UNREACHABLE = 1233,
  ERROR_PORT_UNREACHABLE = 1234,
  ERROR_REQUEST_ABORTED = 1235,
  ERROR_CONNECTION_ABORTED = 1236,
  ERROR_RETRY = 1237,
  ERROR_CONNECTION_COUNT_LIMIT = 1238,
  ERROR_LOGIN_TIME_RESTRICTION = 1239,
  ERROR_LOGIN_WKSTA_RESTRICTION = 1240,
  ERROR_INCORRECT_ADDRESS = 1241,
  ERROR_ALREADY_REGISTERED = 1242,
  ERROR_SERVICE_NOT_FOUND = 1243,
  ERROR_NOT_AUTHENTICATED = 1244,
  ERROR_NOT_LOGGED_ON = 1245,
  ERROR_CONTINUE = 1246,
  ERROR_ALREADY_INITIALIZED = 1247,
  ERROR_NO_MORE_DEVICES = 1248,
  ERROR_NO_SUCH_SITE = 1249,
  ERROR_DOMAIN_CONTROLLER_EXISTS = 1250,
  ERROR_DS_NOT_INSTALLED = 1251,
  ERROR_NOT_ALL_ASSIGNED = 1300,
  ERROR_SOME_NOT_MAPPED = 1301,
  ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302,
  ERROR_LOCAL_USER_SESSION_KEY = 1303,
  ERROR_NULL_LM_PASSWORD = 1304,
  ERROR_UNKNOWN_REVISION = 1305,
  ERROR_REVISION_MISMATCH = 1306,
  ERROR_INVALID_OWNER = 1307,
  ERROR_INVALID_PRIMARY_GROUP = 1308,
  ERROR_NO_IMPERSONATION_TOKEN = 1309,
  ERROR_CANT_DISABLE_MANDATORY = 1310,
  ERROR_NO_LOGON_SERVERS = 1311,
  ERROR_NO_SUCH_LOGON_SESSION = 1312,
  ERROR_NO_SUCH_PRIVILEGE = 1313,
  ERROR_PRIVILEGE_NOT_HELD = 1314,
  ERROR_INVALID_ACCOUNT_NAME = 1315,
  ERROR_USER_EXISTS = 1316,
  ERROR_NO_SUCH_USER = 1317,
  ERROR_GROUP_EXISTS = 1318,
  ERROR_NO_SUCH_GROUP = 1319,
  ERROR_MEMBER_IN_GROUP = 1320,
  ERROR_MEMBER_NOT_IN_GROUP = 1321,
  ERROR_LAST_ADMIN = 1322,
  ERROR_WRONG_PASSWORD = 1323,
  ERROR_ILL_FORMED_PASSWORD = 1324,
  ERROR_PASSWORD_RESTRICTION = 1325,
  ERROR_LOGON_FAILURE = 1326,
  ERROR_ACCOUNT_RESTRICTION = 1327,
  ERROR_INVALID_LOGON_HOURS = 1328,
  ERROR_INVALID_WORKSTATION = 1329,
  ERROR_PASSWORD_EXPIRED = 1330,
  ERROR_ACCOUNT_DISABLED = 1331,
  ERROR_NONE_MAPPED = 1332,
  ERROR_TOO_MANY_LUIDS_REQUESTED = 1333,
  ERROR_LUIDS_EXHAUSTED = 1334,
  ERROR_INVALID_SUB_AUTHORITY = 1335,
  ERROR_INVALID_ACL = 1336,
  ERROR_INVALID_SID = 1337,
  ERROR_INVALID_SECURITY_DESCR = 1338,
  ERROR_BAD_INHERITANCE_ACL = 1340,
  ERROR_SERVER_DISABLED = 1341,
  ERROR_SERVER_NOT_DISABLED = 1342,
  ERROR_INVALID_ID_AUTHORITY = 1343,
  ERROR_ALLOTTED_SPACE_EXCEEDED = 1344,
  ERROR_INVALID_GROUP_ATTRIBUTES = 1345,
  ERROR_BAD_IMPERSONATION_LEVEL = 1346,
  ERROR_CANT_OPEN_ANONYMOUS = 1347,
  ERROR_BAD_VALIDATION_CLASS = 1348,
  ERROR_BAD_TOKEN_TYPE = 1349,
  ERROR_NO_SECURITY_ON_OBJECT = 1350,
  ERROR_CANT_ACCESS_DOMAIN_INFO = 1351,
  ERROR_INVALID_SERVER_STATE = 1352,
  ERROR_INVALID_DOMAIN_STATE = 1353,
  ERROR_INVALID_DOMAIN_ROLE = 1354,
  ERROR_NO_SUCH_DOMAIN = 1355,
  ERROR_DOMAIN_EXISTS = 1356,
  ERROR_DOMAIN_LIMIT_EXCEEDED = 1357,
  ERROR_INTERNAL_DB_CORRUPTION = 1358,
  ERROR_INTERNAL_ERROR = 1359,
  ERROR_GENERIC_NOT_MAPPED = 1360,
  ERROR_BAD_DESCRIPTOR_FORMAT = 1361,
  ERROR_NOT_LOGON_PROCESS = 1362,
  ERROR_LOGON_SESSION_EXISTS = 1363,
  ERROR_NO_SUCH_PACKAGE = 1364,
  ERROR_BAD_LOGON_SESSION_STATE = 1365,
  ERROR_LOGON_SESSION_COLLISION = 1366,
  ERROR_INVALID_LOGON_TYPE = 1367,
  ERROR_CANNOT_IMPERSONATE = 1368,
  ERROR_RXACT_INVALID_STATE = 1369,
  ERROR_RXACT_COMMIT_FAILURE = 1370,
  ERROR_SPECIAL_ACCOUNT = 1371,
  ERROR_SPECIAL_GROUP = 1372,
  ERROR_SPECIAL_USER = 1373,
  ERROR_MEMBERS_PRIMARY_GROUP = 1374,
  ERROR_TOKEN_ALREADY_IN_USE = 1375,
  ERROR_NO_SUCH_ALIAS = 1376,
  ERROR_MEMBER_NOT_IN_ALIAS = 1377,
  ERROR_MEMBER_IN_ALIAS = 1378,
  ERROR_ALIAS_EXISTS = 1379,
  ERROR_LOGON_NOT_GRANTED = 1380,
  ERROR_TOO_MANY_SECRETS = 1381,
  ERROR_SECRET_TOO_LONG = 1382,
  ERROR_INTERNAL_DB_ERROR = 1383,
  ERROR_TOO_MANY_CONTEXT_IDS = 1384,
  ERROR_LOGON_TYPE_NOT_GRANTED = 1385,
  ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386,
  ERROR_NO_SUCH_MEMBER = 1387,
  ERROR_INVALID_MEMBER = 1388,
  ERROR_TOO_MANY_SIDS = 1389,
  ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390,
  ERROR_NO_INHERITANCE = 1391,
  ERROR_FILE_CORRUPT = 1392,
  ERROR_DISK_CORRUPT = 1393,
  ERROR_NO_USER_SESSION_KEY = 1394,
  ERROR_LICENSE_QUOTA_EXCEEDED = 1395,
  ERROR_INVALID_WINDOW_HANDLE = 1400,
  ERROR_INVALID_MENU_HANDLE = 1401,
  ERROR_INVALID_CURSOR_HANDLE = 1402,
  ERROR_INVALID_ACCEL_HANDLE = 1403,
  ERROR_INVALID_HOOK_HANDLE = 1404,
  ERROR_INVALID_DWP_HANDLE = 1405,
  ERROR_TLW_WITH_WSCHILD = 1406,
  ERROR_CANNOT_FIND_WND_CLASS = 1407,
  ERROR_WINDOW_OF_OTHER_THREAD = 1408,
  ERROR_HOTKEY_ALREADY_REGISTERED = 1409,
  ERROR_CLASS_ALREADY_EXISTS = 1410,
  ERROR_CLASS_DOES_NOT_EXIST = 1411,
  ERROR_CLASS_HAS_WINDOWS = 1412,
  ERROR_INVALID_INDEX = 1413,
  ERROR_INVALID_ICON_HANDLE = 1414,
  ERROR_PRIVATE_DIALOG_INDEX = 1415,
  ERROR_LISTBOX_ID_NOT_FOUND = 1416,
  ERROR_NO_WILDCARD_CHARACTERS = 1417,
  ERROR_CLIPBOARD_NOT_OPEN = 1418,
  ERROR_HOTKEY_NOT_REGISTERED = 1419,
  ERROR_WINDOW_NOT_DIALOG = 1420,
  ERROR_CONTROL_ID_NOT_FOUND = 1421,
  ERROR_INVALID_COMBOBOX_MESSAGE = 1422,
  ERROR_WINDOW_NOT_COMBOBOX = 1423,
  ERROR_INVALID_EDIT_HEIGHT = 1424,
  ERROR_DC_NOT_FOUND = 1425,
  ERROR_INVALID_HOOK_FILTER = 1426,
  ERROR_INVALID_FILTER_PROC = 1427,
  ERROR_HOOK_NEEDS_HMOD = 1428,
  ERROR_GLOBAL_ONLY_HOOK = 1429,
  ERROR_JOURNAL_HOOK_SET = 1430,
  ERROR_HOOK_NOT_INSTALLED = 1431,
  ERROR_INVALID_LB_MESSAGE = 1432,
  ERROR_SETCOUNT_ON_BAD_LB = 1433,
  ERROR_LB_WITHOUT_TABSTOPS = 1434,
  ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435,
  ERROR_CHILD_WINDOW_MENU = 1436,
  ERROR_NO_SYSTEM_MENU = 1437,
  ERROR_INVALID_MSGBOX_STYLE = 1438,
  ERROR_INVALID_SPI_VALUE = 1439,
  ERROR_SCREEN_ALREADY_LOCKED = 1440,
  ERROR_HWNDS_HAVE_DIFF_PARENT = 1441,
  ERROR_NOT_CHILD_WINDOW = 1442,
  ERROR_INVALID_GW_COMMAND = 1443,
  ERROR_INVALID_THREAD_ID = 1444,
  ERROR_NON_MDICHILD_WINDOW = 1445,
  ERROR_POPUP_ALREADY_ACTIVE = 1446,
  ERROR_NO_SCROLLBARS = 1447,
  ERROR_INVALID_SCROLLBAR_RANGE = 1448,
  ERROR_INVALID_SHOWWIN_COMMAND = 1449,
  ERROR_NO_SYSTEM_RESOURCES = 1450,
  ERROR_NONPAGED_SYSTEM_RESOURCES = 1451,
  ERROR_PAGED_SYSTEM_RESOURCES = 1452,
  ERROR_WORKING_SET_QUOTA = 1453,
  ERROR_PAGEFILE_QUOTA = 1454,
  ERROR_COMMITMENT_LIMIT = 1455,
  ERROR_MENU_ITEM_NOT_FOUND = 1456,
  ERROR_INVALID_KEYBOARD_HANDLE = 1457,
  ERROR_HOOK_TYPE_NOT_ALLOWED = 1458,
  ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459,
  ERROR_TIMEOUT = 1460,
  ERROR_INVALID_MONITOR_HANDLE = 1461,
  ERROR_EVENTLOG_FILE_CORRUPT = 1500,
  ERROR_EVENTLOG_CANT_START = 1501,
  ERROR_LOG_FILE_FULL = 1502,
  ERROR_EVENTLOG_FILE_CHANGED = 1503,
  ERROR_INSTALL_SERVICE = 1601,
  ERROR_INSTALL_USEREXIT = 1602,
  ERROR_INSTALL_FAILURE = 1603,
  ERROR_INSTALL_SUSPEND = 1604,
  ERROR_UNKNOWN_PRODUCT = 1605,
  ERROR_UNKNOWN_FEATURE = 1606,
  ERROR_UNKNOWN_COMPONENT = 1607,
  ERROR_UNKNOWN_PROPERTY = 1608,
  ERROR_INVALID_HANDLE_STATE = 1609,
  ERROR_BAD_CONFIGURATION = 1610,
  ERROR_INDEX_ABSENT = 1611,
  ERROR_INSTALL_SOURCE_ABSENT = 1612,
  ERROR_BAD_DATABASE_VERSION = 1613,
  ERROR_PRODUCT_UNINSTALLED = 1614,
  ERROR_BAD_QUERY_SYNTAX = 1615,
  ERROR_INVALID_FIELD = 1616,
  RPC_S_INVALID_STRING_BINDING = 1700,
  RPC_S_WRONG_KIND_OF_BINDING = 1701,
  RPC_S_INVALID_BINDING = 1702,
  RPC_S_PROTSEQ_NOT_SUPPORTED = 1703,
  RPC_S_INVALID_RPC_PROTSEQ = 1704,
  RPC_S_INVALID_STRING_UUID = 1705,
  RPC_S_INVALID_ENDPOINT_FORMAT = 1706,
  RPC_S_INVALID_NET_ADDR = 1707,
  RPC_S_NO_ENDPOINT_FOUND = 1708,
  RPC_S_INVALID_TIMEOUT = 1709,
  RPC_S_OBJECT_NOT_FOUND = 1710,
  RPC_S_ALREADY_REGISTERED = 1711,
  RPC_S_TYPE_ALREADY_REGISTERED = 1712,
  RPC_S_ALREADY_LISTENING = 1713,
  RPC_S_NO_PROTSEQS_REGISTERED = 1714,
  RPC_S_NOT_LISTENING = 1715,
  RPC_S_UNKNOWN_MGR_TYPE = 1716,
  RPC_S_UNKNOWN_IF = 1717,
  RPC_S_NO_BINDINGS = 1718,
  RPC_S_NO_PROTSEQS = 1719,
  RPC_S_CANT_CREATE_ENDPOINT = 1720,
  RPC_S_OUT_OF_RESOURCES = 1721,
  RPC_S_SERVER_UNAVAILABLE = 1722,
  RPC_S_SERVER_TOO_BUSY = 1723,
  RPC_S_INVALID_NETWORK_OPTIONS = 1724,
  RPC_S_NO_CALL_ACTIVE = 1725,
  RPC_S_CALL_FAILED = 1726,
  RPC_S_CALL_FAILED_DNE = 1727,
  RPC_S_PROTOCOL_ERROR = 1728,
  RPC_S_UNSUPPORTED_TRANS_SYN = 1730,
  RPC_S_UNSUPPORTED_TYPE = 1732,
  RPC_S_INVALID_TAG = 1733,
  RPC_S_INVALID_BOUND = 1734,
  RPC_S_NO_ENTRY_NAME = 1735,
  RPC_S_INVALID_NAME_SYNTAX = 1736,
  RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737,
  RPC_S_UUID_NO_ADDRESS = 1739,
  RPC_S_DUPLICATE_ENDPOINT = 1740,
  RPC_S_UNKNOWN_AUTHN_TYPE = 1741,
  RPC_S_MAX_CALLS_TOO_SMALL = 1742,
  RPC_S_STRING_TOO_LONG = 1743,
  RPC_S_PROTSEQ_NOT_FOUND = 1744,
  RPC_S_PROCNUM_OUT_OF_RANGE = 1745,
  RPC_S_BINDING_HAS_NO_AUTH = 1746,
  RPC_S_UNKNOWN_AUTHN_SERVICE = 1747,
  RPC_S_UNKNOWN_AUTHN_LEVEL = 1748,
  RPC_S_INVALID_AUTH_IDENTITY = 1749,
  RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750,
  EPT_S_INVALID_ENTRY = 1751,
  EPT_S_CANT_PERFORM_OP = 1752,
  EPT_S_NOT_REGISTERED = 1753,
  RPC_S_NOTHING_TO_EXPORT = 1754,
  RPC_S_INCOMPLETE_NAME = 1755,
  RPC_S_INVALID_VERS_OPTION = 1756,
  RPC_S_NO_MORE_MEMBERS = 1757,
  RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758,
  RPC_S_INTERFACE_NOT_FOUND = 1759,
  RPC_S_ENTRY_ALREADY_EXISTS = 1760,
  RPC_S_ENTRY_NOT_FOUND = 1761,
  RPC_S_NAME_SERVICE_UNAVAILABLE = 1762,
  RPC_S_INVALID_NAF_ID = 1763,
  RPC_S_CANNOT_SUPPORT = 1764,
  RPC_S_NO_CONTEXT_AVAILABLE = 1765,
  RPC_S_INTERNAL_ERROR = 1766,
  RPC_S_ZERO_DIVIDE = 1767,
  RPC_S_ADDRESS_ERROR = 1768,
  RPC_S_FP_DIV_ZERO = 1769,
  RPC_S_FP_UNDERFLOW = 1770,
  RPC_S_FP_OVERFLOW = 1771,
  RPC_X_NO_MORE_ENTRIES = 1772,
  RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773,
  RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774,
  RPC_X_SS_IN_NULL_CONTEXT = 1775,
  RPC_X_SS_CONTEXT_DAMAGED = 1777,
  RPC_X_SS_HANDLES_MISMATCH = 1778,
  RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779,
  RPC_X_NULL_REF_POINTER = 1780,
  RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781,
  RPC_X_BYTE_COUNT_TOO_SMALL = 1782,
  RPC_X_BAD_STUB_DATA = 1783,
  ERROR_INVALID_USER_BUFFER = 1784,
  ERROR_UNRECOGNIZED_MEDIA = 1785,
  ERROR_NO_TRUST_LSA_SECRET = 1786,
  ERROR_NO_TRUST_SAM_ACCOUNT = 1787,
  ERROR_TRUSTED_DOMAIN_FAILURE = 1788,
  ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789,
  ERROR_TRUST_FAILURE = 1790,
  RPC_S_CALL_IN_PROGRESS = 1791,
  ERROR_NETLOGON_NOT_STARTED = 1792,
  ERROR_ACCOUNT_EXPIRED = 1793,
  ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794,
  ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795,
  ERROR_UNKNOWN_PORT = 1796,
  ERROR_UNKNOWN_PRINTER_DRIVER = 1797,
  ERROR_UNKNOWN_PRINTPROCESSOR = 1798,
  ERROR_INVALID_SEPARATOR_FILE = 1799,
  ERROR_INVALID_PRIORITY = 1800,
  ERROR_INVALID_PRINTER_NAME = 1801,
  ERROR_PRINTER_ALREADY_EXISTS = 1802,
  ERROR_INVALID_PRINTER_COMMAND = 1803,
  ERROR_INVALID_DATATYPE = 1804,
  ERROR_INVALID_ENVIRONMENT = 1805,
  RPC_S_NO_MORE_BINDINGS = 1806,
  ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807,
  ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808,
  ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809,
  ERROR_DOMAIN_TRUST_INCONSISTENT = 1810,
  ERROR_SERVER_HAS_OPEN_HANDLES = 1811,
  ERROR_RESOURCE_DATA_NOT_FOUND = 1812,
  ERROR_RESOURCE_TYPE_NOT_FOUND = 1813,
  ERROR_RESOURCE_NAME_NOT_FOUND = 1814,
  ERROR_RESOURCE_LANG_NOT_FOUND = 1815,
  ERROR_NOT_ENOUGH_QUOTA = 1816,
  RPC_S_NO_INTERFACES = 1817,
  RPC_S_CALL_CANCELLED = 1818,
  RPC_S_BINDING_INCOMPLETE = 1819,
  RPC_S_COMM_FAILURE = 1820,
  RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821,
  RPC_S_NO_PRINC_NAME = 1822,
  RPC_S_NOT_RPC_ERROR = 1823,
  RPC_S_UUID_LOCAL_ONLY = 1824,
  RPC_S_SEC_PKG_ERROR = 1825,
  RPC_S_NOT_CANCELLED = 1826,
  RPC_X_INVALID_ES_ACTION = 1827,
  RPC_X_WRONG_ES_VERSION = 1828,
  RPC_X_WRONG_STUB_VERSION = 1829,
  RPC_X_INVALID_PIPE_OBJECT = 1830,
  RPC_X_WRONG_PIPE_ORDER = 1831,
  RPC_X_WRONG_PIPE_VERSION = 1832,
  RPC_S_GROUP_MEMBER_NOT_FOUND = 1898,
  EPT_S_CANT_CREATE = 1899,
  RPC_S_INVALID_OBJECT = 1900,
  ERROR_INVALID_TIME = 1901,
  ERROR_INVALID_FORM_NAME = 1902,
  ERROR_INVALID_FORM_SIZE = 1903,
  ERROR_ALREADY_WAITING = 1904,
  ERROR_PRINTER_DELETED = 1905,
  ERROR_INVALID_PRINTER_STATE = 1906,
  ERROR_PASSWORD_MUST_CHANGE = 1907,
  ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908,
  ERROR_ACCOUNT_LOCKED_OUT = 1909,
  OR_INVALID_OXID = 1910,
  OR_INVALID_OID = 1911,
  OR_INVALID_SET = 1912,
  RPC_S_SEND_INCOMPLETE = 1913,
  RPC_S_INVALID_ASYNC_HANDLE = 1914,
  RPC_S_INVALID_ASYNC_CALL = 1915,
  RPC_X_PIPE_CLOSED = 1916,
  RPC_X_PIPE_DISCIPLINE_ERROR = 1917,
  RPC_X_PIPE_EMPTY = 1918,
  ERROR_NO_SITENAME = 1919,
  ERROR_CANT_ACCESS_FILE = 1920,
  ERROR_CANT_RESOLVE_FILENAME = 1921,
  ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 1922,
  ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 1923,
  ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 1924,
  ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 1925,
  ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 1926,
  ERROR_DS_BUSY = 1927,
  ERROR_DS_UNAVAILABLE = 1928,
  ERROR_DS_NO_RIDS_ALLOCATED = 1929,
  ERROR_DS_NO_MORE_RIDS = 1930,
  ERROR_DS_INCORRECT_ROLE_OWNER = 1931,
  ERROR_DS_RIDMGR_INIT_ERROR = 1932,
  ERROR_DS_OBJ_CLASS_VIOLATION = 1933,
  ERROR_DS_CANT_ON_NON_LEAF = 1934,
  ERROR_DS_CANT_ON_RDN = 1935,
  ERROR_DS_CANT_MOD_OBJ_CLASS = 1936,
  ERROR_DS_CROSS_DOM_MOVE_ERROR = 1937,
  ERROR_DS_GC_NOT_AVAILABLE = 1938,
  ERROR_INVALID_PIXEL_FORMAT = 2000,
  ERROR_BAD_DRIVER = 2001,
  ERROR_INVALID_WINDOW_STYLE = 2002,
  ERROR_METAFILE_NOT_SUPPORTED = 2003,
  ERROR_TRANSFORM_NOT_SUPPORTED = 2004,
  ERROR_CLIPPING_NOT_SUPPORTED = 2005,
  ERROR_CONNECTED_OTHER_PASSWORD = 2108,
  ERROR_BAD_USERNAME = 2202,
  ERROR_NOT_CONNECTED = 2250,
  ERROR_INVALID_CMM = 2300,
  ERROR_INVALID_PROFILE = 2301,
  ERROR_TAG_NOT_FOUND = 2302,
  ERROR_TAG_NOT_PRESENT = 2303,
  ERROR_DUPLICATE_TAG = 2304,
  ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2305,
  ERROR_PROFILE_NOT_FOUND = 2306,
  ERROR_INVALID_COLORSPACE = 2307,
  ERROR_ICM_NOT_ENABLED = 2308,
  ERROR_DELETING_ICM_XFORM = 2309,
  ERROR_INVALID_TRANSFORM = 2310,
  ERROR_OPEN_FILES = 2401,
  ERROR_ACTIVE_CONNECTIONS = 2402,
  ERROR_DEVICE_IN_USE = 2404,
  ERROR_UNKNOWN_PRINT_MONITOR = 3000,
  ERROR_PRINTER_DRIVER_IN_USE = 3001,
  ERROR_SPOOL_FILE_NOT_FOUND = 3002,
  ERROR_SPL_NO_STARTDOC = 3003,
  ERROR_SPL_NO_ADDJOB = 3004,
  ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005,
  ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006,
  ERROR_INVALID_PRINT_MONITOR = 3007,
  ERROR_PRINT_MONITOR_IN_USE = 3008,
  ERROR_PRINTER_HAS_JOBS_QUEUED = 3009,
  ERROR_SUCCESS_REBOOT_REQUIRED = 3010,
  ERROR_SUCCESS_RESTART_REQUIRED = 3011,
  ERROR_WINS_INTERNAL = 4000,
  ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001,
  ERROR_STATIC_INIT = 4002,
  ERROR_INC_BACKUP = 4003,
  ERROR_FULL_BACKUP = 4004,
  ERROR_REC_NON_EXISTENT = 4005,
  ERROR_RPL_NOT_ALLOWED = 4006,
  ERROR_DHCP_ADDRESS_CONFLICT = 4100,
  ERROR_WMI_GUID_NOT_FOUND = 4200,
  ERROR_WMI_INSTANCE_NOT_FOUND = 4201,
  ERROR_WMI_ITEMID_NOT_FOUND = 4202,
  ERROR_WMI_TRY_AGAIN = 4203,
  ERROR_WMI_DP_NOT_FOUND = 4204,
  ERROR_WMI_UNRESOLVED_INSTANCE_REF = 4205,
  ERROR_WMI_ALREADY_ENABLED = 4206,
  ERROR_WMI_GUID_DISCONNECTED = 4207,
  ERROR_WMI_SERVER_UNAVAILABLE = 4208,
  ERROR_WMI_DP_FAILED = 4209,
  ERROR_WMI_INVALID_MOF = 4210,
  ERROR_WMI_INVALID_REGINFO = 4211,
  ERROR_INVALID_MEDIA = 4300,
  ERROR_INVALID_LIBRARY = 4301,
  ERROR_INVALID_MEDIA_POOL = 4302,
  ERROR_DRIVE_MEDIA_MISMATCH = 4303,
  ERROR_MEDIA_OFFLINE = 4304,
  ERROR_LIBRARY_OFFLINE = 4305,
  ERROR_EMPTY = 4306,
  ERROR_NOT_EMPTY = 4307,
  ERROR_MEDIA_UNAVAILABLE = 4308,
  ERROR_RESOURCE_DISABLED = 4309,
  ERROR_INVALID_CLEANER = 4310,
  ERROR_UNABLE_TO_CLEAN = 4311,
  ERROR_OBJECT_NOT_FOUND = 4312,
  ERROR_DATABASE_FAILURE = 4313,
  ERROR_DATABASE_FULL = 4314,
  ERROR_MEDIA_INCOMPATIBLE = 4315,
  ERROR_RESOURCE_NOT_PRESENT = 4316,
  ERROR_INVALID_OPERATION = 4317,
  ERROR_MEDIA_NOT_AVAILABLE = 4318,
  ERROR_DEVICE_NOT_AVAILABLE = 4319,
  ERROR_REQUEST_REFUSED = 4320,
  ERROR_FILE_OFFLINE = 4350,
  ERROR_REMOTE_STORAGE_NOT_ACTIVE = 4351,
  ERROR_REMOTE_STORAGE_MEDIA_ERROR = 4352,
  ERROR_NOT_A_REPARSE_POINT = 4390,
  ERROR_REPARSE_ATTRIBUTE_CONFLICT = 4391,
  ERROR_DEPENDENT_RESOURCE_EXISTS = 5001,
  ERROR_DEPENDENCY_NOT_FOUND = 5002,
  ERROR_DEPENDENCY_ALREADY_EXISTS = 5003,
  ERROR_RESOURCE_NOT_ONLINE = 5004,
  ERROR_HOST_NODE_NOT_AVAILABLE = 5005,
  ERROR_RESOURCE_NOT_AVAILABLE = 5006,
  ERROR_RESOURCE_NOT_FOUND = 5007,
  ERROR_SHUTDOWN_CLUSTER = 5008,
  ERROR_CANT_EVICT_ACTIVE_NODE = 5009,
  ERROR_OBJECT_ALREADY_EXISTS = 5010,
  ERROR_OBJECT_IN_LIST = 5011,
  ERROR_GROUP_NOT_AVAILABLE = 5012,
  ERROR_GROUP_NOT_FOUND = 5013,
  ERROR_GROUP_NOT_ONLINE = 5014,
  ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 5015,
  ERROR_HOST_NODE_NOT_GROUP_OWNER = 5016,
  ERROR_RESMON_CREATE_FAILED = 5017,
  ERROR_RESMON_ONLINE_FAILED = 5018,
  ERROR_RESOURCE_ONLINE = 5019,
  ERROR_QUORUM_RESOURCE = 5020,
  ERROR_NOT_QUORUM_CAPABLE = 5021,
  ERROR_CLUSTER_SHUTTING_DOWN = 5022,
  ERROR_INVALID_STATE = 5023,
  ERROR_RESOURCE_PROPERTIES_STORED = 5024,
  ERROR_NOT_QUORUM_CLASS = 5025,
  ERROR_CORE_RESOURCE = 5026,
  ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 5027,
  ERROR_QUORUMLOG_OPEN_FAILED = 5028,
  ERROR_CLUSTERLOG_CORRUPT = 5029,
  ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 5030,
  ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 5031,
  ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 5032,
  ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 5033,
  ERROR_ENCRYPTION_FAILED = 6000,
  ERROR_DECRYPTION_FAILED = 6001,
  ERROR_FILE_ENCRYPTED = 6002,
  ERROR_NO_RECOVERY_POLICY = 6003,
  ERROR_NO_EFS = 6004,
  ERROR_WRONG_EFS = 6005,
  ERROR_NO_USER_KEYS = 6006,
  ERROR_FILE_NOT_ENCRYPTED = 6007,
  ERROR_NOT_EXPORT_FORMAT = 6008,
  ERROR_NO_BROWSER_SERVERS_FOUND = 6118,
};

/*   28 */
enum MACRO_WA
{
  WA_INACTIVE = 0,
  WA_ACTIVE = 1,
  WA_CLICKACTIVE = 2,
  WM_SETFOCUS = 7,
  WM_KILLFOCUS = 8,
  WM_ENABLE = 10,
  WM_SETREDRAW = 11,
  WM_SETTEXT = 12,
  WM_GETTEXT = 13,
  WM_GETTEXTLENGTH = 14,
  WM_PAINT = 15,
  WM_CLOSE = 16,
  WM_QUERYENDSESSION = 17,
  WM_QUIT = 18,
  WM_QUERYOPEN = 19,
  WM_ERASEBKGND = 20,
  WM_SYSCOLORCHANGE = 21,
  WM_ENDSESSION = 22,
  WM_SHOWWINDOW = 24,
  WM_WININICHANGE = 26,
  WM_SETTINGCHANGE = 26,
  WM_DEVMODECHANGE = 27,
  WM_ACTIVATEAPP = 28,
  WM_FONTCHANGE = 29,
  WM_TIMECHANGE = 30,
  WM_CANCELMODE = 31,
  WM_SETCURSOR = 32,
  WM_MOUSEACTIVATE = 33,
  WM_CHILDACTIVATE = 34,
  WM_QUEUESYNC = 35,
  WM_GETMINMAXINFO = 36,
  WM_PAINTICON = 38,
  WM_ICONERASEBKGND = 39,
  WM_NEXTDLGCTL = 40,
  WM_SPOOLERSTATUS = 42,
  WM_DRAWITEM = 43,
  WM_MEASUREITEM = 44,
  WM_DELETEITEM = 45,
  WM_VKEYTOITEM = 46,
  WM_CHARTOITEM = 47,
  WM_SETFONT = 48,
  WM_GETFONT = 49,
  WM_SETHOTKEY = 50,
  WM_GETHOTKEY = 51,
  WM_QUERYDRAGICON = 55,
  WM_COMPAREITEM = 57,
  WM_GETOBJECT = 61,
  WM_COMPACTING = 65,
  WM_COMMNOTIFY = 68,
  WM_WINDOWPOSCHANGING = 70,
  WM_WINDOWPOSCHANGED = 71,
  WM_POWER = 72,
  WM_COPYDATA = 74,
  WM_CANCELJOURNAL = 75,
  WM_NOTIFY = 78,
  WM_INPUTLANGCHANGEREQUEST = 80,
  WM_INPUTLANGCHANGE = 81,
  WM_TCARD = 82,
  WM_HELP = 83,
  WM_USERCHANGED = 84,
  WM_NOTIFYFORMAT = 85,
  WM_CONTEXTMENU = 123,
  WM_STYLECHANGING = 124,
  WM_STYLECHANGED = 125,
  WM_DISPLAYCHANGE = 126,
  WM_GETICON = 127,
  WM_SETICON = 128,
  WM_NCCREATE = 129,
  WM_NCDESTROY = 130,
  WM_NCCALCSIZE = 131,
  WM_NCHITTEST = 132,
  WM_NCPAINT = 133,
  WM_NCACTIVATE = 134,
  WM_GETDLGCODE = 135,
  WM_SYNCPAINT = 136,
  WM_NCMOUSEMOVE = 160,
  WM_NCLBUTTONDOWN = 161,
  WM_NCLBUTTONUP = 162,
  WM_NCLBUTTONDBLCLK = 163,
  WM_NCRBUTTONDOWN = 164,
  WM_NCRBUTTONUP = 165,
  WM_NCRBUTTONDBLCLK = 166,
  WM_NCMBUTTONDOWN = 167,
  WM_NCMBUTTONUP = 168,
  WM_NCMBUTTONDBLCLK = 169,
  WM_KEYFIRST = 256,
  WM_KEYDOWN = 256,
  WM_KEYUP = 257,
  WM_CHAR = 258,
  WM_DEADCHAR = 259,
  WM_SYSKEYDOWN = 260,
  WM_SYSKEYUP = 261,
  WM_SYSCHAR = 262,
  WM_SYSDEADCHAR = 263,
  WM_KEYLAST = 264,
  WM_IME_STARTCOMPOSITION = 269,
  WM_IME_ENDCOMPOSITION = 270,
  WM_IME_COMPOSITION = 271,
  WM_IME_KEYLAST = 271,
  WM_INITDIALOG = 272,
  WM_COMMAND = 273,
  WM_SYSCOMMAND = 274,
  WM_TIMER = 275,
  WM_HSCROLL = 276,
  WM_VSCROLL = 277,
  WM_INITMENU = 278,
  WM_INITMENUPOPUP = 279,
  WM_MENUSELECT = 287,
  WM_MENUCHAR = 288,
  WM_ENTERIDLE = 289,
  WM_MENURBUTTONUP = 290,
  WM_MENUDRAG = 291,
  WM_MENUGETOBJECT = 292,
  WM_UNINITMENUPOPUP = 293,
  WM_MENUCOMMAND = 294,
  WM_CTLCOLORMSGBOX = 306,
  WM_CTLCOLOREDIT = 307,
  WM_CTLCOLORLISTBOX = 308,
  WM_CTLCOLORBTN = 309,
  WM_CTLCOLORDLG = 310,
  WM_CTLCOLORSCROLLBAR = 311,
  WM_CTLCOLORSTATIC = 312,
  WM_MOUSEFIRST = 512,
  WM_MOUSEMOVE = 512,
  WM_LBUTTONDOWN = 513,
  WM_LBUTTONUP = 514,
  WM_LBUTTONDBLCLK = 515,
  WM_RBUTTONDOWN = 516,
  WM_RBUTTONUP = 517,
  WM_RBUTTONDBLCLK = 518,
  WM_MBUTTONDOWN = 519,
  WM_MBUTTONUP = 520,
  WM_MBUTTONDBLCLK = 521,
  WM_MOUSEWHEEL = 522,
  WM_MOUSELAST = 522,
  WM_PARENTNOTIFY = 528,
  WM_ENTERMENULOOP = 529,
  WM_EXITMENULOOP = 530,
  WM_NEXTMENU = 531,
  WM_SIZING = 532,
  WM_CAPTURECHANGED = 533,
  WM_MOVING = 534,
  WM_POWERBROADCAST = 536,
  WM_DEVICECHANGE = 537,
  WM_MDICREATE = 544,
  WM_MDIDESTROY = 545,
  WM_MDIACTIVATE = 546,
  WM_MDIRESTORE = 547,
  WM_MDINEXT = 548,
  WM_MDIMAXIMIZE = 549,
  WM_MDITILE = 550,
  WM_MDICASCADE = 551,
  WM_MDIICONARRANGE = 552,
  WM_MDIGETACTIVE = 553,
  WM_MDISETMENU = 560,
  WM_ENTERSIZEMOVE = 561,
  WM_EXITSIZEMOVE = 562,
  WM_DROPFILES = 563,
  WM_MDIREFRESHMENU = 564,
  WM_IME_SETCONTEXT = 641,
  WM_IME_NOTIFY = 642,
  WM_IME_CONTROL = 643,
  WM_IME_COMPOSITIONFULL = 644,
  WM_IME_SELECT = 645,
  WM_IME_CHAR = 646,
  WM_IME_REQUEST = 648,
  WM_IME_KEYDOWN = 656,
  WM_IME_KEYUP = 657,
  WM_MOUSEHOVER = 673,
  WM_MOUSELEAVE = 675,
  WM_CUT = 768,
  WM_COPY = 769,
  WM_PASTE = 770,
  WM_CLEAR = 771,
  WM_UNDO = 772,
  WM_RENDERFORMAT = 773,
  WM_RENDERALLFORMATS = 774,
  WM_DESTROYCLIPBOARD = 775,
  WM_DRAWCLIPBOARD = 776,
  WM_PAINTCLIPBOARD = 777,
  WM_VSCROLLCLIPBOARD = 778,
  WM_SIZECLIPBOARD = 779,
  WM_ASKCBFORMATNAME = 780,
  WM_CHANGECBCHAIN = 781,
  WM_HSCROLLCLIPBOARD = 782,
  WM_QUERYNEWPALETTE = 783,
  WM_PALETTEISCHANGING = 784,
  WM_PALETTECHANGED = 785,
  WM_HOTKEY = 786,
  WM_PRINT = 791,
  WM_PRINTCLIENT = 792,
  WM_HANDHELDFIRST = 856,
  WM_HANDHELDLAST = 863,
  WM_AFXFIRST = 864,
  WM_AFXLAST = 895,
  WM_PENWINFIRST = 896,
  WM_PENWINLAST = 911,
  WM_USER = 1024,
  WM_APP = 32768,
};

/*   29 */
enum MACRO_FILE_FLAG
{
  FILE_FLAG_OPEN_NO_RECALL = 0x100000,
  FILE_FLAG_OPEN_REPARSE_POINT = 0x200000,
  FILE_FLAG_POSIX_SEMANTICS = 0x1000000,
  FILE_FLAG_BACKUP_SEMANTICS = 0x2000000,
  FILE_FLAG_DELETE_ON_CLOSE = 0x4000000,
  FILE_FLAG_SEQUENTIAL_SCAN = 0x8000000,
  FILE_FLAG_RANDOM_ACCESS = 0x10000000,
  FILE_FLAG_NO_BUFFERING = 0x20000000,
  FILE_FLAG_OVERLAPPED = 0x40000000,
  FILE_FLAG_WRITE_THROUGH = 0x80000000,
};

/*   30 */
enum MACRO_LOCKF
{
  LOCKF_LOGICAL_LOCK = 0x0,
  LOCKF_PHYSICAL_LOCK = 0x1,
  DBT_NO_DISK_SPACE = 0x47,
  DBT_LOW_DISK_SPACE = 0x48,
  DBT_CONFIGMGPRIVATE = 0x7FFF,
  DBT_DEVICEARRIVAL = 0x8000,
  DBT_DEVICEQUERYREMOVE = 0x8001,
  DBT_DEVICEQUERYREMOVEFAILED = 0x8002,
  DBT_DEVICEREMOVEPENDING = 0x8003,
  DBT_DEVICEREMOVECOMPLETE = 0x8004,
  DBT_DEVICETYPESPECIFIC = 0x8005,
  DBT_CUSTOMEVENT = 0x8006,
};

/*   31 */
enum MACRO_FILE_BEGIN
{
  FILE_BEGIN = 0,
  FILE_CURRENT = 1,
  FILE_END = 2,
  TIME_ZONE_ID_INVALID = -1,
};

/*   32 */
#pragma pack(push, 1)
struct FindData
{
  int param;
  RwFrame *frame;
};
#pragma pack(pop)

/*   33 */
#pragma pack(push, 1)
struct CPath
{
  int number;
  int pData;
  int field_8;
  char usageCount;
  char __pad[3];
};
#pragma pack(pop)

/*   34 */
#pragma pack(push, 1)
struct CShadowManager
{
  char bInitialized;
  char bNotReInitialized;
  char _pad[2];
  void *pShadowData[16];
  CShadowImage image;
  CShadowImage imageBlurred;
};
#pragma pack(pop)

/*   35 */
#pragma pack(push, 1)
struct CVehicle
{
  CVehicle_vtbl *_vmt;
  CVehicleBase vehicle;
};
#pragma pack(pop)

/*   36 */
#pragma pack(push, 1)
struct CPed
{
  CPhysical ped;
  char field_138[348];
  CPedSound sound;
  char field_394[164];
  char field_438[40];
  char field_460;
  char gap_461[7];
  int field_468;
  int field_46C;
  int field_470;
  int field_474;
  int field_478;
  CPedIntelligence *intelligence;
  CPlayerData *m_pPlayerData;
  char field_484;
  char gap_485[3];
  CBone *bones[19];
  int animGroup;
  int field_4D8;
  int field_4DC;
  CPedAcquaintance acquaintance;
  RpClump *weapon;
  RwFrame *weaponGunflash;
  int googles;
  int pGooglesType;
  __int16 weaponGunflashAlphaMP1;
  __int16 field_506;
  __int16 weaponGunflashAlphaMP2;
  __int16 field_50A;
  CPedIK pedIK;
  int field_52C;
  int field_530;
  int field_534;
  int field_538;
  char gap_53C[4];
  int field_540;
  int field_544;
  int armour;
  int field_54C;
  int field_550;
  float field_554;
  int Zangle;
  float ZangleAiming;
  int field_560;
  int field_564;
  int field_568;
  RwV3D field_56C;
  RwV3D field_578;
  int field_584;
  float field_588;
  CVehicle *vehicle;
  int field_590;
  int field_594;
  int pedType;
  int field_59C;
  CWeapon weaponSlots[13];
  int field_70C;
  int field_710;
  char gap_714[4];
  char m_bActiveWeaponSlot;
  char field_719;
  char weaponAccuracy;
  char gap_71B[1];
  int m_pTargetedObject;
  char gap_720[12];
  char weaponSkill;
  char field_72D;
  char field_72E;
  char field_72F;
  int attachedFire;
  int field_734;
  int field_738;
  int field_73C;
  int field_740;
  int field_744;
  int field_748;
  int field_74C;
  int m_iTimeToDoBloodFootprints;
  char field_754;
  char gap_755[1];
  __int16 field_756;
  int field_758;
  char gap_75C[4];
  char field_760;
  char gap_761[3];
  int field_764;
  int field_768;
  char gap_76C[20];
  int turretPosMode;
  int field_784;
  int field_788;
  int enEx;
  int field_790;
  __int16 m_sSpecialModelIndex;
  char gap_796[2];
  int field_798;
  int field_79C;
};
#pragma pack(pop)

/*   37 */
#pragma pack(push, 1)
struct CObject
{
  CPhysical __parent;
  int pObjectList;
  char m_bObjectType;
  char field_13D;
  __int16 field_13E;
  int m_dwObjectFlags;
  char m_bColDamageEffect;
  char field_145;
  char field_146;
  char field_147;
  char m_bLastWeaponDamage;
  char m_bColBrightness;
  WORD m_bCarPartModelIndex;
  BYTE m_bColorId[4];
  int m_dwRemovalTime;
  float m_fHealth;
  float field_158;
  int m_fScale;
  CObjectInfo *m_pObjectInfo;
  int field_164;
  __int16 field_168;
  __int16 m_wPaintjobTxd;
  int m_pPaintjobTex;
  int field_170;
  int m_dwTimeEndToShowParticles;
  float m_fParticlesIntensity;
};
#pragma pack(pop)

/*   38 */
#pragma pack(push, 1)
struct CPhysical
{
  CVehicle_vtbl *_vmt;
  CPhysicalBase physical;
};
#pragma pack(pop)

/*   39 */
#pragma pack(push, 1)
struct CEntity
{
  CEntity_vtbl *_vmt;
  CEntityBase entity;
};
#pragma pack(pop)

/*   40 */
#pragma pack(push, 1)
struct CCamera
{
  CPlaceable placeable;
  BYTE bAboveGroundTrainNodesLoaded;
  BYTE bBelowGroundTrainNodesLoaded;
  BYTE bCamDirectlyBehind;
  BYTE bCamDirectlyInFront;
  BYTE m_bCameraJustRestored;
  BYTE m_bcutsceneFinished;
  BYTE m_bCullZoneChecksOn;
  BYTE m_bFirstPersonBeingUsed;
  BYTE m_bJustJumpedOutOf1stPersonBecauseOfTarget;
  BYTE m_bIdleOn;
  BYTE m_bInATunnelAndABigVehicle;
  BYTE m_bInitialNodeFound;
  BYTE m_bInitialNoNodeStaticsSet;
  BYTE m_bIgnoreFadingStuffForMusic;
  BYTE m_bPlayerIsInGarage;
  BYTE m_bPlayerWasOnBike;
  BYTE m_bJustCameOutOfGarage;
  BYTE m_bJustInitalised;
  BYTE m_bJust_Switched;
  BYTE m_bLookingAtPlayer;
  BYTE m_bLookingAtVector;
  BYTE m_bMoveCamToAvoidGeom;
  BYTE m_bObbeCinematicPedCamOn;
  BYTE m_bObbeCinematicCarCamOn;
  BYTE m_bRestoreByJumpCut;
  BYTE m_bUseNearClipScript;
  BYTE m_bStartInterScript;
  BYTE m_bStartingSpline;
  BYTE m_bTargetJustBeenOnTrain;
  BYTE m_bTargetJustCameOffTrain;
  BYTE m_bUseSpecialFovTrain;
  BYTE m_bUseTransitionBeta;
  BYTE m_bUseScriptZoomValuePed;
  BYTE m_bUseScriptZoomValueCar;
  BYTE m_bWaitForInterpolToFinish;
  BYTE m_bItsOkToLookJustAtThePlayer;
  BYTE m_bWantsToSwitchWidescreenOff;
  BYTE m_WideScreenOn;
  BYTE m_1rstPersonRunCloseToAWall;
  BYTE m_bHeadBob;
  BYTE m_bVehicleSuspenHigh;
  BYTE m_bEnable1rstPersonCamCntrlsScript;
  BYTE m_bAllow1rstPersonWeaponsCamera;
  BYTE m_bCooperativeCamMode;
  BYTE m_bAllowShootingWith2PlayersInCar;
  BYTE m_bDisableFirstPersonInCar;
  WORD m_ModeForTwoPlayersSeparateCars;
  WORD m_ModeForTwoPlayersSameCarShootingAllowed;
  WORD m_ModeForTwoPlayersSameCarShootingNotAllowed;
  WORD m_ModeForTwoPlayersNotBothInCar;
  BYTE m_bGarageFixedCamPositionSet;
  BYTE m_vecDoingSpecialInterPolation;
  BYTE m_bScriptParametersSetForInterPol;
  BYTE m_bFading;
  BYTE m_bMusicFading;
  BYTE m_bMusicFadedOut;
  BYTE m_bFailedCullZoneTestPreviously;
  BYTE m_FadeTargetIsSplashScreen;
  BYTE WorldViewerBeingUsed;
  BYTE m_uiTransitionJUSTStarted;
  BYTE m_uiTransitionState;
  BYTE ActiveCam;
  char __padding0[2];
  DWORD m_uiCamShakeStart;
  DWORD m_uiFirstPersonCamLastInputTime;
  DWORD m_uiLongestTimeInMill;
  DWORD m_uiNumberOfTrainCamNodes;
  DWORD m_uiTimeLastChange;
  DWORD m_uiTimeWeLeftIdle_StillNoInput;
  DWORD m_uiTimeWeEnteredIdle;
  DWORD m_uiTimeTransitionStart;
  DWORD m_uiTransitionDuration;
  DWORD m_uiTransitionDurationTargetCoors;
  DWORD m_BlurBlue;
  DWORD m_BlurGreen;
  DWORD m_BlurRed;
  DWORD m_BlurType;
  DWORD m_iWorkOutSpeedThisNumFrames;
  DWORD m_iNumFramesSoFar;
  DWORD m_iCurrentTrainCamNode;
  DWORD m_motionBlur;
  DWORD m_imotionBlurAddAlpha;
  DWORD m_iCheckCullZoneThisNumFrames;
  DWORD m_iZoneCullFrameNumWereAt;
  DWORD WhoIsInControlOfTheCamera;
  DWORD m_nCarZoom;
  float m_fCarZoomBase;
  float m_fCarZoomTotal;
  float m_fCarZoomSmoothed;
  float m_fCarZoomValueScript;
  DWORD m_nPedZoom;
  float m_fPedZoomBase;
  float m_fPedZoomTotal;
  DWORD m_fPedZoomSmoothed;
  float m_fPedZoomValueScript;
  float CamFrontXNorm;
  float CamFrontYNorm;
  float DistanceToWater;
  float HeightOfNearestWater;
  float FOVDuringInter;
  float LODDistMultiplier;
  float GenerationDistMultiplier;
  float m_fAlphaSpeedAtStartInter;
  float m_fAlphaWhenInterPol;
  float m_fAlphaDuringInterPol;
  float m_fBetaDuringInterPol;
  float m_fBetaSpeedAtStartInter;
  float m_fBetaWhenInterPol;
  float m_fFOVWhenInterPol;
  float m_fFOVSpeedAtStartInter;
  float m_fStartingBetaForInterPol;
  float m_fStartingAlphaForInterPol;
  float m_PedOrientForBehindOrInFront;
  float m_CameraAverageSpeed;
  float m_CameraSpeedSoFar;
  float m_fCamShakeForce;
  float m_fFovForTrain;
  float m_fFOV_Wide_Screen;
  float m_fNearClipScript;
  float m_fOldBetaDiff;
  float m_fPositionAlongSpline;
  float m_ScreenReductionPercentage;
  float m_ScreenReductionSpeed;
  float m_AlphaForPlayerAnim1rstPerson;
  float Orientation;
  float PlayerExhaustion;
  float SoundDistUp;
  float SoundDistUpAsRead;
  float SoundDistUpAsReadOld;
  float m_fAvoidTheGeometryProbsTimer;
  WORD m_nAvoidTheGeometryProbsDirn;
  WORD __padding1;
  float m_fWideScreenReductionAmount;
  float m_fStartingFOVForInterPol;
  CCam Cams[3];
  void *pToGarageWeAreIn;
  void *pToGarageWeAreInForHackAvoidFirstPerson;
  CQueuedMode m_PlayerMode;
  CQueuedMode PlayerWeaponMode;
  RwV3D m_PreviousCameraPosition;
  RwV3D m_RealPreviousCameraPosition;
  RwV3D m_cvecAimingTargetCoors;
  RwV3D m_vecFixedModeVector;
  RwV3D m_vecFixedModeSource;
  RwV3D m_vecFixedModeUpOffSet;
  RwV3D m_vecCutSceneOffset;
  RwV3D m_cvecStartingSourceForInterPol;
  RwV3D m_cvecStartingTargetForInterPol;
  RwV3D m_cvecStartingUpForInterPol;
  RwV3D m_cvecSourceSpeedAtStartInter;
  RwV3D m_cvecTargetSpeedAtStartInter;
  RwV3D m_cvecUpSpeedAtStartInter;
  RwV3D m_vecSourceWhenInterPol;
  RwV3D m_vecTargetWhenInterPol;
  RwV3D m_vecUpWhenInterPol;
  RwV3D m_vecClearGeometryVec;
  RwV3D m_vecGameCamPos;
  RwV3D SourceDuringInter;
  RwV3D TargetDuringInter;
  RwV3D UpDuringInter;
  RwV3D m_vecAttachedCamOffset;
  RwV3D m_vecAttachedCamLookAt;
  float m_fAttachedCamAngle;
  RwCamera *m_pRwCamera;
  CEntity *pTargetEntity;
  CEntity *pAttachedEntity;
  CCamPathSplines m_arrPathArray[4];
  BYTE m_bMirrorActive;
  BYTE m_bResetOldMatrix;
  char __padding2[2];
  CMatrix m_cameraMatrix;
  CMatrix m_cameraMatrixOld;
  CMatrix m_viewMatrix;
  CMatrix m_matInverse;
  CMatrix m_matMirrorInverse;
  CMatrix m_matMirror;
  RwV3D m_vecFrustumNormals[4];
  RwV3D field_B54[4];
  RwV3D field_B84[4];
  float field_BB4[4];
  float field_BC4[4];
  RwV3D field_BD4;
  DWORD field_BE0;
  DWORD field_BE4;
  DWORD field_BE8;
  DWORD field_BEC;
  DWORD field_BF0;
  DWORD field_BF4;
  DWORD field_BF8;
  DWORD _fadeAlpha;
  DWORD field_C00;
  DWORD _fFadeDuration;
  DWORD field_C08;
  DWORD field_C0C;
  DWORD field_C10;
  DWORD field_C14;
  DWORD field_C18;
  DWORD field_C1C;
  DWORD field_C20;
  DWORD field_C24;
  DWORD field_C28;
  DWORD field_C2C;
  WORD _fadeInOutFlag;
  WORD field_C32;
  DWORD field_C34;
  WORD field_C38;
  WORD field_C3A;
  WORD field_C3C;
  WORD field_C3E;
  DWORD _fadeStartTime;
  DWORD field_C44;
  DWORD field_C48;
  DWORD field_C4C;
  DWORD field_C50;
  DWORD field_C54;
  DWORD field_C58;
  DWORD transverseStartTime;
  DWORD transverseEndTime;
  RwV3D transverseEndPoint;
  RwV3D transverseStartPoint;
  BYTE transverseMode;
  BYTE field_C7D;
  BYTE field_C7E;
  BYTE field_C7F;
  RwV3D field_C80;
  BYTE field_C8C;
  BYTE field_C8D;
  BYTE field_C8E;
  BYTE field_C8F;
  DWORD field_C90;
  DWORD _startJiggleTime;
  DWORD _endJiggleTime;
  DWORD field_C9C;
  DWORD field_CA0;
  DWORD _startZoomTime;
  DWORD _endZoomTime;
  DWORD _zoomInFactor;
  DWORD _zoomOutFactor;
  BYTE _zoomMode;
  BYTE field_CB5;
  BYTE field_CB6;
  BYTE field_CB7;
  DWORD field_CB8;
  DWORD field_CBC;
  DWORD field_CC0;
  RwV3D field_CC4;
  RwV3D field_CD0;
  BYTE field_CDC;
  BYTE field_CDD;
  BYTE field_CDE;
  BYTE field_CDF;
  RwV3D field_CE0;
  BYTE field_CEC;
  BYTE field_CED;
  BYTE field_CEE;
  BYTE field_CEF;
  BYTE field_CF0;
  BYTE field_CF1;
  BYTE field_CF2;
  BYTE field_CF3;
  CCamera_obj2 field_CF4[5];
  DWORD field_D44;
  DWORD field_D48;
  DWORD field_D4C;
  DWORD field_D50;
  DWORD field_D54;
  DWORD field_D58;
  DWORD field_D5C;
  DWORD field_D60;
  DWORD field_D64;
  DWORD field_D68;
  DWORD field_D6C;
  DWORD field_D70;
  DWORD field_D74;
};
#pragma pack(pop)

/*   41 */
#pragma pack(push, 1)
struct CMatrix
{
  RwMatrix matrix;
  CMatrix *matrixPtr;
  int haveRwMatrix;
};
#pragma pack(pop)

/*   42 */
#pragma pack(push, 1)
struct CCamera_obj2
{
  _DWORD field_0;
  _DWORD field_4;
  _DWORD field_8;
  _DWORD field_C;
};
#pragma pack(pop)

/*   43 */
#pragma pack(push, 1)
struct CCam
{
  BYTE bBelowMinDist;
  BYTE bBehindPlayerDesired;
  BYTE m_bCamLookingAtVector;
  BYTE m_bCollisionChecksOn;
  BYTE m_bFixingBeta;
  BYTE m_bTheHeightFixerVehicleIsATrain;
  BYTE LookBehindCamWasInFront;
  BYTE LookingBehind;
  BYTE LookingLeft;
  BYTE LookingRight;
  BYTE ResetStatics;
  BYTE Rotating;
  WORD Mode;
  __int16 m_uiFinishTime;
  DWORD m_iDoCollisionChecksOnFrameNum;
  DWORD m_iDoCollisionCheckEveryNumOfFrames;
  DWORD m_iFrameNumWereAt;
  DWORD m_iRunningVectorArrayPos;
  DWORD m_iRunningVectorCounter;
  DWORD DirectionWasLooking;
  DWORD f_max_role_angle;
  DWORD f_Roll;
  DWORD f_rollSpeed;
  DWORD m_fSyphonModeTargetZOffSet;
  DWORD m_fAmountFractionObscured;
  DWORD m_fAlphaSpeedOverOneFrame;
  DWORD m_fBetaSpeedOverOneFrame;
  DWORD m_fBufferedTargetBeta;
  DWORD m_fBufferedTargetOrientation;
  DWORD m_fBufferedTargetOrientationSpeed;
  DWORD m_fCamBufferedHeight;
  DWORD m_fCamBufferedHeightSpeed;
  DWORD m_fCloseInPedHeightOffset;
  DWORD m_fCloseInPedHeightOffsetSpeed;
  DWORD m_fCloseInCarHeightOffset;
  DWORD m_fCloseInCarHeightOffsetSpeed;
  DWORD m_fDimensionOfHighestNearCar;
  DWORD m_fDistanceBeforeChanges;
  DWORD m_fFovSpeedOverOneFrame;
  DWORD m_fMinDistAwayFromCamWhenInterPolating;
  BYTE m_fPedBetweenCameraHeightOffset;
  BYTE m_fPlayerInFrontSyphonAngleOffSet;
  BYTE m_fRadiusForDead;
  BYTE m_fRealGroundDist;
  DWORD m_fTargetBeta;
  DWORD m_fTimeElapsedFloat;
  DWORD m_fTilt;
  DWORD m_fTiltSpeed;
  DWORD m_fTransitionBeta;
  DWORD m_fTrueBeta;
  DWORD m_fTrueAlpha;
  DWORD m_fInitialPlayerOrientation;
  float Alpha;
  float AlphaSpeed;
  float FOV;
  float FOVSpeed;
  float Beta;
  float BetaSpeed;
  float Distance;
  float DistanceSpeed;
  float CA_MIN_DISTANCE;
  float CA_MAX_DISTANCE;
  float SpeedVar;
  float m_fCameraHeightMultiplier;
  float m_fTargetZoomGroundOne;
  float m_fTargetZoomGroundTwo;
  float m_fTargetZoomGroundThree;
  float m_fTargetZoomOneZExtra;
  float m_fTargetZoomTwoZExtra;
  float m_fTargetZoomTwoInteriorZExtra;
  float m_fTargetZoomThreeZExtra;
  float m_fTargetZoomZCloseIn;
  float m_fMinRealGroundDist;
  float m_fTargetCloseInDist;
  float Beta_Targeting;
  float X_Targetting;
  float Y_Targetting;
  DWORD CarWeAreFocussingOn;
  float CarWeAreFocussingOnI;
  float m_fCamBumpedHorz;
  float m_fCamBumpedVert;
  DWORD m_nCamBumpedTime;
  DWORD CAM_BUMPED_SWING_PERIOD;
  DWORD CAM_BUMPED_END_TIME;
  float CAM_BUMPED_DAMP_RATE;
  float CAM_BUMPED_MOVE_MULT;
  RwV3D m_cvecSourceSpeedOverOneFrame;
  RwV3D m_cvecTargetSpeedOverOneFrame;
  RwV3D m_cvecUpOverOneFrame;
  RwV3D m_cvecTargetCoorsForFudgeInter;
  RwV3D m_cvecCamFixedModeVector;
  RwV3D m_cvecCamFixedModeSource;
  RwV3D m_cvecCamFixedModeUpOffSet;
  RwV3D m_vecLastAboveWaterCamPosition;
  RwV3D m_vecBufferedPlayerBodyOffset;
  RwV3D Front;
  RwV3D Source;
  RwV3D SourceBeforeLookBehind;
  RwV3D Up;
  RwV3D m_arrPreviousVectors[2];
  RwV3D m_aTargetHistoryPos[4];
  DWORD m_nTargetHistoryTime[4];
  DWORD m_nCurrentHistoryPoints;
  CEntity *CamTargetEntity;
  float m_fCameraDistance;
  float m_fIdealAlpha;
  float m_fPlayerVelocity;
  CAutomobile *m_pLastCarEntered;
  CPed *m_pLastPedLookedAt;
  bool m_bFirstPersonRunAboutActive;
};
#pragma pack(pop)

/*   44 */
#pragma pack(push, 1)
struct CCam_obj1
{
  int field_0;
  RwV3D field_4;
  int field_10;
  int field_14;
  RwV3D field_18;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  char field_78;
  char field_79;
  char field_7A;
  char field_7B;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
};
#pragma pack(pop)

/*   45 */
#pragma pack(push, 1)
struct XYZ
{
  CMatrix field_0;
  int ptr;
  int pPrev;
  int pNext;
};
#pragma pack(pop)

/*   46 */
#pragma pack(push, 1)
struct Placement
{
  RwV3D pos;
  float angle;
};
#pragma pack(pop)

/*   47 */
#pragma pack(push, 1)
struct CPlaceableBase
{
  Placement placement;
  CMatrix *m_pCoords;
};
#pragma pack(pop)

/*   48 */
#pragma pack(push, 1)
struct CRect
{
  int l;
  int t;
  int r;
  int b;
};
#pragma pack(pop)

/*   49 */
#pragma pack(push, 1)
struct struc_C1DF30
{
  struc_C1DF30_internal field_0[128];
  int field_1A00[3];
  int field_1A0C[3];
  int field_1A18;
};
#pragma pack(pop)

/*   50 */
#pragma pack(push, 1)
struct struc_C1DF30_internal
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
};
#pragma pack(pop)

/*   51 */
#pragma pack(push, 1)
struct CAnimBlendHierarchy
{
  int hash;
  CAnimBlendSequence *sequences;
  __int16 seqCount;
  char bRunningCompressed;
  char field_B;
  int iAnimBlockID;
  float fTotalTime;
  int field_14;
};
#pragma pack(pop)

/*   52 */
#pragma pack(push, 1)
struct ModelPedsData
{
  int count;
  CModelPeds objects[278];
};
#pragma pack(pop)

/*   53 */
#pragma pack(push, 1)
struct ModelCarsData
{
  int count;
  CVehicleModelInfo objects[212];
};
#pragma pack(pop)

/*   54 */
#pragma pack(push, 1)
struct ModelHierData
{
  int count;
  CModelHier objects[92];
};
#pragma pack(pop)

/*   55 */
#pragma pack(push, 1)
struct ModelWeapData
{
  int count;
  CModelWeap objects[51];
};
#pragma pack(pop)

/*   56 */
#pragma pack(push, 1)
struct struc_B1E128
{
  int count;
  obj_85BCF0 objects;
};
#pragma pack(pop)

/*   57 */
#pragma pack(push, 1)
struct ModelTobjData
{
  int count;
  CModelTobj objects[169];
};
#pragma pack(pop)

/*   58 */
#pragma pack(push, 1)
struct struc_B1C934
{
  int count;
  obj_85BC70 objects;
};
#pragma pack(pop)

/*   59 */
#pragma pack(push, 1)
struct ModelObjs2cData
{
  int count;
  CModelObjs2c objects[70];
};
#pragma pack(pop)

/*   60 */
#pragma pack(push, 1)
struct ModelObjsData
{
  int count;
  CModelObjs objects[14000];
};
#pragma pack(pop)

/*   61 */
#pragma pack(push, 1)
struct CVehicleModelInfo
{
  CClumpModelInfo clump;
  RpMaterial *m_pPlateMaterial;
  char m_cPlateText[8];
  char field_30;
  char m_bPlateType;
  char m_cGameName[8];
  __int16 __padding0;
  int m_dwType;
  float m_fWheelSizeFront;
  float m_fWheelSizeRear;
  __int16 m_wWheelModelId;
  __int16 m_wHandlingIndex;
  char m_bNumDoors;
  char m_cClass;
  char m_cFlags;
  char m_cWheelUpgradeClass;
  __int16 timesUsed;
  __int16 m_wFrq;
  int m_dwComprules;
  float m_fBikeSteerAngle;
  CVehicleStruct *m_pVehicleStruct;
  int field_60[116];
  RpMaterial *dirtMaterialsA[16];
  int dirtMaterialsB[16];
  char primaryColors[8];
  char secondaryColors[8];
  char tertiaryColors[8];
  char quaternaryColors[8];
  char m_bNumColorVariations;
  char m_bLastColorVariation;
  char primaryColor;
  char secondaryColor;
  char tertiaryColor;
  char quaternaryColor;
  __int16 upgrades[18];
  __int16 m_wRemapTxdId[4];
  __int16 _pad;
  int ifpIndex;
};
#pragma pack(pop)

/*   62 */
#pragma pack(push, 1)
struct CVehicleStruct
{
  RwV3D m_vDummyPos[15];
  CUpgradeComponent m_sUpgrade[18];
  RpAtomic *m_pExtra[6];
  char m_cNumExtras;
  char _pad[3];
  int m_iMaskComponentsDamagable;
};
#pragma pack(pop)

/*   63 */
#pragma pack(push, 1)
struct CUpgradeComponent
{
  RwV3D m_vPosition;
  RtQuat m_qRotation;
  int m_iParentId;
};
#pragma pack(pop)

/*   64 */
#pragma pack(push, 1)
struct VehicleStruct_int1
{
  int field_0;
  int field_4;
  int field_8;
};
#pragma pack(pop)

/*   65 */
#pragma pack(push, 1)
struct ColInitData
{
  int field_0;
  int animID;
  int field_4;
  RwV3D center;
  float radius;
};
#pragma pack(pop)

/*   66 */
#pragma pack(push, 1)
struct CPedModelInfo
{
  CClumpModelInfo clump;
  int m_nAnimType;
  int m_nPedType;
  int m_nStatType;
  __int16 m_nCarsCanDriveMask;
  __int16 m_nPedFlags;
  CColModel *m_pHitColModel;
  char m_nRadio1;
  char m_nRadio2;
  char pedModel;
  char field_3B;
  __int16 m_nVoiceType;
  __int16 m_nVoice1;
  __int16 m_nVoice2;
  __int16 m_nVoice3;
};
#pragma pack(pop)

/*   67 */
#pragma pack(push, 1)
struct CModelWeap
{
  CModelHier __parent;
  __int16 field_24;
  __int16 field_26;
};
#pragma pack(pop)

/*   68 */
#pragma pack(push, 1)
struct CClumpModelInfo
{
  CBaseModelInfo base;
  int _ifp;
};
#pragma pack(pop)

/*   69 */
#pragma pack(push, 1)
struct obj_85BCF0
{
  CBaseModelInfo __parent;
  __int16 field_20;
  __int16 field_22;
  __int16 field_24;
  __int16 field_26;
};
#pragma pack(pop)

/*   70 */
#pragma pack(push, 1)
struct CModelTobj
{
  CBaseModelInfo __parent;
  CModelTimeinfo timeinfo;
};
#pragma pack(pop)

/*   71 */
#pragma pack(push, 1)
struct obj_85BC70
{
  CBaseModelInfo __parent;
  __int16 field_20;
  __int16 field_22;
};
#pragma pack(pop)

/*   72 */
#pragma pack(push, 1)
struct CModelObjs2c
{
  CBaseModelInfo __parent;
  int atomic2;
};
#pragma pack(pop)

/*   73 */
#pragma pack(push, 1)
struct CModelObjs
{
  CBaseModelInfo __parent;
};
#pragma pack(pop)

/*   74 */
#pragma pack(push, 1)
struct CModelBaseVtbl
{
  void *__destructor;
  CBaseModelInfo *(__thiscall *_m04)(_DWORD);
  void *_m08;
  void *_m0C;
  int (__thiscall *getType)(_DWORD);
  int (*getTimeinfo)(void);
  void *init;
  int clear;
  int deleteRwObject;
  int (__thiscall *getRwObjectType)(_DWORD);
  int createInstanceSetMM;
  int (__thiscall *CreateInstance)(_DWORD);
  int initIfpName;
  int initIfp;
  int (__thiscall *getIfpIndex)(_DWORD);
};
#pragma pack(pop)

/*   75 */
#pragma pack(push, 1)
struct CBaseModelInfo
{
  CModelBaseVtbl *vmt;
  int m_dwKey;
  __int16 m_wUsageCount;
  __int16 m_wTxdIndex;
  char field_C;
  char m_nbCount2dfx;
  __int16 m_w2dfxIndex;
  __int16 m_wObjectInfoIndex;
  __int16 m_wFlags;
  CColModel *m_pColModel;
  int m_fDrawDistance;
  RpClump *m_pRwObject;
};
#pragma pack(pop)

/*   76 */
#pragma pack(push, 1)
struct CModelTimeinfo
{
  char timeOn;
  char timeOff;
  __int16 pairedModel;
};
#pragma pack(pop)

/*   77 */
#pragma pack(push, 1)
struct CAnimBlock
{
  char szName[16];
  char bLoaded;
  char pad;
  __int16 usRefs;
  int startAnimation;
  int animationCount;
  int animationStyle;
};
#pragma pack(pop)

/*   78 */
#pragma pack(push, 1)
struct HudTextures2
{
  int fist;
  int siteM16;
  int siterocket;
  int radardisc;
  int radarRingPlane;
  int skipIcon;
};
#pragma pack(pop)

/*   79 */
#pragma pack(push, 1)
struct HudTextures
{
  int empty1;
  int empty2;
  int radar_centre;
  int arrow;
  int radar_north;
  int radar_airYard;
  int radar_ammugun;
  int radar_barbers;
  int radar_BIGSMOKE;
  int radar_boatyard;
  int radar_burgerShot;
  int radar_bulldozer;
  int radar_CATALINAPINK;
  int radar_CESARVIAPANDO;
  int radar_chicken;
  int radar_CJ;
  int radar_CRASH1;
  int radar_diner;
  int radar_emmetGun;
  int radar_enemyAttack;
  int radar_fire;
  int radar_girlfriend;
  int radar_hospitaL;
  int radar_LocoSyndicate;
  int radar_MADDOG;
  int radar_mafiaCasino;
  int radar_MCSTRAP;
  int radar_modGarage;
  int radar_OGLOC;
  int radar_pizza;
  int radar_police;
  int radar_propertyG;
  int radar_propertyR;
  int radar_race;
  int radar_RYDER;
  int radar_saveGame;
  int radar_school;
  int radar_qmark;
  int radar_SWEET;
  int radar_tattoo;
  int radar_THETRUTH;
  int radar_waypoint;
  int radar_TorenoRanch;
  int radar_triads;
  int radar_triadsCasino;
  int radar_tshirt;
  int radar_WOOZIE;
  int radar_ZERO;
  int radar_dateDisco;
  int radar_dateDrink;
  int radar_dateFood;
  int radar_truck;
  int radar_cash;
  int radar_flag;
  int radar_gym;
  int radar_impound;
  int radar_light;
  int radar_runway;
  int radar_gangB;
  int radar_gangP;
  int radar_gangY;
  int radar_gangN;
  int radar_gangG;
  int radar_spray;
};
#pragma pack(pop)

/*   80 */
#pragma pack(push, 1)
struct CSprite2d
{
  RwTexture *texture;
};
#pragma pack(pop)

/*   81 */
#pragma pack(push, 1)
struct CTextSprite
{
  int type;
  char field_4;
  char field_5;
  __int16 textureID;
  int cornerA_X;
  int cornerA_Y;
  int cornerB_X;
  int cornerB_Y;
  int angle;
  int transparentColor;
  char gxt[8];
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  char textboxStyle;
  char field_39[3];
};
#pragma pack(pop)

/*   82 */
#pragma pack(push, 1)
struct struc_C71AA0
{
  int field_0;
  float m_fX;
  float m_fY;
  int m_fWidth;
  float m_fHeigth;
  RwRGBA m_sColor;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  char m_cIsBlip;
  char m_cFontCharsStyle;
  char m_cPropOn;
  char field_2B;
  __int16 m_wFontTextureId;
  char m_cOutline2;
  char _pad;
};
#pragma pack(pop)

/*   83 */
#pragma pack(push, 1)
struct FontValues
{
  char proportionalValues[208];
  char replacementSpaceChar;
  char unproportionalValue;
};
#pragma pack(pop)

/*   84 */
#pragma pack(push, 1)
struct CTimer
{
  int globalVar;
  char gxtEntry[10];
  char displayedText[6];
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  __int16 field_28;
  char field_2A;
  char field_2B;
  int field_2C;
  int field_30;
  int field_34;
  char enabled;
  char timerType;
  char field_3A;
  char field_3B;
  int enableSoundAtSec;
};
#pragma pack(pop)

/*   85 */
#pragma pack(push, 1)
struct CStatusText
{
  int globalVar;
  int field_4;
  char gxtEntry[8];
  __int16 field_10;
  __int16 lineNumber;
  char field_14[8];
  int field_1C;
  int field_20;
  int field_24;
  __int16 field_28;
  char field_2A;
  char field_2B;
  int field_2C;
  int field_30;
  int field_34;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char field_3E;
  char ?flashingFlag;
  char field_40;
  char __pad[3];
};
#pragma pack(pop)

/*   86 */
#pragma pack(push, 1)
struct CStatusTexts
{
  CTimer timer;
  CStatusText field_40[4];
  char field_150;
  char timerPaused;
};
#pragma pack(pop)

/*   87 */
#pragma pack(push, 1)
struct CTextDrawer
{
  float letterWidth;
  int letterHeight;
  RwRGBA color;
  char m_bJustify;
  char centered;
  char withBackground;
  char _pad;
  int lineHeight;
  int lineWidth;
  RwRGBA backgroundBoxColor;
  char proportional;
  RwRGBA backgroundColor;
  char shadowType;
  char outlineType;
  char field_23;
  char alignRight;
  char _pad_25;
  char _pad_26;
  char _pad_27;
  int font;
  int xPosition;
  int yPosition;
  char gxtEntry[8];
  int param1;
  int param2;
};
#pragma pack(pop)

/*   88 */
#pragma pack(push, 1)
struct CRoadblock
{
  RwV3D cornerA;
  RwV3D cornerB;
  char active;
  char m_bIsCreated;
  char type;
  char field_1B;
};
#pragma pack(pop)

/*   89 */
#pragma pack(push, 1)
struct CWantedCop
{
  int m_dwCrimeType;
  CPed *m_pPed;
  int m_dwStartTime;
  RwV3D m_vPosition;
  char field_18;
  char m_bIsPedCriminal;
  char _pad[2];
};
#pragma pack(pop)

/*   90 */
#pragma pack(push, 1)
struct CWanted
{
  int Chaos;
  int field_4;
  int field_8;
  int timeWhenGotStars;
  int field_10;
  float field_14;
  char ncops;
  char maxcops;
  char nhelis;
  char field_1B;
  __int16 field_1C;
  char field_1E;
  char field_1F;
  int field_20;
  int field_24;
  int field_28;
  int currentWantedLevel;
  int maxWantedLevel;
  CWantedCop cops[16];
  int ?cops_vmt[10];
  int field_21C;
  int field_220;
  int field_224;
  int field_228;
  int field_22C;
  int field_230;
  int field_234;
  int field_238;
  int field_23C;
  int field_240;
  int field_244;
  int field_248;
  int field_24C;
  int field_250;
  int field_254;
  int field_258;
  int field_25C;
  int field_260;
  int field_264;
  int field_268;
  int field_26C;
  int field_270;
  int field_274;
  int field_278;
  int field_27C;
  int field_280;
  int field_284;
  int field_288;
  int field_28C;
  int field_290;
  int field_294;
  int field_298;
};
#pragma pack(pop)

/*   91 */
#pragma pack(push, 1)
struct CWeapon
{
  eWeaponType type;
  int state;
  int ammoInClip;
  int ammoRemaining;
  int m_dwTimeForNextShot;
  char field_14;
  char field_15;
  char field_16;
  char field_17;
  int m_pParticle;
};
#pragma pack(pop)

/*   92 */
#pragma pack(push, 1)
struct CClothesInfo
{
  int modelHash[10];
  int textureHash[18];
  int field_70;
  int field_74;
};
#pragma pack(pop)

/*   93 */
#pragma pack(push, 1)
struct ColModel_COL3
{
  RwV3D min;
  RwV3D max;
  RwV3D center;
  int radius;
  __int16 numberOfSpheres;
  __int16 numberOfBoxes;
  int numberOfFaces;
  int flags;
  int offsetSpheres;
  int offsetBoxes;
  int offsetSuspensionLines;
  int offsetMeshVertices;
  int offsetMeshFaces;
  int offset2;
  int numberOfShadowMeshFaces;
  int offsetShadowMeshVertices;
  int offsetShadowMeshFaces;
};
#pragma pack(pop)

/*   94 */
#pragma pack(push, 1)
struct CColSphere
{
  RwSphere sphere;
  CColSurface surface;
};
#pragma pack(pop)

/*   95 */
#pragma pack(push, 1)
struct CColSurface
{
  char material;
  char flag;
  char lighting;
  char light;
};
#pragma pack(pop)

/*   96 */
#pragma pack(push, 1)
struct CColData
{
  __int16 m_wNumSpheres;
  __int16 m_wNumBoxes;
  __int16 m_wNumTriangles;
  char m_bNumLines;
  char m_bFlags;
  CColSphere *m_pSpheres;
  CColBox *m_pBoxes;
  CColLine *m_pLines;
  CCompressedVector *m_pVertices;
  CColTriangle *m_pTriangles;
  CColTrianglePlane *m_pTrianglePlanes;
  int m_dwNumShadowTriangles;
  int m_dwNumShadowVertices;
  int m_pShadowVertices;
  int m_pShadowTriangles;
};
#pragma pack(pop)

/*   97 */
#pragma pack(push, 1)
struct CColModel
{
  RwBBox bbox;
  RwSphere sphere;
  char field_28;
  char flags;
  char field_2A;
  char field_2B;
  CColData *m_pColData;
};
#pragma pack(pop)

/*   98 */
#pragma pack(push, 1)
struct _eh_unwindmapentry
{
  int toState;
  void *action;
};
#pragma pack(pop)

/*   99 */
#pragma pack(push, 1)
struct _eh_funcinfo
{
  int magickNumber;
  int maxState;
  void *unwindMap;
  int nTryBlock;
  int pTryBlockMap;
  int nIPMapEntries;
  int pIPToStateMap;
};
#pragma pack(pop)

/*  100 */
#pragma pack(push, 1)
struct CAnimationStyleDescriptor
{
  char name[16];
  char ?baseName[16];
  int field_20;
  int nameCount;
  void *namesPtr;
  void *dataPtr;
};
#pragma pack(pop)

/*  101 */
#pragma pack(push, 1)
struct CTaskComplexSequence
{
  int __vmt__;
  int field_4;
  int field_8;
  int field_C;
  int field_10[8];
  int field_30;
  int field_34;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
  int field_3C;
};
#pragma pack(pop)

/*  102 */
#pragma pack(push, 1)
struct SReference
{
  int m_pNext;
  int m_pEntity;
};
#pragma pack(pop)

/*  103 */
#pragma pack(push, 1)
struct CGangWeapons
{
  char field_0;
  char __pad[3];
  int field_4;
  int field_8;
  int field_C;
};
#pragma pack(pop)

/*  104 */
#pragma pack(push, 1)
struct CEntranceMarker
{
  int status;
  RwV3D pos;
  int R;
  int G;
  int B;
};
#pragma pack(pop)

/*  105 */
#pragma pack(push, 1)
struct IGraphBuilderVtbl
{
  int QueryInterface;
  int AddRef;
  int Release;
  int AddFilter;
  int RemoveFilter;
  int EnumFilters;
  int FindFilterByName;
  int ConnectDirect;
  int Reconnect;
  int Disconnect;
  int SetDefaultSyncSource;
  int Connect;
  int Render;
  int RenderFile;
  int AddSourceFilter;
  int SetLogFile;
  int Abort;
  int ShouldOperationContinue;
};
#pragma pack(pop)

/*  106 */
#pragma pack(push, 1)
struct RsKeyStatus
{
  int keyScanCode;
  int keyCharCode;
};
#pragma pack(pop)

/*  107 */
#pragma pack(push, 1)
struct CFlippedCheck
{
  int vehicle;
  int field_4;
};
#pragma pack(pop)

/*  108 */
#pragma pack(push, 1)
struct CCarGenerator
{
  __int16 model;
  char color1;
  char color2;
  __int16 x;
  __int16 y;
  __int16 z;
  char angle;
  char alarm;
  char doorLock;
  char flags;
  __int16 minDelay;
  __int16 maxDelay;
  __int16 field_12;
  int nextGen;
  __int16 field_18;
  __int16 enabled;
  char field_1C;
  char isUsed;
  __int16 field_1E;
};
#pragma pack(pop)

/*  109 */
#pragma pack(push, 1)
struct CIplInst
{
  RwV3D position;
  RtQuat rotation;
  int modelID;
  int interiorID;
  int lod;
};
#pragma pack(pop)

/*  110 */
#pragma pack(push, 1)
struct CIplFile
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  char name[16];
  __int16 field_20;
  __int16 field_22;
  __int16 field_24;
  __int16 field_26;
  __int16 field_28;
  __int16 iplId;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
};
#pragma pack(pop)

/*  111 */
#pragma pack(push, 1)
struct CScriptTrigger
{
  __int16 IMG_index;
  char AttachType;
  char Type;
  int Status?;
  int Radius;
  __int16 modelID;
  __int16 priority;
  int field_10;
};
#pragma pack(pop)

/*  112 */
#pragma pack(push, 1)
struct CObjectInfo
{
  float m_fMass;
  float m_fTurnMass;
  float m_fAirResistance;
  float m_fElasticity;
  float m_fBuoyancyConstant;
  float m_fUprootLimit;
  float m_fColDamageMultiplier;
  char m_bColDamageEffect;
  char m_bSpecialColResponseCase;
  char m_bCameraAvoidObject;
  char b_CausesExplosion;
  char m_bFxType;
  char __padding0[3];
  RwV3D m_vFxOffset;
  CFxSystem *m_pFxSystem;
  float m_fSmashMultiplier;
  RwV3D m_vBreakVelocity;
  float m_fBreakVelocityRand;
  int m_dwGunBreakMode;
  int m_dwSparksOnImpact;
};
#pragma pack(pop)

/*  113 */
#pragma pack(push, 1)
struct SimpleBuffer
{
  int ptr;
  int size;
  int position;
};
#pragma pack(pop)

/*  114 */
#pragma pack(push, 1)
struct CParticleData__LListHead
{
  CFxSystem *last;
  int first;
  int count;
};
#pragma pack(pop)

/*  115 */
#pragma pack(push, 1)
struct CParticleData
{
  CParticleData__LListHead m_sFxSystemList;
  CParticleData__LListHead m_sParticleList;
  int objects60b;
  CParticleData__LListHead listObjects60b;
  int m_wTxdIndex;
  void *m_pWindSpeed[3];
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int m_nCurrentMatrix;
  RwMatrix *m_pMatrix[8];
  SimpleBuffer m_sBuffer;
};
#pragma pack(pop)

/*  116 */
#pragma pack(push, 1)
struct CPedTaskAssignment
{
  int nTaskId;
  int field_4;
  int field_8;
  int pPed;
  int _status;
};
#pragma pack(pop)

/*  117 */
#pragma pack(push, 1)
struct CScriptThread
{
  int next;
  int prev;
  char threadName[8];
  int baseIp;
  int _ip;
  int stack[8];
  __int16 _sp;
  __int16 field_3A;
  int _tls[34];
  char isActive;
  char condResult;
  char field_C6;
  char external;
  char field_C8;
  char field_C9;
  char field_CA;
  char field_CB;
  int wakeTime;
  __int16 logicalOp;
  char notFlag;
  char wastedBustedCheckEnabled;
  char wastedOrBusted;
  char field_D5;
  __int16 field_D6;
  int ?sceneSkip;
  char field_DC;
  char field_DD;
  char field_DE;
  char field_DF;
};
#pragma pack(pop)

/*  118 */
#pragma pack(push, 1)
struct CAnimGroup
{
  char firstGroup;
  char secondGroup;
  __int16 field_2;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20[4];
  int field_30[4];
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
};
#pragma pack(pop)

/*  119 */
#pragma pack(push, 1)
struct CHandlingBoat
{
  int index;
  int thrustY;
  int thrustZ;
  int thrustAppZ;
  int aqPlaneForce;
  int aqPlaneLimit;
  int aqPlaneOffset;
  int waveAudioMult;
  int look_L_R_BehindCamHeight;
  RwV3D moveRes;
  RwV3D turnRes;
};
#pragma pack(pop)

/*  120 */
#pragma pack(push, 1)
struct CHandlingFlying
{
  int index;
  int thrust;
  int thrustFallOff;
  int yaw;
  int yawStab;
  int sideSlip;
  int roll;
  int rollStab;
  int pitch;
  int pitchStab;
  int formLift;
  int attackLift;
  int gearUpR;
  int gearDownL;
  int windMult;
  int moveRes;
  RwV3D turnRes;
  RwV3D speedRes;
};
#pragma pack(pop)

/*  121 */
#pragma pack(push, 1)
struct CHandlingBike
{
  int index;
  int leanFwdCOM;
  int leanFwdForce;
  int leanBakCOM;
  int leanBakForce;
  int maxLean;
  int fullAnimLean;
  int desLean;
  int speedSteer;
  int slipSteer;
  int noPlayerCOMz;
  int wheelieAng;
  int stoppieAng;
  int wheelieSteer;
  int wheelieStabMult;
  int stoppieStabMult;
};
#pragma pack(pop)

/*  122 */
#pragma pack(push, 1)
struct CTransmissionData
{
  TransmissionGear gears[6];
  char nDriveType;
  char nEngineType;
  char nNumberOfGears;
  char field_4B;
  int field_4C;
  int fEngineAcceleration;
  int fEngineInertia;
  int fMaxVelocity;
  int field_5C;
  int field_60;
  int field_64;
};
#pragma pack(pop)

/*  123 */
#pragma pack(push, 1)
struct CHandlingVehicle
{
  int index;
  float fMass;
  int field_8;
  float fTurnMass;
  float fDragMult;
  RwV3D centreOfMass;
  char nPercentSubmerged;
  char field_21;
  char field_22;
  char field_23;
  float fBuoyancyConstant;
  int fTractionMultiplier;
  CTransmissionData transmissionData;
  int fBrakeDeceleration;
  int fBrakeBias;
  char bABS;
  char field_9D;
  char field_9E;
  char field_9F;
  int fSteeringLock;
  int fTractionLoss;
  int fTractionBias;
  int fSuspensionForceLevel;
  int fSuspensionDampingLevel;
  int fSuspensionHighSpdComDamp;
  float fSuspensionUpperLimit;
  float fSuspensionLowerLimit;
  int fSuspensionBiasBetweenFrontAndRear;
  int fSuspensionAntiDiveMultiplier;
  int fCollisionDamageMultiplier;
  int modelFlags;
  int handlingFlags;
  int fSeatOffsetDistance;
  int nMonetaryValue;
  char frontLight;
  char rearLight;
  char animGroup;
  char field_DF;
};
#pragma pack(pop)

/*  124 */
#pragma pack(push, 1)
struct CHandlingData
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  CHandlingVehicle vehicleHandling[210];
  CHandlingBike bikeHandling[13];
  CHandlingFlying flyingHandling[24];
  CHandlingBoat boatHandling[12];
};
#pragma pack(pop)

/*  126 */
#pragma pack(push, 1)
struct CEvent
{
  int __vmt__;
  int field_4;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  char field_C;
  char field_D;
  __int16 field_E;
  __int16 field_10;
  __int16 field_12;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
  int field_34;
  int field_38;
  int field_3C;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
};
#pragma pack(pop)

/*  127 */
#pragma pack(push, 1)
struct CDummy
{
  int __vmt;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  __int16 field_20;
  __int16 field_22;
  int field_24;
  int field_28;
  __int16 field_2C;
  char field_2E;
  char field_2F;
  int field_30;
  char field_34;
  char field_35;
  char field_36;
  char field_37;
};
#pragma pack(pop)

/*  128 */
#pragma pack(push, 1)
struct CGarage
{
  RwV3D lowerLeft;
  RwV2D direction1;
  RwV2D direction2;
  int topZ;
  int normalizedWidth;
  int normalizedHeight;
  int leftCoord;
  int rightCoord;
  int frontCoord;
  int backCoord;
  int field_38;
  int field_3C;
  int field_40;
  char name[8];
  char field_4C;
  char garageStatus;
  char field_4E;
  char field_4F;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  int field_AC;
  int field_B0;
  int field_B4;
  int field_B8;
  int field_BC;
  int field_C0;
  int field_C4;
  int field_C8;
  int field_CC;
  int field_D0;
  int field_D4;
};
#pragma pack(pop)

/*  129 */
#pragma pack(push, 1)
struct CPlayer
{
  CPed *m_pPed;
  CPlayerData m_PlayerData;
  CVehicle *vehicle;
  int field_B4;
  int money;
  int m_MoneyAdded;
  int field_C0;
  int field_C4;
  int field_C8;
  int field_CC;
  int field_D0;
  char field_D4;
  char field_D5;
  __int16 __pad1;
  int field_D8;
  char isWastedBusted;
  char field_DD;
  char field_DE;
  char field_DF;
  int field_E0;
  int field_E4;
  int field_E8;
  int m_dwTimeLastShotRhino;
  int field_F0;
  int field_F4;
  int field_F8;
  int field_FC;
  int field_100;
  int field_104;
  int field_108;
  int field_10C;
  int field_110;
  int field_114;
  int trappedInCar;
  int field_11C;
  int field_120;
  int field_124;
  int field_128;
  int field_12C;
  __int16 field_130;
  char gap_132[2];
  int field_134;
  int field_138;
  int field_13C;
  int field_140;
  __int16 field_144;
  char gap_146[2];
  int field_148;
  char infiniteRun;
  char fastReload;
  char field_14E;
  char field_14F;
  char maxArmour;
  char field_151;
  char field_152;
  char field_153;
  __int16 field_154;
  __int16 field_156;
  RwV3D field_158;
  char m_SkinName[32];
  int m_pSkinTex;
  char field_188;
  char gap_189[3];
  int field_18C;
};
#pragma pack(pop)

/*  130 */
#pragma pack(push, 1)
struct CPlayerData
{
  CWanted *m_pWanted;
  CClothes *m_pClothes;
  int field_8;
  int field_C;
  int field_10;
  int m_nCrimeSensitivity;
  float m_fTimeCanRun;
  int field_1C;
  char field_20;
  char field_21;
  __int16 __pad1;
  int ?Idle2StartScreenSaver;
  int field_28;
  int field_2C;
  int field_30;
  int flags;
  int ?recruitesIndex;
  int nAdrenalineTime;
  char _isDrunk;
  char field_41;
  char field_42;
  char field_43;
  float fBreathMeter;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  float m_fMinigunRotation;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  CVector field_74;
  int field_80;
  char field_84;
  char bUsingCellphone;
  char field_86;
  char field_87;
  __int16 field_88;
  __int16 field_8A;
  char field_8C;
  char field_8D;
  char field_8E;
  char field_8F;
  int field_90;
  int field_94;
  int field_98;
  int lastModelShot;
  float field_A0;
  int field_A4;
  int field_A8;
};
#pragma pack(pop)

/*  131 */
#pragma pack(push, 1)
struct CExternalScripts
{
  CExternalScriptInfo scripts[82];
  int field_A40;
  __int16 field_A44;
  __int16 field_A46;
};
#pragma pack(pop)

/*  132 */
#pragma pack(push, 1)
struct CExternalScriptInfo
{
  void *data;
  char status;
  char field_5;
  __int16 wScmIndex;
  char name[20];
  int size;
};
#pragma pack(pop)

/*  133 */
#pragma pack(push, 1)
struct CTexDictionaryEntry
{
  RwTexDictionary *dictionary;
  __int16 usageCount;
  __int16 parentIndex;
  int hash;
};
#pragma pack(pop)

/*  134 */
#pragma pack(push, 1)
struct TablEntry
{
  char name[8];
  int offset;
};
#pragma pack(pop)

/*  135 */
#pragma pack(push, 1)
struct CText__TDat
{
  int data;
  int size;
};
#pragma pack(pop)

/*  136 */
#pragma pack(push, 1)
struct CText__TKey
{
  int data;
  int size;
};
#pragma pack(pop)

/*  137 */
#pragma pack(push, 1)
struct CText__Tabl
{
  TablEntry data[200];
  __int16 size;
  __int16 __pad;
};
#pragma pack(pop)

/*  138 */
#pragma pack(push, 1)
struct CText
{
  CText__TKey tkeyMain;
  CText__TDat tdatMain;
  CText__TKey tkeyMission;
  CText__TDat tdatMission;
  char field_20;
  char haveTabl;
  char cderrorInitialized;
  char missionLoaded;
  char missionName[8];
  char cderrorText[256];
  CText__Tabl tabl;
};
#pragma pack(pop)

/*  139 */
#pragma pack(push, 1)
struct struct_C92140
{
  int field_0;
  int field_4;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  int field_C;
};
#pragma pack(pop)

/*  140 */
#pragma pack(push, 1)
struct CMenuManager
{
  char field_0;
  char field_1[3];
  int statsScrollSpeed;
  char field_8;
  char field_9[23];
  char m_PrefsUseVibration;
  char field_21;
  char field_22[2];
  int m_dwRadarMode;
  char field_28[4];
  int field_2C;
  char field_30;
  char field_31;
  char field_32;
  char activateMenu;
  char menuAccessWidescreen;
  char field_35;
  char field_36[2];
  int field_38;
  int brightness;
  int drawDistance;
  char subtitlesOn;
  int field_45;
  char field_49;
  char legend;
  char widescreenOn;
  char frameLimiterOn;
  char field_4D;
  char field_4E;
  char sfxVolume;
  char radioVolume;
  char radioEq;
  char m_bRadioStation;
  char field_53;
  int m_dwSelectedMenuItem;
  char field_58;
  char drawRadarOrMap;
  char field_5A;
  char field_5B;
  char m_bMenuActive;
  char ?doGameReload;
  char field_5E;
  char isSaveDone;
  char m_bLoadingData;
  char field_61[3];
  float m_fMapZoom;
  float m_fMapX;
  float m_fMapY;
  CVector2D m_vMousePos;
  char field_78;
  char field_79[3];
  int titleLanguage;
  int textLanguage;
  char language;
  char prevLanguage;
  char field_86[2];
  int field_88;
  char field_8C;
  char field_8D[3];
  int field_90;
  char field_94[24];
  int field_AC;
  char field_B0;
  char invertPadX1;
  char invertPadY1;
  char invertPadX2;
  char invertPadY2;
  char swapPadAxis1;
  char swapPadAxis2;
  char field_B7;
  char field_B8;
  char field_B9[3];
  int mousePosLeft;
  int mousePosTop;
  char field_C4;
  char field_C5;
  char field_C6[2];
  int multisamplingLevelsAA;
  int prevmultisamplingLevelsAA;
  char useKeyboardAndMouse;
  char field_D1[3];
  int videoMode;
  int prevVideoMode;
  int field_DC;
  int mousePosLeftA;
  int mousePosTopA;
  char field_E8;
  char m_bMainMenuSwitch;
  char playerNumber;
  char field_EB;
  int field_EC;
  int field_F0;
  char field_F4;
  char field_F5[3];
  CSprite2d *textures[25];
  char texturesLoaded;
  char m_bCurrentMenuItem;
  char field_15E;
  char m_bSelectedSaveGame;
  char field_160;
  char field_161;
  char mpackName[8];
  char field_16A[6486];
  int field_1AC0;
  int field_1AC4;
  int field_1AC8;
  int field_1ACC;
  int field_1AD0;
  int field_1AD4;
  int field_1AD8;
  __int16 field_1ADC;
  char field_1ADE;
  char field_1ADF;
  int field_1AE0;
  int field_1AE4;
  char field_1AE8;
  char field_1AE9;
  char field_1AEA;
  char field_1AEB;
  int field_1AEC;
  char field_1AF0;
  char field_1AF1;
  char field_1AF2;
  char field_1AF3;
  int field_1AF4;
  int field_1AF8;
  int field_1AFC;
  int field_1B00;
  int field_1B04;
  char field_1B08;
  char field_1B09;
  char field_1B0A;
  char field_1B0B;
  int field_1B0C;
  char field_1B10;
  char field_1B11;
  char field_1B12;
  char field_1B13;
  char field_1B14;
  char field_1B15;
  char field_1B16;
  char field_1B17;
  int EventToDo;
  int field_1B1C;
  char field_1B20;
  char field_1B21;
  __int16 field_1B22;
  int field_1B24;
  char field_1B28;
  char field_1B29;
  __int16 field_1B2A;
  int field_1B2C;
  int field_1B30;
  __int16 field_1B34;
  __int16 field_1B36;
  int field_1B38;
  char field_1B3C;
  char field_1B3D;
  char field_1B3E;
  char field_1B3F;
  int field_1B40;
  char field_1B44;
  char field_1B45;
  __int16 field_1B46;
  int field_1B48;
  int field_1B4C;
  char field_1B50;
  char field_1B51;
  __int16 field_1B52;
  int field_1B54;
  int field_1B58;
  char field_1B5C;
  char field_1B5D;
  __int16 field_1B5E;
  int field_1B60;
  int field_1B64;
  int field_1B68;
  int field_1B6C;
  int field_1B70;
  int field_1B74;
};
#pragma pack(pop)

/*  141 */
#pragma pack(push, 1)
struct CMenuItem
{
  char name[8];
  char field_8;
  char field_9;
  CEntryData entryList[12];
};
#pragma pack(pop)

/*  142 */
#pragma pack(push, 1)
struct CEntryData
{
  char action;
  char description[8];
  char field_9;
  __int16 targetMenu;
  __int16 field_C;
  __int16 field_E;
  __int16 field_10;
};
#pragma pack(pop)

/*  143 */
#pragma pack(push, 1)
struct pair
{
  int keycode;
  int priority;
};
#pragma pack(pop)

/*  144 */
#pragma pack(push, 1)
struct CShoppingItemPrice
{
  int id;
  int price;
};
#pragma pack(pop)

/*  145 */
#pragma pack(push, 1)
struct CInputEvents__EventName
{
  char name[40];
};
#pragma pack(pop)

/*  146 */
#pragma pack(push, 1)
struct PadState
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  char buttonState[16];
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  int field_AC;
  int field_B0;
  int field_B4;
  int field_B8;
  int field_BC;
  int field_C0;
  int field_C4;
  int field_C8;
  int field_CC;
  int field_D0;
  int field_D4;
  int field_D8;
  int field_DC;
  int field_E0;
  int field_E4;
  int field_E8;
  int field_EC;
  int field_F0;
  int field_F4;
  int field_F8;
  int field_FC;
  int field_100;
  int field_104;
  int field_108;
  int field_10C;
};
#pragma pack(pop)

/*  147 */
#pragma pack(push, 1)
struct CInputEvents__Event
{
  pair data[4];
};
#pragma pack(pop)

/*  148 */
#pragma pack(push, 1)
struct CInputEvents
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  DIJOYSTATE2 prevPadState;
  DIJOYSTATE2 currPadState;
  CInputEvents__EventName eventNames[59];
  char field_B5C[17];
  char __pad2[3];
  CInputEvents__Event events[59];
  char field_12D0[16];
  char field_12E0;
  char __pad[3];
};
#pragma pack(pop)

/*  149 */
#pragma pack(push, 1)
struct gta_scm_object_name
{
  char name[24];
  int index;
};
#pragma pack(pop)

/*  150 */
#pragma pack(push, 1)
struct CDirectoryEntry
{
  int field_0;
  int field_4;
  char field_8[24];
};
#pragma pack(pop)

/*  151 */
#pragma pack(push, 1)
struct CImgDescriptor
{
  char name[40];
  char isNotPlayerImg;
  char __align[3];
  int streamHandle;
};
#pragma pack(pop)

/*  152 */
#pragma pack(push, 1)
struct CDirectory
{
  int m_pEntries;
  int m_dwSize;
  int m_dwCount;
  char m_bDynamicAllocated;
  char __pad[3];
};
#pragma pack(pop)

/*  153 */
#pragma pack(push, 1)
struct CAudioStream
{
  int __vmt;
  int handle;
  int filename;
  char opened;
  char __pad[3];
  int currentPosition;
  int startPosition;
  int length;
  int id;
  char encrypted;
  char __pad2[3];
  int refCount;
};
#pragma pack(pop)

/*  154 */
#pragma pack(push, 1)
struct CString
{
  char field_0[8];
};
#pragma pack(pop)

/*  155 */
#pragma pack(push, 1)
struct VehicleReportTable
{
  __int16 field_0[4];
  __int16 field_8[24];
  CString mapZones[194];
  __int16 field_648[196];
  char field_7D0[200];
  __int16 _vehicleReportSounds[46];
  char _flags[52];
  __int16 _colors[128];
};
#pragma pack(pop)

/*  156 */
#pragma pack(push, 1)
struct CZoneExtraInfo
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  int field_4;
  __int16 field_8;
  char pedgroupWealth;
  RwRGBA color;
  char field_F;
  char field_10;
};
#pragma pack(pop)

/*  157 */
#pragma pack(push, 1)
struct CZone
{
  char name[8];
  char text[8];
  __int16 x1;
  __int16 y1;
  __int16 z1;
  __int16 x2;
  __int16 y2;
  __int16 z2;
  __int16 _zoneExtraIndexInfo;
  char type;
  char townNumber;
};
#pragma pack(pop)

/*  158 */
#pragma pack(push, 1)
struct CSurfaceType
{
  char tyreGrip;
  char wetGrip;
  __int16 pad;
  int flags1;
  int flags2;
};
#pragma pack(pop)

/*  159 */
#pragma pack(push, 1)
struct CSurface
{
  int surface[36];
  CSurfaceType surfType[179];
};
#pragma pack(pop)

/*  160 */
#pragma pack(push, 1)
struct CPatrolRoute
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  int field_AC;
  int field_B0;
  int field_B4;
  int field_B8;
  int field_BC;
  int field_C0;
  int field_C4;
  int field_C8;
  int field_CC;
  int field_D0;
  int field_D4;
  int field_D8;
  int field_DC;
  int field_E0;
  int field_E4;
  int field_E8;
  int field_EC;
  int field_F0;
  int field_F4;
  int field_F8;
  int field_FC;
  int field_100;
  int field_104;
  int field_108;
  int field_10C;
  int field_110;
  int field_114;
  int field_118;
  int field_11C;
  int field_120;
  int field_124;
  int field_128;
  int field_12C;
  int field_130;
  int field_134;
  int field_138;
  int field_13C;
  int field_140;
  int field_144;
  int field_148;
  int field_14C;
  int field_150;
  int field_154;
  int field_158;
  int field_15C;
  int field_160;
  int field_164;
  int field_168;
  int field_16C;
  int field_170;
  int field_174;
  int field_178;
  int field_17C;
  int field_180;
  int field_184;
  int field_188;
  int field_18C;
  int field_190;
  int field_194;
  int field_198;
  int field_19C;
  int field_1A0;
};
#pragma pack(pop)

/*  161 */
#pragma pack(push, 1)
struct CStuntJump
{
  RwV3D startLowerLeft;
  RwV3D startUpperRight;
  RwV3D landLowerLeft;
  RwV3D landUpperRight;
  RwV3D camera;
  int reward;
  char done;
  char found;
  char field_42;
  char field_43;
};
#pragma pack(pop)

/*  162 */
#pragma pack(push, 1)
struct CNodeRoute
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
};
#pragma pack(pop)

/*  163 */
#pragma pack(push, 1)
struct CPointRoute
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
};
#pragma pack(pop)

/*  164 */
#pragma pack(push, 1)
struct CCollisionFile
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  __int16 field_20;
  __int16 field_22;
  __int16 field_24;
  __int16 field_26;
  char field_28;
  char field_29;
  char field_2A;
  char field_2B;
};
#pragma pack(pop)

/*  165 */
#pragma pack(push, 1)
struct CQuadTreeNode
{
  CRect field_0;
  int field_10;
  int children[4];
  int field_24;
};
#pragma pack(pop)

/*  166 */
#pragma pack(push, 1)
struct CPtrNodeSingle
{
  int ptr;
  int next;
};
#pragma pack(pop)

/*  167 */
#pragma pack(push, 1)
struct CPtrNodeDouble
{
  CEntity *ptr;
  int next;
  int prev;
};
#pragma pack(pop)

/*  168 */
#pragma pack(push, 1)
struct CPlayerData_2
{
  int field_0[6];
  int field_18[128];
  __int16 field_218;
  __int16 field_21A;
  __int16 field_21C;
  __int16 field_21E;
  __int16 field_220;
  __int16 field_222;
  __int16 field_224;
  __int16 field_226;
  __int16 field_228;
  __int16 field_22A;
  __int16 field_22C;
  __int16 field_22E;
  __int16 field_230;
  __int16 field_232;
  __int16 field_234;
  __int16 field_236;
  __int16 field_238;
  __int16 field_23A;
  __int16 field_23C;
  __int16 field_23E;
  __int16 field_240;
  __int16 field_242;
  __int16 field_244;
  __int16 field_246;
  __int16 field_248;
  __int16 field_24A;
  __int16 field_24C;
  __int16 field_24E;
  __int16 field_250;
  __int16 field_252;
  __int16 field_254;
  __int16 field_256;
  __int16 field_258;
  __int16 field_25A;
  __int16 field_25C;
  __int16 field_25E;
  __int16 field_260;
  __int16 field_262;
  __int16 field_264;
  __int16 field_266;
  __int16 field_268;
  __int16 field_26A;
  __int16 field_26C;
  __int16 field_26E;
};
#pragma pack(pop)

/*  169 */
#pragma pack(push, 1)
struct CPool
{
  int objects;
  char *flags;
  int size;
  int top;
  char initialized;
  char field_11;
  __int16 _pad;
};
#pragma pack(pop)

/*  170 */
#pragma pack(push, 1)
struct CPad
{
  PadData padState;
  PadData prevPadState;
  __int16 field_60[10];
  int field_74;
  PadData padStateKbd1;
  PadData padStateKbd2;
  PadData field_D8;
  char field_108;
  char field_109;
  __int16 field_10A;
  __int16 field_10C;
  __int16 field_10E;
  char field_110;
  int field_111;
  char field_115;
  char field_116;
  char menuActive;
  char field_118;
  char field_119;
  char field_11A;
  char field_11B;
  char field_11C;
  char field_11D;
  char field_11E;
  char field_11F;
  int padQueryTime;
  int field_124;
  int field_128;
  int field_12C;
  char field_130;
  char field_131;
  __int16 field_132;
};
#pragma pack(pop)

/*  171 */
#pragma pack(push, 1)
struct PadData
{
  __int16 field_0;
  __int16 field_2;
  __int16 field_4;
  __int16 field_6;
  __int16 field_8;
  __int16 field_A;
  __int16 field_C;
  __int16 field_E;
  __int16 field_10;
  __int16 field_12;
  __int16 field_14;
  __int16 field_16;
  __int16 field_18;
  __int16 field_1A;
  __int16 field_1C;
  __int16 field_1E;
  __int16 field_20;
  __int16 field_22;
  __int16 field_24;
  __int16 field_26;
  __int16 field_28;
  __int16 field_2A;
  __int16 field_2C;
  __int16 field_2E;
};
#pragma pack(pop)

/*  172 */
#pragma pack(push, 1)
struct CMouseState
{
  char lmb;
  char rmb;
  char mmb;
  char wheelUp;
  char wheelDown;
  char bmx1;
  char bmx2;
  char __align;
  int Z;
  int X;
  int Y;
};
#pragma pack(pop)

/*  173 */
#pragma pack(push, 1)
struct CKeyState
{
  __int16 FKeys[12];
  __int16 standardKeys[256];
  __int16 esc;
  __int16 insert;
  __int16 del;
  __int16 home;
  __int16 end;
  __int16 pgup;
  __int16 pgdn;
  __int16 up;
  __int16 down;
  __int16 left;
  __int16 right;
  __int16 scroll;
  __int16 pause;
  __int16 numlock;
  __int16 div;
  __int16 mul;
  __int16 sub;
  __int16 add;
  __int16 enter;
  __int16 decimal;
  __int16 num1;
  __int16 num2;
  __int16 num3;
  __int16 num4;
  __int16 num5;
  __int16 num6;
  __int16 num7;
  __int16 num8;
  __int16 num9;
  __int16 num0;
  __int16 back;
  __int16 tab;
  __int16 capslock;
  __int16 extenter;
  __int16 lshift;
  __int16 rshift;
  __int16 shift;
  __int16 lctrl;
  __int16 rctrl;
  __int16 lmenu;
  __int16 rmenu;
  __int16 lwin;
  __int16 rwin;
  __int16 apps;
};
#pragma pack(pop)

/*  174 */
#pragma pack(push, 1)
struct CEventGroup
{
  int __vmt;
  int pPed;
  int count;
  int pEvents[16];
};
#pragma pack(pop)

/*  175 */
#pragma pack(push, 1)
struct CPedEvent_DM_EventData
{
  int field_0[6];
  char field_18;
  char field_19;
  char field_1A;
  char field_1B;
  int field_1C[4];
  int field_2C;
  char field_30;
  char field_31;
  __int16 field_32[4];
  __int16 field_3A;
};
#pragma pack(pop)

/*  176 */
#pragma pack(push, 1)
struct CPedEvent_DM_List
{
  CPedEvent_DM_EventData field_0[41];
};
#pragma pack(pop)

/*  177 */
#pragma pack(push, 1)
struct CPedEventList
{
  int eventIds[96];
};
#pragma pack(pop)

/*  178 */
#pragma pack(push, 1)
struct CDecisionMakerMgr
{
  int field_0;
  CPedEvent_DM_List decisionMakers[20];
  CPedEventList pedEventList;
  CPedEvent_DM_List field_C1B4;
  CPedEvent_DM_List field_CB50;
  CPedEvent_DM_List field_D4EC;
  CPedEvent_DM_List field_DE88;
  CPedEvent_DM_List field_E824;
};
#pragma pack(pop)

/*  179 */
#pragma pack(push, 1)
struct CPedAcquaintances
{
  int count;
  CPedAcquaintance objects[32];
};
#pragma pack(pop)

/*  180 */
#pragma pack(push, 1)
struct CPedAcquaintance
{
  int respect;
  int like;
  int field_8;
  int dislike;
  int hate;
};
#pragma pack(pop)

/*  181 */
#pragma pack(push, 1)
struct CPedStats
{
  int nNum;
  char sName[24];
  int fFleeDistance;
  int fHeadingChangeRate;
  char bFear;
  char bTemper;
  char bLawfullness;
  char bSexiness;
  int fAttackStrenght;
  int fDefendWeakness;
  __int16 wShootingRate;
  char bDecision;
  char field_33;
};
#pragma pack(pop)

/*  182 */
#pragma pack(push, 1)
struct CMissionCleanup
{
  char type;
  char __pad[3];
  int handle;
};
#pragma pack(pop)

/*  183 */
#pragma pack(push, 1)
struct GTA_STREAM
{
  int nSectorOffset;
  int nSectorsToRead;
  int lpBuffer;
  char field_C;
  char bLocked;
  char bInUse;
  char field_F;
  int status;
  int hSemaphore;
  int hFile;
  OVERLAPPED overlapped;
};
#pragma pack(pop)

/*  184 */
#pragma pack(push, 1)
struct D3DINDEXBUFFER_DESC
{
  int Format;
  int Type;
  int Usage;
  int Pool;
  int Size;
};
#pragma pack(pop)

/*  185 */
#pragma pack(push, 1)
struct RpHAnimHierarchy
{
  int flags;
  int numNodes;
  RwMatrix *pMatrixArray;
  void *pMatrixArrayUnaligned;
  RpHAnimNodeInfo *pNodeInfo;
  RwFrame *parentFrame;
  RpHAnimHierarchy *parentHierarchy;
  int rootParentOffset;
  RtAnimInterpolator *currentAnim;
};
#pragma pack(pop)

/*  186 */
#pragma pack(push, 1)
struct RwResEntry
{
  RwLLLink link;
  int size;
  int owner;
  int ownerRef;
  int destroyNotify;
  RxD3D9ResEntryHeader header;
  RxD3D9InstanceData meshData;
};
#pragma pack(pop)

/*  187 */
#pragma pack(push, 1)
struct RwD3D9Vertex
{
  RwV3D pos;
  float rhw;
  int color;
  RwTexCoords texCoors;
};
#pragma pack(pop)

/*  188 */
#pragma pack(push, 1)
struct RxD3D9VertexStream
{
  IDirect3DVertexBuffer9 *vertexBuffer;
  int offset;
  int stride;
  __int16 geometryFlags;
  char managed;
  char dynamicLock;
};
#pragma pack(pop)

/*  189 */
#pragma pack(push, 1)
struct RwVideoMode
{
  int width;
  int height;
  int depth;
  int flag;
  int refRate;
  int format;
};
#pragma pack(pop)

/*  190 */
#pragma pack(push, 1)
struct rwFrameList
{
  int frames;
  int numFrames;
};
#pragma pack(pop)

/*  191 */
#pragma pack(push, 1)
struct RwImage
{
  int flags;
  int width;
  int height;
  int depth;
  int stride;
  int cpPixels;
  int palette;
};
#pragma pack(pop)

/*  192 */
#pragma pack(push, 1)
struct RwTexDictionary
{
  RwObject object;
  RwLinkList texturesInDict;
  RwLLLink lInInstance;
};
#pragma pack(pop)

/*  193 */
#pragma pack(push, 1)
struct RwPlane
{
  RwV3D normal;
  int distance;
};
#pragma pack(pop)

/*  194 */
#pragma pack(push, 1)
struct RwFrustumPlane
{
  RwPlane plane;
  char closestX;
  char closestY;
  char closestZ;
  char pad;
};
#pragma pack(pop)

/*  195 */
#pragma pack(push, 1)
struct RwCamera
{
  RwObjectHasFrame object;
  int projectionType;
  int (*beginUpdate)(void);
  int (*endUpdate)(void);
  RwMatrix viewMatrix;
  RwRaster *frameBuffer;
  int zBuffer;
  RwV2D viewWindow;
  RwV2D recipViewWindow;
  RwV2D viewOffset;
  float nearPlane;
  float farPlane;
  float fogPlane;
  int zScale;
  int zShift;
  RwFrustumPlane frustrumPlanes[6];
  RwBBox frustrumBoundBox;
  RwV3D frustrumCorners[8];
};
#pragma pack(pop)

/*  196 */
#pragma pack(push, 1)
struct RwChunkHeaderInfo
{
  int type;
  int length;
  int version;
  int buildNum;
  int isComplex;
};
#pragma pack(pop)

/*  197 */
#pragma pack(push, 1)
struct RxIoSpec
{
  int numClustersOfInterest;
  int clustersOfInterest;
  int inputRequirements;
  int numOutputs;
  int outputs;
};
#pragma pack(pop)

/*  198 */
#pragma pack(push, 1)
struct RxNodeMethods
{
  void *nodeBody;
  void *nodeInit;
  void *nodeTerm;
  void *pipelineNodeInit;
  void *pipelineNodeTerm;
  void *pipelineNodeConfig;
  void *configMsgHandler;
};
#pragma pack(pop)

/*  199 */
#pragma pack(push, 1)
struct RxNodeDefinition
{
  char *name;
  RxNodeMethods nodeMethods;
  RxIoSpec io;
  int pipelineNodePrivateDataSize;
  int editable;
  int InputPipesCnt;
};
#pragma pack(pop)

/*  200 */
#pragma pack(push, 1)
struct RxPipeline
{
  int locked;
  int numNodes;
  void *nodes;
  int packetNumClusterSlots;
  int embeddedPacketState;
  int embeddedPacket;
  int numInputRequirements;
  int inputRequirements;
  int superBlock;
  int superBlockSize;
  int entryPoint;
  int pluginId;
  int pluginData;
};
#pragma pack(pop)

/*  201 */
#pragma pack(push, 1)
struct RxPipelineNode
{
  RxNodeDefinition *nodeDef;
  int numOutputs;
  int *outputs;
  int slotClusterRefs;
  int *slotsContinue;
  RxPipelineNodePrivateData *privateData;
  int *inputToClusterSlot;
  void *topSortData;
  void *initializationData;
  int initializationDataSize;
};
#pragma pack(pop)

/*  202 */
#pragma pack(push, 1)
struct RwBBox
{
  RwV3D sup;
  RwV3D inf;
};
#pragma pack(pop)

/*  203 */
#pragma pack(push, 1)
struct RpWorld
{
  RwObject object;
  int flags;
  int renderOrder;
  RpMaterialList matList;
  int rootSector;
  int numTexCoordSets;
  int numClumpsInWorld;
  int currentClumpLink;
  RwLinkList clumpList;
  RwLinkList lightList;
  RwLinkList directionalLightList;
  RwV3D worldOrigin;
  RwBBox boundingBox;
  int renderCallback;
  int pipeline;
};
#pragma pack(pop)

/*  204 */
#pragma pack(push, 1)
struct RpInterpolator
{
  int flags;
  __int16 startMorphTarget;
  __int16 endMorphTarget;
  int time;
  int recipTime;
  int position;
};
#pragma pack(pop)

/*  205 */
#pragma pack(push, 1)
struct RpMaterialList
{
  RpMaterial **materials;
  int numMaterials;
  int space;
};
#pragma pack(pop)

/*  206 */
#pragma pack(push, 1)
struct RwTexCoords
{
  float u;
  float v;
};
#pragma pack(pop)

/*  207 */
#pragma pack(push, 1)
struct RpMorphTarget
{
  int parentGeom;
  RwSphere boundingSphere;
  void *verts;
  int normals;
};
#pragma pack(pop)

/*  208 */
#pragma pack(push, 1)
struct RwStreamMemory
{
  int type;
  int accessType;
  int position;
  int memPosition;
  int memSize;
  int memPtr;
  int field_18;
  int field_1C;
  int rwOwned;
};
#pragma pack(pop)

/*  209 */
#pragma pack(push, 1)
struct RwStreamFile
{
  int type;
  int accessType;
  int position;
  int fpFile;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int rwOwned;
};
#pragma pack(pop)

/*  210 */
#pragma pack(push, 1)
struct RwStream
{
  int type;
  int accessType;
  int position;
  RwStreamMemory field_C;
};
#pragma pack(pop)

/*  211 */
#pragma pack(push, 1)
struct RpTriangle
{
  __int16 vertIndex[3];
  WORD matIndex;
};
#pragma pack(pop)

/*  212 */
#pragma pack(push, 1)
struct RpGeometry
{
  RwObject object;
  int flags;
  __int16 lockedSinceLastInst;
  __int16 refCount;
  int numTriangles;
  int numVertices;
  int numMorphTargets;
  int numTexCoordSets;
  RpMaterialList matList;
  int triangles;
  RwRGBA *preLitLum;
  int texCoords[8];
  RpMeshHeader *mesh;
  RwResEntry *resEntry;
  RpMorphTarget *morphTarget;
};
#pragma pack(pop)

/*  213 */
#pragma pack(push, 1)
struct RpClump
{
  RwObject object;
  RwLinkList atomicList;
  RwLinkList lightList;
  RwLinkList cameraList;
  RwLLLink inWorldLink;
  int callback;
};
#pragma pack(pop)

/*  214 */
#pragma pack(push, 1)
struct RwSphere
{
  RwV3D center;
  float radius;
};
#pragma pack(pop)

/*  215 */
#pragma pack(push, 1)
struct RpAtomic
{
  RwObjectHasFrame object;
  int repEntry;
  RpGeometry *geometry;
  RwSphere boundingSphere;
  void *worldBoundingSphere[4];
  RpClump *clump;
  RwLLLink inClumpLink;
  int (__cdecl *renderCallback)(_DWORD);
  RpInterpolator interpolator;
  __int16 renderFrame;
  __int16 pad;
  RwLinkList llWorldSectorsInAtomic;
  int pipeline;
  char field_70;
};
#pragma pack(pop)

/*  216 */
#pragma pack(push, 1)
struct RpMaterial
{
  RwTexture *texture;
  RwRGBA color;
  int pipeline;
  RwSurfaceProperties surfaceProps;
  __int16 refCount;
  __int16 pad;
};
#pragma pack(pop)

/*  217 */
#pragma pack(push, 1)
struct RwSurfaceProperties
{
  float ambient;
  DWORD flags;
  float diffuse;
};
#pragma pack(pop)

/*  218 */
#pragma pack(push, 1)
struct RwFrame
{
  RwObject object;
  RwLLLink inDirtyListLink;
  RwMatrix modelling;
  RwMatrix ltm;
  RwLinkList objectList;
  RwFrame *child;
  RwFrame *next;
  RwFrame *root;
  char pluginData[8];
  char nodeName[16];
};
#pragma pack(pop)

/*  219 */
#pragma pack(push, 1)
struct RpLight
{
  RwObjectHasFrame object;
  int radius;
  RwRGBAReal color;
  int minusCosAngle;
  RwLinkList WorldSectorsInLight;
  RwLLLink inWorld;
  int lightFrame;
};
#pragma pack(pop)

/*  220 */
#pragma pack(push, 1)
struct RwRGBA
{
  unsigned __int8 red;
  unsigned __int8 green;
  unsigned __int8 blue;
  unsigned __int8 alpha;
};
#pragma pack(pop)

/*  221 */
#pragma pack(push, 1)
struct RwRGBAReal
{
  float red;
  float green;
  float blue;
  float alpha;
};
#pragma pack(pop)

/*  222 */
#pragma pack(push, 1)
struct RwObject
{
  char type;
  char subType;
  char flags;
  char privateFlags;
  RwFrame *parent;
};
#pragma pack(pop)

/*  223 */
#pragma pack(push, 1)
struct RwObjectHasFrame
{
  RwObject object;
  RwLLLink lFrame;
  int sync;
};
#pragma pack(pop)

/*  224 */
#pragma pack(push, 1)
struct RwLinkList
{
  RwLLLink link;
};
#pragma pack(pop)

/*  225 */
struct RtAnimInterpolatorInfo
{
  __int32 typeID;
  __int32 interpKeyFrameSize;
  __int32 animKeyFrameSize;
  void *keyFrameApplyCB;
  void *keyFrameBlendCB;
  void *keyFrameInterpolateCB;
  void *keyFrameAddCB;
  void *keyFrameMulRecipCB;
  void *keyFrameStreamReadCB;
  void *keyFrameStreamWriteCB;
  void *keyFrameStreamGetSizeCB;
  __int32 customDataSize;
};

/*  226 */
#pragma pack(push, 1)
struct RwLLLink
{
  RwTexture *next;
  int prev;
};
#pragma pack(pop)

/*  227 */
#pragma pack(push, 1)
struct RwTexture
{
  RwRaster *raster;
  RwTexDictionary *dict;
  RwLLLink lInDictionary;
  char name[32];
  char mask[32];
  char filterAddressing;
  char _f51;
  char field_52;
  char field_53;
  int m_bCounter;
};
#pragma pack(pop)

/*  228 */
#pragma pack(push, 1)
struct RxObjSpace3dVertex
{
  RwV3D pos;
  RwV3D objNormal;
  int color;
  float u;
  float v;
};
#pragma pack(pop)

/*  229 */
#pragma pack(push, 1)
struct RwMatrix
{
  RwV3D right;
  int flags;
  RwV3D top;
  int pad1;
  RwV3D at;
  int pad2;
  RwV3D pos;
  int pad3;
};
#pragma pack(pop)

/*  230 */
#pragma pack(push, 1)
struct RwRect
{
  float x1;
  float y1;
  float x2;
  float y2;
};
#pragma pack(pop)

/*  231 */
#pragma pack(push, 1)
struct RtQuat
{
  RwV3D imag;
  float real;
};
#pragma pack(pop)

/*  232 */
#pragma pack(push, 1)
struct RwV4D
{
  int x;
  int y;
  int z;
  int w;
};
#pragma pack(pop)

/*  233 */
#pragma pack(push, 1)
struct RwV3D
{
  float x;
  float y;
  float z;
};
#pragma pack(pop)

/*  234 */
#pragma pack(push, 1)
struct RwV2D
{
  float x;
  float y;
};
#pragma pack(pop)

/*  235 */
#pragma pack(push, 1)
struct RwRaster
{
  int parent;
  char *cpPixels;
  int palette;
  int width;
  int height;
  int depth;
  int stride;
  __int16 nOffsetX;
  __int16 nOffsetY;
  char cType;
  char cFlags;
  char privateFlags;
  char cFormat;
  int originalPixels;
  int originalWidth;
  int originalHeight;
  int oriiginalStride;
};
#pragma pack(pop)

/*  236 */
#pragma pack(push, 1)
struct CPadConfig
{
  int field_0;
  char present;
  char zaxisPresent;
  char rzAxisPresent;
  char __align;
  int vendorId;
  int productId;
};
#pragma pack(pop)

/*  237 */
#pragma pack(push, 1)
struct PsGlobalType
{
  int window;
  int instance;
  int fullscreen;
  int lastMousePos_X;
  int lastMousePos_Y;
  int field_14;
  int diInterface;
  int diMouse;
  int diDevice1;
  int diDevice2;
};
#pragma pack(pop)

/*  238 */
#pragma pack(push, 1)
struct RsInputDevice
{
  int inputDeviceType;
  int used;
  int inputEventHandler;
};
#pragma pack(pop)

/*  239 */
#pragma pack(push, 1)
struct RsGlobalType
{
  void *AppName;
  int MaximumWidth;
  int MaximumHeight;
  int frameLimit;
  int quit;
  int ps;
  RsInputDevice keyboard;
  RsInputDevice mouse;
  RsInputDevice pad;
};
#pragma pack(pop)

/*  240 */
#pragma pack(push, 1)
struct RwTextureModule
{
  RwLLLink txdList;
  int textureFreeList;
  int texDictFreeList;
  int currentTxd;
  int readCB;
  int findCB;
  int enableMipmapping;
  int autoMipmapping;
  int field_24;
  int field_28;
  int rasterBuildMipmapCB;
  int mipmapNameCB;
};
#pragma pack(pop)

/*  241 */
#pragma pack(push, 1)
struct RxHeap
{
  int superBlockSize;
  int head;
  int headBlocks;
  int freeBlocks;
  int entriesAlloced;
  int entriesUsed;
  int dirty;
};
#pragma pack(pop)

/*  242 */
#pragma pack(push, 1)
struct rxHeapBlockHeader
{
  int prev;
  int next;
  int size;
  int freeEntry;
  int _pad[4];
};
#pragma pack(pop)

/*  243 */
#pragma pack(push, 1)
struct rxHeapSuperBlockDescriptor
{
  int start;
  int size;
  int next;
};
#pragma pack(pop)

/*  244 */
#pragma pack(push, 1)
struct RxPipelineNodeParam
{
  int dataParam;
  int heap;
};
#pragma pack(pop)

/*  245 */
#pragma pack(push, 1)
struct RxPipelineModule
{
  int rxPipesFreeList;
  RxRenderStateVector vector;
  int field_30;
  int field_34;
  int maxNodes;
  int pPipeline;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
};
#pragma pack(pop)

/*  246 */
#pragma pack(push, 1)
struct RxRenderStateVector
{
  int flags;
  int shadeMode;
  int srcBlend;
  int dstBlend;
  int textureRaster;
  int addressModeU;
  int addressModeV;
  int filterMode;
  RwRGBA borderColor;
  int fogType;
  RwRGBA fogColor;
};
#pragma pack(pop)

/*  247 */
#pragma pack(push, 1)
struct RwRasterModule
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int currentContext;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  char field_4C;
  char field_4D;
  char field_4E;
  char field_4F;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int rasterFreeList;
};
#pragma pack(pop)

/*  248 */
#pragma pack(push, 1)
struct RwResources
{
  int maxSize;
  int currentSize;
  int reusageSize;
  int memHeap;
  RwLinkList entriesA;
  RwLinkList entriesB;
  int freeEntries;
  int usedEntries;
};
#pragma pack(pop)

/*  249 */
#pragma pack(push, 1)
struct RwStringFunctions
{
  int (*vecSprintf)(_DWORD, const char *, ...);
  int vecVsprintf;
  void (__cdecl *vecStrcpy)(int *, char *);
  int vecStrncpy;
  int (__cdecl *vecStrcat)(_DWORD, _DWORD);
  int vecStrncat;
  int vecStrrchr;
  int vecStrchr;
  int vecStrstr;
  int (__cdecl *vecStrcmp)(_DWORD, _DWORD);
  int vecStrncmp;
  int vecStricmp;
  int (__cdecl *vecStrlen)(_DWORD);
  int vecStrupr;
  int vecStrlwr;
  int vecStrtok;
  int vecSscanf;
};
#pragma pack(pop)

/*  250 */
#pragma pack(push, 1)
struct RwMemoryFunctions
{
  void *(__cdecl *rwmalloc)(int, unsigned int);
  int (__cdecl *rwfree)(_DWORD);
  int (__cdecl *rwrealloc)(_DWORD, _DWORD, _DWORD);
  int rwcalloc;
};
#pragma pack(pop)

/*  251 */
#pragma pack(push, 1)
struct RwPluginRegEntry
{
  int offset;
  int sizeOfStruct;
  int pluginID;
  int readCB;
  int writeCB;
  int getSizeCB;
  int alwaysCB;
  int rightsCB;
  int constructCB;
  int destructCB;
  int copyCB;
  int errStrCB;
  int nextRegEntry;
  int prevregEntry;
  int parentRegistry;
};
#pragma pack(pop)

/*  252 */
#pragma pack(push, 1)
struct RwPluginRegistry
{
  int sizeOfStruct;
  int origSizeOfStruct;
  int maxSizeOfStruct;
  int staticAlloc;
  int firstRegEntry;
  RwPluginRegistry **lastRegEntry;
};
#pragma pack(pop)

/*  253 */
#pragma pack(push, 1)
struct RwDevice
{
  int gammaCorrection;
  int fpSystem;
  float zBufferNear;
  float zBufferFar;
  int (__cdecl *fpRenderStateSet)(_DWORD, _DWORD);
  int (__cdecl *fpRenderStateGet)(_DWORD, _DWORD);
  int (*fpIm2DRenderLine)(void);
  int (*fpIm2DRenderTriangle)(void);
  int (*fpIm2DRenderPrimitive)(void);
  int (*fpIm2DRenderIndexedPrimitive)(void);
  void *fpIm3DRenderLine;
  void *fpIm3DRenderTriangle;
  void *fpIm3DRenderPrimitive;
  void *fpIm3DRenderIndexedPrimitive;
};
#pragma pack(pop)

/*  254 */
#pragma pack(push, 1)
struct RwFileFunction
{
  int (__cdecl *field_0)(int *);
  int (__cdecl *rwfopen)(_DWORD, _DWORD);
  int rwfclose;
  int rwfread;
  int rwfwrite;
  int rwfgets;
  int field_18;
  int rwfeof;
  int (__cdecl *rwfseek)(_DWORD, _DWORD, _DWORD);
  int field_24;
  int (__cdecl *rwftell)(_DWORD);
};
#pragma pack(pop)

/*  255 */
#pragma pack(push, 1)
struct RwGlobals
{
  RwCamera *curCamera;
  int curWorld;
  __int16 renderFrame;
  __int16 lightFrame;
  int pad;
  RwDevice dOpenDevice;
  int field_48;
  int _cameraBeginUpdate;
  int _rgbToPixel;
  int _pixelToRgb;
  int _rasterCreate;
  int (__cdecl *_rasterDestroy)(_DWORD, _DWORD, _DWORD);
  int _getImageFromRaster;
  int (__cdecl *_setRasterFromImage)(_DWORD, _DWORD, _DWORD);
  int _textureSetRaster;
  int _findRasterFormat;
  int _cameraEndUpdate;
  int _setRasterContext;
  int _rasterSubraster;
  int _rasterClearRect;
  int _rasterClear;
  int (__cdecl *_rasterLock)(_DWORD, _DWORD, _DWORD);
  int _rasterUnlock;
  int (__cdecl *_rasterRender)(_DWORD, _DWORD, _DWORD);
  int _rasterRenderScaled;
  int (__cdecl *_rasterRenderFast)(_DWORD, _DWORD, _DWORD);
  int _rasterShowRaster;
  int _cameraClear;
  int _hintRenderF2B;
  int _rasterLockPalette;
  int _rasterUnlockPalette;
  int _nativeTextureGetSize;
  int (__cdecl *_nativeTextureRead)(_DWORD, _DWORD, _DWORD);
  int _nativeTextureWrite;
  int _rasterGetMipLevels;
  RwLinkList dirtyFrameList;
  RwFileFunction fileFuncs;
  RwStringFunctions stringFuncs;
  RwMemoryFunctions memoryFuncs;
  void *(__cdecl *memoryAlloc)(void *freeList, int size);
  int (__cdecl *memoryFree)(_DWORD, _DWORD);
  int metrics;
  int engineStatus;
  int resArenaSize;
};
#pragma pack(pop)

/*  256 */
#pragma pack(push, 1)
struct AudioFileExt
{
  char ext[8];
  int type;
};
#pragma pack(pop)

/*  257 */
#pragma pack(push, 1)
struct CAudioFile
{
  int __vmt__;
  int stream;
};
#pragma pack(pop)

/*  258 */
#pragma pack(push, 1)
struct CAudioFileVtbl
{
  int init;
  int read;
  int getTotlaTimeInMS;
  int getCurrentTimeInMS;
  int seek;
  int getSamplingRate;
  int destructor;
  int getId;
};
#pragma pack(pop)

/*  259 */
#pragma pack(push, 1)
struct CAudioFileQT
{
  CAudioFile __parent;
  int field_8;
  char field_C;
  char field_D;
  char field_E;
  char field_F;
  int field_10;
  int field_14;
  int field_18;
  int field_1C[7];
  int field_38;
  int field_3C;
  __int16 field_40;
  __int16 field_42;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  char field_AC;
  char field_AD;
  char field_AE;
  char field_AF;
  int field_B0;
  int field_B4;
  int field_B8;
  int field_BC;
  int field_C0;
};
#pragma pack(pop)

/*  260 */
#pragma pack(push, 1)
struct CAudioFileWav
{
  CAudioFile __parent;
  char initialized;
  char __pad[3];
  int stream_;
  char headerBuf[44];
};
#pragma pack(pop)

/*  261 */
#pragma pack(push, 1)
struct CAudioFileWindowsMedia
{
  CAudioFile __parent;
};
#pragma pack(pop)

/*  262 */
#pragma pack(push, 1)
struct CAudioFileVorbis
{
  CAudioFile __parent;
  ov_callbacks callbacks;
  int vf;
  char initialized;
  char field_1D;
  char field_1E;
  char field_1F;
  int datasource;
  int vorbisInfo;
};
#pragma pack(pop)

/*  263 */
#pragma pack(push, 1)
struct RwPluginEntry
{
  int offset;
  int size;
  int pluginID;
  int readCB;
  int writeCB;
  int getSizeCB;
  int alwaysCB;
  int rightsCB;
  int constructCB;
  int destructCB;
  int copyCB;
  int errStrCB;
  int nextRegEntry;
  int prevRegEntry;
  int parentRegistry;
};
#pragma pack(pop)

/*  264 */
#pragma pack(push, 1)
struct RwFreeList
{
  int entrySize;
  int entriesPerBlock;
  int heapSize;
  int alignment;
  RwLinkList blockList;
  int flags;
  RwLLLink link;
};
#pragma pack(pop)

/*  266 */
#pragma pack(push, 1)
struct ov_callbacks
{
  int read_func;
  int seek_func;
  int close_func;
  int tell_func;
};
#pragma pack(pop)

/*  267 */
#pragma pack(push, 1)
struct MD5_Ctx
{
  int countLow;
  int countHi;
  int state[4];
};
#pragma pack(pop)

/*  268 */
#pragma pack(push, 1)
struct D3DCAPS9
{
  int DeviceType;
  int AdapterOrdinal;
  int Caps;
  int Caps2;
  int Caps3;
  int PresentationIntervals;
  int CursorCaps;
  int DevCaps;
  int PrimitiveMiscCaps;
  int RasterCaps;
  int ZCmpCaps;
  int SrcBlendCaps;
  int DestBlendCaps;
  int AlphaCmpCaps;
  int ShadeCaps;
  int TextureCaps;
  int TextureFilterCaps;
  int CubeTextureFilterCaps;
  int VolumeTextureFilterCaps;
  int TextureAddressCaps;
  int VolumeTextureAddressCaps;
  int LineCaps;
  int MaxTextureWidth;
  int MaxTextureHeight;
  int MaxVolumeExtent;
  int MaxTextureRepeat;
  int MaxTextureAspectRatio;
  int MaxAnisotropy;
  int MaxVertexW;
  int GuardBandLeft;
  int GuardBandTop;
  int GuardBandRight;
  int GuardBandBottom;
  int ExtentsAdjust;
  int StencilCaps;
  int FVFCaps;
  int TextureOpCaps;
  int MaxTextureBlendStages;
  int MaxSimultaneousTextures;
  int __and_much_more__;
};
#pragma pack(pop)

/*  269 */
#pragma pack(push, 1)
struct DDSCAPS2
{
  int dwCaps;
  int dwCaps2;
  int dwCaps3;
  int dwCaps4;
};
#pragma pack(pop)

/*  270 */
#pragma pack(push, 1)
struct DIDATAFORMAT
{
  int dwSize;
  int dwObjSize;
  int dwFlags;
  int dwDataSize;
  int dwNumObjs;
  void *rgodf;
};
#pragma pack(pop)

/*  271 */
#pragma pack(push, 1)
struct DIOBJECTDATAFORMAT
{
  void *pguid;
  int dwOfs;
  int dwType;
  int dwFlags;
};
#pragma pack(pop)

/*  272 */
#pragma pack(push, 1)
struct IDirect3DDevice9_Methods
{
  int QueryInterface;
  int AddRef;
  int Release;
  int TestCooperativeLevel;
  int GetAvailableTextureMem;
  int (__stdcall *EvictManagedResources)(_DWORD, _DWORD, _DWORD, _DWORD);
  int GetDirect3D;
  int (__stdcall *GetDeviceCaps)(_DWORD, _DWORD);
  int (__stdcall *GetDisplayMode)(_DWORD, _DWORD, _DWORD);
  int GetCreationParameters;
  int SetCursorProperties;
  int SetCursorPosition;
  int ShowCursor;
  int CreateAdditionalSwapChain;
  int GetSwapChain;
  int GetNumberOfSwapChains;
  int (__stdcall *Reset)(IDirect3DDevice9_Methods **, D3DPRESENT_PARAMETERS *);
  int Present;
  int GetBackBuffer;
  int GetRasterStatus;
  int SetDialogBoxMode;
  int (__stdcall *SetGammaRamp)(_DWORD, _DWORD, _DWORD, _DWORD);
  int GetGammaRamp;
  int (__stdcall *CreateTexture)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, IDirect3DTexture9 *, _DWORD);
  int CreateVolumeTexture;
  int (__stdcall *CreateCubeTexture)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
  int (__stdcall *CreateVertexBuffer)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
  int CreateIndexBuffer;
  int CreateRenderTarget;
  int (__stdcall *CreateDepthStencilSurface)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
  int UpdateSurface;
  int UpdateTexture;
  int GetRenderTargetData;
  int GetFrontBufferData;
  int StretchRect;
  int ColorFill;
  int CreateOffscreenPlainSurface;
  int SetRenderTarget;
  void (__stdcall *GetRenderTarget)(IDirect3DDevice9_Methods **, _DWORD, IDirect3DSurface9 **);
  int SetDepthStencilSurface;
  void (__stdcall *GetDepthStencilSurface)(IDirect3DDevice9_Methods **, IDirect3DSurface9 **);
  int BeginScene;
  int EndScene;
  int Clear;
  int SetTransform;
  int GetTransform;
  int MultiplyTransform;
  int (__stdcall *SetViewport)(_DWORD, _DWORD);
  int GetViewport;
  int (__stdcall *SetMaterial)(_DWORD, _DWORD);
  int GetMaterial;
  int SetLight;
  int GetLight;
  int LightEnable;
  int GetLightEnable;
  int SetClipPlane;
  int GetClipPlane;
  int (__stdcall *SetRenderState)(_DWORD, _DWORD, _DWORD);
  int GetRenderState;
  int CreateStateBlock;
  int BeginStateBlock;
  int EndStateBlock;
  int SetClipStatus;
  int GetClipStatus;
  int GetTexture;
  int (__stdcall *SetTexture)(_DWORD, _DWORD, _DWORD);
  int GetTextureStageState;
  int SetTextureStageState;
  int GetSamplerState;
  int (__stdcall *SetSamplerState)(_DWORD, _DWORD, _DWORD, _DWORD);
  int ValidateDevice;
  int (__stdcall *SetPaletteEntries)(_DWORD, _DWORD, _DWORD);
  int GetPaletteEntries;
  int (__stdcall *SetCurrentTexturePalette)(_DWORD, _DWORD);
  int GetCurrentTexturePalette;
  int SetScissorRect;
  int GetScissorRect;
  int SetSoftwareVertexProcessing;
  int GetSoftwareVertexProcessing;
  int SetNPatchMode;
  int GetNPatchMode;
  int (__stdcall *DrawPrimitive)(_DWORD, _DWORD, _DWORD, _DWORD);
  int (__stdcall *DrawIndexedPrimitive)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
  void (__stdcall *DrawPrimitiveUP)(IDirect3DDevice9_Methods **, int, int, void *, signed int);
  void (__stdcall *DrawIndexedPrimitiveUP)(IDirect3DDevice9_Methods **, int, _DWORD, int, int, __int16 *, D3DFORMAT, void *, signed int);
  int ProcessVertices;
  int CreateVertexDeclaration;
  void (__stdcall *SetVertexDeclaration)(IDirect3DDevice9_Methods **, IDirect3DVertexDeclaration9 *);
  int GetVertexDeclaration;
  int SetFVF;
  int GetFVF;
  int CreateVertexShader;
  int (__stdcall *SetVertexShader)(_DWORD, _DWORD);
  int GetVertexShader;
  int (__stdcall *SetVertexShaderConstantF)(_DWORD, _DWORD, _DWORD, _DWORD);
  int GetVertexShaderConstantF;
  int SetVertexShaderConstantI;
  int GetVertexShaderConstantI;
  int SetVertexShaderConstantB;
  int GetVertexShaderConstantB;
  int SetStreamSource;
  int GetStreamSource;
  int SetStreamSourceFreq;
  int GetStreamSourceFreq;
  int (__stdcall *SetIndices)(_DWORD, _DWORD);
  int GetIndices;
  int CreatePixelShader;
  int (__stdcall *SetPixelShader)(_DWORD, _DWORD);
  int GetPixelShader;
  int SetPixelShaderConstantF;
  int GetPixelShaderConstantF;
  int SetPixelShaderConstantI;
  int GetPixelShaderConstantI;
  int SetPixelShaderConstantB;
  int GetPixelShaderConstantB;
  int DrawRectPatch;
  int DrawTriPatch;
  int DeletePatch;
  int CreateQuery;
};
#pragma pack(pop)

/*  273 */
#pragma pack(push, 1)
struct DIMOUSE2
{
  int lX;
  int lY;
  int lZ;
  char buttons[8];
};
#pragma pack(pop)

/*  274 */
#pragma pack(push, 1)
struct IDirectInputDevice8_Methods
{
  int QueryInterface;
  int AddRef;
  int Release;
  int GetCapabilities;
  int EnumObjects;
  int GetProperty;
  int SetProperty;
  int Acquire;
  int Unacquire;
  int GetDeviceState;
  int GetDeviceData;
  int SetDataFormat;
  int SetEventNotification;
  int SetCooperativeLevel;
  int GetObjectInfo;
  int GetDeviceInfo;
  int RunControlPanel;
  int Initialize;
  int CreateEffect;
  int EnumEffects;
  int GetEffectInfo;
  int GetForceFeedbackState;
  int SendForceFeedbackCommand;
  int EnumCreatedEffectObjects;
  int Escape;
  int Poll;
  int SendDeviceData;
  int EnumEffectsInFile;
  int WriteEffectToFile;
  int BuildActionMap;
  int SetActionMap;
  int GetImageInfo;
};
#pragma pack(pop)

/*  275 */
#pragma pack(push, 1)
struct IDirectInputDeviceA
{
  void *lpVtbl;
};
#pragma pack(pop)

/*  276 */
#pragma pack(push, 1)
struct IDirectDraw7_Methods
{
  int QueryInterface;
  int AddRef;
  int Release;
  int Compact;
  int CreateClipper;
  int CreatePalette;
  int CreateSurface;
  int DuplicateSurface;
  int EnumDisplayModes;
  int EnumSurfaces;
  int FlipToGDISurface;
  int GetCaps;
  int GetDisplayMode;
  int GetFourCCCodes;
  int GetGDISurface;
  int GetMonitorFrequency;
  int GetScanLine;
  int GetVerticalBlankStatus;
  int Initialize;
  int RestoreDisplayMode;
  int SetCooperativeLevel;
  int SetDisplayMode;
  int WaitForVerticalBlank;
  int GetAvailableVidMem;
  int GetSurfaceFromDC;
  int RestoreAllSurfaces;
  int TestCooperativeLevel;
  int GetDeviceIdentifier;
  int StartModeTest;
  int EvaluateMode;
};
#pragma pack(pop)

/*  277 */
#pragma pack(push, 1)
struct IDirectInput8A_Methods
{
  int QueryInterface;
  int AddRef;
  int Release;
  int CreateDevice;
  int EnumDevices;
  int GetDeviceStatus;
  int RunControlPanel;
  int Initialize;
  int FindDevice;
  int EnumDevicesBySemantics;
  int ConfigureDevices;
};
#pragma pack(pop)

/*  278 */
#pragma pack(push, 1)
struct IDirectInput8A
{
  void *lpVtbl;
};
#pragma pack(pop)

/*  279 */
#pragma pack(push, 1)
struct IDispatchVtbl
{
  void *QueryInterface;
  void *AddRef;
  void *Release;
  void *GetTypeInfoCount;
  void *GetTypeInfo;
  void *GetIDsOfNames;
  void *Invoke;
};
#pragma pack(pop)

/*  280 */
#pragma pack(push, 1)
struct IShellDetailsVtbl
{
  void *QueryInterface;
  void *AddRef;
  void *Release;
  void *GetDetailsOf;
  void *ColumnClick;
};
#pragma pack(pop)

/*  281 */
#pragma pack(push, 1)
struct GUID
{
  int Data1;
  __int16 Data2;
  __int16 Data3;
  char Data4[8];
};
#pragma pack(pop)

/*  282 */
#pragma pack(push, 1)
struct OVERLAPPED
{
  int Internal;
  int InternalHigh;
  int Offset;
  int OffetHigh;
  int hEvent;
};
#pragma pack(pop)

/*  283 */
#pragma pack(push, 1)
struct EXCEPTION_POINTERS
{
  void *ExceptionRecord;
  void *ContextRecord;
};
#pragma pack(pop)

/*  284 */
#pragma pack(push, 1)
struct STICKYKEYS
{
  int cbSize;
  int dwFlags;
};
#pragma pack(pop)

/*  285 */
#pragma pack(push, 1)
struct IMAGE_DOS_HEADER
{
  __int16 e_magic;
  __int16 e_cblp;
  __int16 e_cp;
  __int16 e_crlc;
  __int16 e_cparhdr;
  __int16 e_minalloc;
  __int16 e_maxalloc;
  __int16 e_ss;
  __int16 e_sp;
  __int16 e_csum;
  __int16 e_ip;
  __int16 e_cs;
  __int16 e_lfarlc;
  __int16 e_ovno;
  __int16 e_res[4];
  __int16 e_oemid;
  __int16 e_oeminfo;
  __int16 e_res2[10];
  int e_lfanew;
};
#pragma pack(pop)

/*  286 */
#pragma pack(push, 1)
union _OVERLAPPED::$742A73540840F318F86F9CEE3D494648
{
  _OVERLAPPED::$742A73540840F318F86F9CEE3D494648::$9BFE693EDA487769FDABADE5E43394F7 anonymous_0;
  void *Pointer;
};
#pragma pack(pop)

/*  287 */
#pragma pack(push, 1)
struct _OVERLAPPED::$742A73540840F318F86F9CEE3D494648::$9BFE693EDA487769FDABADE5E43394F7
{
  int Offset;
  int OffsetHigh;
};
#pragma pack(pop)

/*  288 */
#pragma pack(push, 1)
struct WSADATA
{
  __int16 wVersion;
  __int16 wHighVersion;
  __int16 iMaxSockets;
  __int16 iMaxUdpDg;
  void *lpVendorInfo;
  char szDescription[257];
  char szSystemStatus[129];
  char _padding[2];
};
#pragma pack(pop)

/*  289 */
#pragma pack(push, 1)
struct RpTie
{
  RwLLLink lAtomicInWorldSector;
  int apAtom;
  RwLLLink lWorldSectorInAtomic;
  int worldSector;
};
#pragma pack(pop)

/*  290 */
#pragma pack(push, 1)
struct RpWorldSector
{
  int type;
  int triangles;
  int vertices;
  int normals;
  int texCoords[8];
  RwRGBA preLitLum;
  int repEntry;
  RwLLLink collAtomicsInWorldSector;
  RwLLLink lightsInWorldSector;
  RwBBox boundingBox;
  RwBBox tightBoundingBox;
  int mesh;
  int pipeline;
  __int16 matListWindowBase;
  __int16 numVertices;
  __int16 numTriangles;
  __int16 pad;
};
#pragma pack(pop)

/*  291 */
#pragma pack(push, 1)
struct RpPlaneSector
{
  int type;
  float value;
  int leftSubTree;
  int rightSubTree;
  float leftValue;
  float rightValue;
};
#pragma pack(pop)

/*  292 */
#pragma pack(push, 1)
struct CAudioManager
{
  CAudioWav field_0[4];
  int field_80;
  int field_84;
  float field_88;
  float field_8C;
  CAudioLink wavLinks[4];
  int field_110;
  int field_114;
  int __unk4;
  int field_11C;
  char gap_120[4];
  int field_124;
  char field_128[104];
  int field_190;
  int field_194;
  int field_198;
  int field_19C;
  int __unk5;
  int field_1A4;
  char gap_1A8[4];
  int field_1AC;
  char __unk6[104];
  char field_218;
  char field_219[3];
};
#pragma pack(pop)

/*  293 */
#pragma pack(push, 1)
struct CAudioLink
{
  RwV3D m_vPosition;
  CEntity *m_pEntity;
  int field_10;
  int field_14;
  int m_nBankId;
  int m_nBankSlotId;
};
#pragma pack(pop)

/*  294 */
#pragma pack(push, 1)
struct cDMAudio
{
  __int16 field_0;
  char m_nCurrentRadiostationId;
  char field_3;
  int field_4;
  char gap_8[152];
  char field_A0;
  char gap_A1[15];
  char field_B0;
  char gap_B1[3];
  CFrontendAudio m_FrontendAudio;
  char gap_282[30];
  CAudioManager audioManager;
  CGlassAudio m_TempAudio;
};
#pragma pack(pop)

/*  295 */
#pragma pack(push, 1)
struct CTask
{
  CTaskVMT *vmt;
  int m_pParentTask;
};
#pragma pack(pop)

/*  296 */
#pragma pack(push, 1)
struct CTaskComplex
{
  CTask p;
  int m_pSubTask;
};
#pragma pack(pop)

/*  297 */
#pragma pack(push, 1)
struct CTaskSimpleAnim
{
  CTask __parent;
  int field_8;
  char field_C;
  char field_D[3];
};
#pragma pack(pop)

/*  298 */
#pragma pack(push, 1)
struct CTaskSimpleRunAnim
{
  CTaskSimpleAnim __parent;
  int field_10;
  int m_dwAnimId;
  int field_18;
  __int16 m_eTaskId;
  __int16 __pad;
};
#pragma pack(pop)

/*  299 */
#pragma pack(push, 1)
struct CTaskSimpleRunNamedAnim
{
  CTaskSimpleAnim __parent;
  char m_szAnimName[24];
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  float field_38;
  int animation;
  int field_40;
  CAiTimer field_44;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
};
#pragma pack(pop)

/*  300 */
#pragma pack(push, 1)
struct CTaskSimpleRunTimedAnim
{
  CTaskSimpleAnim __parent;
  int field_10;
  int m_dwAnimId;
  int field_18;
  int field_1C;
  int m_nTime;
  CAiTimer field_24;
  __int16 m_eTaskId;
  __int16 __pad;
};
#pragma pack(pop)

/*  301 */
#pragma pack(push, 1)
struct CTask_86D594
{
  CTaskSimpleAnim __parent;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int animation;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  char field_68;
  char field_69;
  char gap_6a[2];
  __int16 taskId;
  __int16 __pad;
};
#pragma pack(pop)

/*  302 */
#pragma pack(push, 1)
struct RpLightTie
{
  RwLLLink lightInWorldSector;
  int light;
  RwLLLink worldSectorInLight;
  int sect;
};
#pragma pack(pop)

/*  303 */
#pragma pack(push, 1)
struct ColFileHeader
{
  int fourcc;
  int dataSize;
  char modelname[20];
  int _unused;
};
#pragma pack(pop)

/*  304 */
#pragma pack(push, 1)
struct CollisionLink
{
  int ptr;
  CollisionLink *next;
  CollisionLink *prev;
};
#pragma pack(pop)

/*  305 */
#pragma pack(push, 1)
struct CColBox
{
  RwBBox m_Box;
  CColSurface m_Surface;
};
#pragma pack(pop)

/*  306 */
#pragma pack(push, 1)
struct CColTriangle
{
  __int16 a;
  __int16 b;
  __int16 c;
  char material;
  char light;
};
#pragma pack(pop)

/*  307 */
#pragma pack(push, 1)
struct RpHAnimNodeInfo
{
  int nodeID;
  int nodeIndex;
  int flags;
  int pFrame;
};
#pragma pack(pop)

/*  308 */
#pragma pack(push, 1)
struct ColSphere1
{
  int radius;
  RwV3D center;
  char material;
  char flag;
  char field_12;
  char _f2;
};
#pragma pack(pop)

/*  310 */
#pragma pack(push, 1)
struct d3d_obj1
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
};
#pragma pack(pop)

/*  311 */
#pragma pack(push, 1)
struct d3d_obj2
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
};
#pragma pack(pop)

/*  312 */
#pragma pack(push, 1)
struct CPedAnimation
{
  int ifpFile;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
};
#pragma pack(pop)

/*  313 */
#pragma pack(push, 1)
struct ComponentLinks
{
  __int16 component1[30];
  __int16 component2[30];
  int componentCount;
};
#pragma pack(pop)

/*  314 */
#pragma pack(push, 1)
struct LoadedObjectInfo
{
  __int16 nextIndex;
  __int16 prevIndex;
  __int16 field_4;
  char flags;
  char numOfImgDescr;
  int position;
  int fileSize;
  char bLoadState;
  char field_11[3];
};
#pragma pack(pop)

/*  315 */
#pragma pack(push, 1)
struct CCullZoneReflection
{
  CCullZoneBase __parent;
  int cm;
  char vx;
  char vy;
  char vz;
  char flags;
};
#pragma pack(pop)

/*  316 */
#pragma pack(push, 1)
struct CCullZone
{
  CCullZoneBase __parent;
  __int16 flags;
};
#pragma pack(pop)

/*  317 */
#pragma pack(push, 1)
struct CCullZoneBase
{
  __int16 x;
  __int16 y;
  __int16 field_4;
  __int16 Ywidth;
  __int16 Xwidth;
  __int16 field_A;
  __int16 Zbottom;
  __int16 Ztop;
};
#pragma pack(pop)

/*  318 */
#pragma pack(push, 1)
struct XYZStore
{
  XYZ _l1Head;
  XYZ _l1Tail;
  XYZ allocatedListHead;
  XYZ allocatedListTail;
  XYZ freeListHead;
  XYZ freeListTail;
  int pool;
};
#pragma pack(pop)

/*  319 */
#pragma pack(push, 1)
struct CPedTasks
{
  int m_primaryTasks[5];
  int m_secondaryTasks[6];
  int m_pPed;
};
#pragma pack(pop)

/*  320 */
#pragma pack(push, 1)
struct CPedIntelligence
{
  CPed *m_pPed;
  CPedTasks m_pedTasks;
  CPedIntelligence__struct_34 field_34;
  CEventGroup m_pedEvents;
  int m_dwDefaultDecisionMaker;
  int _DM_00;
  int m_fMeleeAccuracyA;
  int m_fMeleeAccuracyB;
  int m_dwDmNumPedsToScan;
  int m_fDmRadius;
  int field_CC;
  char field_D0;
  char eventId;
  char eventPriority;
  char field_D3;
  CEntityScanner n_vehicleScanner;
  CEntityScanner m_pedScanner;
  char field_174;
  char gap_175[3];
  CAiTimer field_178;
  int field_184;
  char field_188;
  char gap_189[3];
  CPedIntelligence__struct_18C field_18C;
  char field_260;
  char gap_261[3];
  CPedIntelligence__struct_264 field_264;
  int field_274;
  int field_278;
  char gap_27C[12];
  int field_288;
  int field_28C;
  int field_290;
};
#pragma pack(pop)

/*  321 */
#pragma pack(push, 1)
struct CEntityScanner
{
  int __vmt;
  int field_4;
  int m_dwCount;
  int m_apEntities[16];
  int field_4C;
};
#pragma pack(pop)

/*  322 */
#pragma pack(push, 1)
struct CAnimBlendAssocGroup
{
  int pAnimBlock;
  int ppAssociations;
  int iNumAnimations;
  int iIDOffset;
  int groupID;
};
#pragma pack(pop)

/*  323 */
#pragma pack(push, 1)
struct COccluder
{
  __int16 midX;
  __int16 midY;
  __int16 midZ;
  __int16 widthY;
  __int16 widthX;
  __int16 height;
  char rotation;
  char rotation2;
  char rotation3;
  char field_F;
  __int16 flags;
};
#pragma pack(pop)

/*  324 */
#pragma pack(push, 1)
struct ThreadMLS
{
  int modelId;
  int pThread;
  int type;
};
#pragma pack(pop)

/*  325 */
#pragma pack(push, 1)
struct CStuckCheck
{
  int field_0;
  RwV3D field_4;
  int field_10;
  int field_14;
  int field_18;
  char field_1C;
  char field_1D;
  char field_1E;
  char field_1F;
  char field_20;
  char field_21;
  char field_22;
  char field_23;
};
#pragma pack(pop)

/*  326 */
#pragma pack(push, 1)
struct CScriptSphere
{
  char bUsed;
  char field_1;
  __int16 wUniqueID;
  int field_4;
  RwV3D vCoords;
  int fRadius;
};
#pragma pack(pop)

/*  327 */
#pragma pack(push, 1)
struct CSearchlight
{
  char bUsed;
  char field_1;
  char bEnableShadow;
  char field_3;
  __int16 wUniqueID;
  __int16 field_6;
  RwV3D position;
  RwV3D target;
  float targetRadius;
  float baseRadius;
  RwV3D pathCoord1;
  RwV3D pathCoord2;
  float pathSpeed;
  int attachedEntity;
  int followingEntity;
  int tower;
  int housing;
  int bulb;
  RwV3D targetSpot;
  RwV3D field_64;
  RwV3D field_70;
};
#pragma pack(pop)

/*  328 */
#pragma pack(push, 1)
struct JumptableLabel
{
  int field_0;
  int field_4;
};
#pragma pack(pop)

/*  329 */
#pragma pack(push, 1)
struct CEntryInfoNode
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
};
#pragma pack(pop)

/*  330 */
#pragma pack(push, 1)
struct CPedSound
{
  int __vmt;
  int pPed;
  int field_8;
  int field_C;
  int field_10;
  char field_14[124];
  char field_90;
  char field_91;
  __int16 voiceType;
  __int16 voice3;
  __int16 field_96;
  char field_98;
  char field_99;
  char field_9A;
  char field_9B;
  char field_9C;
  char field_9D;
  char field_9E;
  char field_9F;
  int field_A0;
  __int16 field_A4;
  __int16 field_A6;
  __int16 field_A8;
  __int16 field_AA;
  int field_AC;
  __int16 field_B0;
  __int16 field_B2;
  int field_B4[19];
};
#pragma pack(pop)

/*  331 */
#pragma pack(push, 1)
struct CMissionCleanupList
{
  CMissionCleanup objects[75];
  char count;
};
#pragma pack(pop)

/*  332 */
#pragma pack(push, 1)
struct CPickup
{
  float field_0;
  CObject *m_pObject;
  int m_dwAmmo;
  int m_dwRegenerationTime;
  CCompressedVector m_vPos;
  __int16 field_16;
  __int16 m_wModelId;
  __int16 m_wGeneration;
  char m_cPickupType;
  char m_cFlags;
  char field_1E;
  char field_1F;
};
#pragma pack(pop)

/*  333 */
#pragma pack(push, 1)
struct CTriggerEntity
{
  int entity;
  __int16 index;
  __int16 __pad;
};
#pragma pack(pop)

/*  334 */
#pragma pack(push, 1)
struct CDamageManager
{
  float WheelDamageEffect;
  char engineStatus;
  char wheelsStatus[4];
  CComponentStatus componentStatus;
  char _pad1;
  int lightStatus;
  int panelStatus;
};
#pragma pack(pop)

/*  335 */
#pragma pack(push, 1)
struct CAutomobile
{
  CVehicle_vtbl *vmt;
  CAutomobileBase automobile;
};
#pragma pack(pop)

/*  338 */
#pragma pack(push, 1)
struct CTrain
{
  CVehicle _train;
  __int16 m_sNodeIndex;
  char _pad1[2];
  float m_fCruiseSpeed;
  float m_fCurrentRailDistance;
  float m_fLength;
  int field_5B0;
  int field_5B4;
  char flags1;
  char m_cWreckedFlags;
  char field_5BA[2];
  int field_5BC;
  char m_cTrackId;
  char field_5C1;
  __int16 field_5C2;
  int timeCreated;
  __int16 field_5C8;
  char field_5CA;
  char m_cPassengerFlags;
  CPed *m_pPassenger;
  CTrain *m_pPrevCarriage;
  CTrain *m_pNextCarriage;
  CAutomobileDoor m_sDoor[6];
  RwFrame *m_pFrame[17];
};
#pragma pack(pop)

/*  339 */
#pragma pack(push, 1)
struct CPlane
{
  int _vmt;
  CAutomobileBase automobile;
  char field_988[32];
  int field_9A8;
  char field_9AC[4];
  int field_9B0;
  int field_9B4;
  int field_9B8;
  char field_9BC[16];
  int landingGearStatus;
  char field_9D0[24];
  int pJettrusParticles[4];
  int field_9F8;
  int field_9FC;
  int field_A00;
};
#pragma pack(pop)

/*  340 */
#pragma pack(push, 1)
struct CHeli
{
  CHeli_vtbl *vmt;
  CAutomobileBase automobile;
  char heliFlags;
  char gap_989[3];
  int field_98C;
  float field_990;
  float field_994;
  float field_998;
  int field_99C;
  int m_fRotorZ;
  int m_fRotor2Z;
  float fMaxAltitude;
  float field_9AC;
  float fMinAltitude;
  int field_9B4;
  char field_9B8;
  char bActive;
  int time1?;
  char gap_9BE[2];
  int field_9C0[6];
  char field_9D8;
  char gap_9D9[23];
  int timeCreated1;
  RwV3D searchLightTarget;
  float shadowIntensity;
  int time2?;
  int timeCreated2;
  int gunflashParticles;
  char field_A10;
  char bUsesSearchLight;
  char gap_A12[2];
  float field_A14;
};
#pragma pack(pop)

/*  341 */
#pragma pack(push, 1)
struct CReferences
{
  SReference m_refs[3000];
  int pEmptyList;
};
#pragma pack(pop)

/*  342 */
#pragma pack(push, 1)
struct CTaskSimpleSetCharDecisionMaker
{
  CTask __parent;
  int m_dwDmHandle;
};
#pragma pack(pop)

/*  343 */
#pragma pack(push, 1)
struct CRadarBlip
{
  int m_dwColorId;
  int m_dwEntityHandle;
  CVector m_vPosition;
  __int16 m_wIndex;
  char _padding0[2];
  float m_fSphereRadius;
  int m_dwBlipSize;
  int m_pEntryExit;
  char m_bSpriteId;
  char m_bCreationFlags;
  char m_bDisplayFlags;
  char _padding1;
};
#pragma pack(pop)

/*  344 */
#pragma pack(push, 1)
struct CPedIntelligence__struct_34
{
  int ped;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  char field_1C;
  char field_1D;
  __int16 field_1E;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
};
#pragma pack(pop)

/*  345 */
#pragma pack(push, 1)
struct TransmissionGear
{
  int field_0;
  int field_4;
  int field_8;
};
#pragma pack(pop)

/*  346 */
#pragma pack(push, 1)
struct CWeaponInfo
{
  int m_eFireType;
  int targetRange;
  float m_fWeaponRange;
  int dwModelId1;
  int dwModelId2;
  int nSlot;
  int flags;
  int AssocGroupId;
  __int16 ammoClip;
  __int16 damage;
  RwV3D fireOffset;
  int skillLevel;
  int reqStatLevelToGetThisWeaponSkilLevel;
  float m_fAccuracy;
  float moveSpeed;
  float animLoopStart;
  float animLoopEnd;
  int animLoopFire;
  int animLoop2Start;
  int animLoop2End;
  int animLoop2Fire;
  int breakoutTime;
  int speed;
  int radius;
  int lifespan;
  int spread;
  char AssocGroupId2;
  char field_6D;
  char baseCombo;
  char m_nNumCombos;
};
#pragma pack(pop)

/*  347 */
#pragma pack(push, 1)
struct CEntity_vtbl
{
  int __dtor;
  int field_4;
  int add;
  int remove;
  int field_10;
  int setModelIndex;
  int setModelIndexNoCreate;
  int createRwObject;
  int deleteRwObject;
  int getBoundRect;
  int processControl;
  int processCollision;
  int field_30;
  int field_34;
  int teleport;
  int field_3C;
  int field_40;
  int preRender;
  int render;
  int setupLighting;
  int removeLighting;
  int flagToDestroyWhenNextProcessing;
};
#pragma pack(pop)

/*  348 */
#pragma pack(push, 1)
struct CPhysical_vtbl
{
  CEntity_vtbl __parent;
  int processEntityCollision;
};
#pragma pack(pop)

/*  349 */
#pragma pack(push, 1)
struct CTaskSimpleHandsignalAnim
{
  CTaskSimpleAnim __parent;
  int field_10;
  int field_14;
  char field_18;
  char gap_19[3];
  int field_1C;
  int field_20;
};
#pragma pack(pop)

/*  350 */
#pragma pack(push, 1)
struct CScriptParticle
{
  char bUsed;
  char gap_1[1];
  __int16 wUniqueID;
  int pParticleData;
};
#pragma pack(pop)

/*  351 */
#pragma pack(push, 1)
struct CScriptCheckpoint
{
  char bUsed;
  char field_1;
  __int16 wUniqueID;
  int field_4;
};
#pragma pack(pop)

/*  352 */
#pragma pack(push, 1)
struct CScriptSequence
{
  char bUsed;
  char gap_1[1];
  __int16 wUniqueID;
};
#pragma pack(pop)

/*  353 */
#pragma pack(push, 1)
struct CFire
{
  char flags;
  char field_1;
  __int16 index;
  RwV3D position;
  int attachedTo;
  int creator;
  int m_dwDissappearTime;
  float m_fSize;
  char nNumGenerationsAllowed;
  char field_21;
  __int16 field_22;
  int m_pParticle;
};
#pragma pack(pop)

/*  354 */
#pragma pack(push, 1)
struct CPedQueues
{
  int field_0[64];
  char field_100[64];
  int field_140[64];
  __int16 m_awUniqueID[64];
  char m_abUsed[64];
};
#pragma pack(pop)

/*  355 */
#pragma pack(push, 1)
struct CDecisionMakers
{
  char field_0[20];
  __int16 m_awUniqueID[20];
  char m_abUsed[20];
  int m_pMgr;
};
#pragma pack(pop)

/*  356 */
#pragma pack(push, 1)
struct CPedGroups
{
  __int16 m_awUniqueID[8];
  char m_abUsed[8];
};
#pragma pack(pop)

/*  357 */
#pragma pack(push, 1)
struct CScriptRequestedModel
{
  char szModelName[24];
  int dwModelIndex;
};
#pragma pack(pop)

/*  358 */
#pragma pack(push, 1)
struct CPedIntelligence__struct_18C
{
  int field_0;
  CAiTimer field_4;
  CAiTimer field_10;
  CPedIntelligence__struct_3 field_1C;
  CAiTimer field_AC;
  char field_B8;
  char field_B9;
  char field_BA;
  char gap_bb[1];
  CAiTimer field_BC;
  CAiTimer field_C8;
};
#pragma pack(pop)

/*  359 */
#pragma pack(push, 1)
struct CPedIntelligence__struct_3
{
  char field_0;
  char gap_1[3];
  CAiTimer field_4;
  int field_10;
  int field_14;
  int field_18[10];
  int field_40[10];
  int field_68[10];
};
#pragma pack(pop)

/*  360 */
#pragma pack(push, 1)
struct CPedIntelligence__struct_264
{
  RwV3D field_0;
  __int16 field_C;
  __int16 field_E;
};
#pragma pack(pop)

/*  361 */
#pragma pack(push, 1)
struct CTaskComplexJump
{
  CTaskComplex __parent;
  int field_C;
  char field_10;
  char field_11[3];
};
#pragma pack(pop)

/*  363 */
#pragma pack(push, 1)
struct CTaskComplexMoveSeekEntity
{
  CTaskComplex __parent;
  int m_pEntity;
  int m_nTime;
  int field_14;
  int m_nRadius;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  char field_30;
  char field_31;
  char gap_32[2];
  int field_34;
  int field_38;
  char field_3C;
  char field_3D;
  char gap_3e[2];
  int m_posCalc;
  int field_44;
  char field_48;
  char field_49[3];
};
#pragma pack(pop)

/*  364 */
#pragma pack(push, 1)
struct CTaskSimpleDriveCar
{
  CTask __parent;
  int m_pVehicle;
  int field_C;
  int field_10;
  CAiTimer field_14;
  int field_20;
  char gap_24[24];
  int field_3C;
  int field_40;
  int field_44;
  char gap_48[4];
  int field_4C;
  CAiTimer field_50;
  char field_5C;
};
#pragma pack(pop)

/*  365 */
#pragma pack(push, 1)
struct CTaskSimpleDriveCar_obj1
{
  RwV3D field_0;
  int field_C;
  int m_nTime;
  int field_14;
  int field_18;
};
#pragma pack(pop)

/*  366 */
#pragma pack(push, 1)
struct CTaskSimpleCarDriveTimed
{
  CTaskSimpleDriveCar __parent;
  char gap_5d[3];
  int field_60;
  CAiTimer field_64;
};
#pragma pack(pop)

/*  367 */
#pragma pack(push, 1)
struct CAiTimer
{
  int m_nStartTime;
  int m_nInterval;
  char m_bStarted;
  char field_9;
  __int16 __padding;
};
#pragma pack(pop)

/*  368 */
#pragma pack(push, 1)
struct CTaskSimpleSay
{
  CTask __parent;
  int m_dwAudioId;
  int m_nTime;
  CAiTimer field_10;
};
#pragma pack(pop)

/*  369 */
#pragma pack(push, 1)
struct CTaskSimplePause
{
  CTask __parent;
  CAiTimer m_timer;
  int m_nTime;
};
#pragma pack(pop)

/*  370 */
#pragma pack(push, 1)
struct CTaskComplexEvasiveDiveAndGetUp
{
  CTaskComplex __parent;
  int m_pEntity;
  int m_nTimeOnGround;
  RwV3D m_vDirection;
  char field_20;
};
#pragma pack(pop)

/*  371 */
#pragma pack(push, 1)
struct CTaskComplexWander
{
  CTaskComplex __parent;
  int field_C;
  char field_10;
  char gap_11[3];
  int field_14;
  __int16 field_18;
  char gap_1a[2];
  __int16 field_1C;
  char gap_1e[2];
  int field_20;
  char field_24;
  char field_25[3];
};
#pragma pack(pop)

/*  372 */
#pragma pack(push, 1)
struct CTaskComplexWanderCop
{
  CTaskComplexWander __parent;
  int field_28;
  CAiTimer field_2C;
  int field_38;
  int field_3C;
  int field_40;
  CAiTimer field_44;
};
#pragma pack(pop)

/*  373 */
#pragma pack(push, 1)
struct CTaskSimpleStandStill
{
  CTask __parent;
  int m_nTime;
  CAiTimer m_timer;
  char field_18;
  char field_19;
  char gap_1a[2];
  int field_1C;
};
#pragma pack(pop)

/*  374 */
#pragma pack(push, 1)
struct CTaskComplexCarDrive
{
  CTaskComplex __parent;
  int m_pVehicle;
  int m_fSpeed;
  int field_14;
  int field_18;
  char field_1C;
  char m_nbTrafficBehavior;
  char m_nbDriverBehavior;
  char field_1F;
  char m_bSavedVehicleBehavior;
  char field_21[3];
};
#pragma pack(pop)

/*  375 */
#pragma pack(push, 1)
struct CTaskComplexCarDriveMission
{
  CTaskComplexCarDrive __parent;
  int m_pTargetVehicle;
  int field_28;
};
#pragma pack(pop)

/*  376 */
#pragma pack(push, 1)
struct CTaskSimpleWaitUntilAreaCodesMatch
{
  CTaskSimpleStandStill __parent;
  int m_pEntity;
};
#pragma pack(pop)

/*  377 */
#pragma pack(push, 1)
struct CTaskSimpleWaitForMatchingLeaderAreaCodes
{
  CTaskSimpleWaitUntilAreaCodesMatch __parent;
  char field_24;
  char field_25[15];
  char field_34;
  char field_35[3];
};
#pragma pack(pop)

/*  378 */
#pragma pack(push, 1)
struct CTaskComplexHandsignalAnim
{
  CTaskComplex __parent;
  int field_C;
  int field_10;
  char field_14;
};
#pragma pack(pop)

/*  379 */
#pragma pack(push, 1)
struct CTaskSimpleFight
{
  CTask __parent;
  char field_8;
  char field_9;
  char field_A;
  char gap_B[1];
  int m_dwIfpIndex;
  __int16 m_dwTime;
  __int16 field_12;
  char field_14;
  char field_15;
  char gap_16[2];
  int m_pEntity;
  int field_1C;
  int field_20;
  char field_24;
  char field_25;
  char _paramA3;
  char field_27;
};
#pragma pack(pop)

/*  380 */
#pragma pack(push, 1)
struct CTaskSimpleFightCtrl
{
  CTask __parent;
  char field_8;
  char gap_9[1];
  __int16 field_A;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
};
#pragma pack(pop)

/*  381 */
#pragma pack(push, 1)
struct CTaskSimpleUseGun
{
  CTask __parent;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  char field_C;
  char m_cStateFlags;
  char field_E;
  char field_F;
  char field_10;
  char gap_11[3];
  int field_14;
  int field_18;
  CEntity *m_pEntity;
  RwV3D m_vTarget;
  int field_2C;
  CWeaponInfo *m_pWeaponInfo;
  __int16 field_34;
  __int16 field_36;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
};
#pragma pack(pop)

/*  382 */
#pragma pack(push, 1)
struct CTaskSimpleGunCtrl
{
  CTask __parent;
  char field_8;
  char gap_9[3];
  int field_C;
  RwV3D field_10;
  RwV3D field_1C;
  int field_28;
  __int16 field_2C;
  char field_2E;
  char gap_2f[1];
  int field_30;
  int field_34;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
};
#pragma pack(pop)

/*  384 */
#pragma pack(push, 1)
struct obj_8E4C24
{
  __int16 field_0[22];
  __int16 field_2C;
  __int16 __pad_2E;
};
#pragma pack(pop)

/*  385 */
#pragma pack(push, 1)
struct StreamingLListEntry
{
  int field_0;
  int pPrev;
  int pNext;
};
#pragma pack(pop)

/*  386 */
#pragma pack(push, 1)
struct StreamedModelList
{
  StreamingLListEntry usedListHead;
  StreamingLListEntry usedListTail;
  StreamingLListEntry freeListHead;
  StreamingLListEntry freeListTail;
  int pEntries;
};
#pragma pack(pop)

/*  387 */
enum CModelIDs
{
  MODEL_NULL = 0x0,
  MODEL_MALE01 = 0x7,
  MODEL_BFORI = 0x9,
  MODEL_BFOST = 0xA,
  MODEL_VBFYCRP = 0xB,
  MODEL_BFYRI = 0xC,
  MODEL_BFYST = 0xD,
  MODEL_BMORI = 0xE,
  MODEL_BMOST = 0xF,
  MODEL_BMYAP = 0x10,
  MODEL_BMYBU = 0x11,
  MODEL_BMYBE = 0x12,
  MODEL_BMYDJ = 0x13,
  MODEL_BMYRI = 0x14,
  MODEL_BMYCR = 0x15,
  MODEL_BMYST = 0x16,
  MODEL_WMYBMX = 0x17,
  MODEL_WBDYG1 = 0x18,
  MODEL_WBDYG2 = 0x19,
  MODEL_WMYBP = 0x1A,
  MODEL_WMYCON = 0x1B,
  MODEL_BMYDRUG = 0x1C,
  MODEL_WMYDRUG = 0x1D,
  MODEL_HMYDRUG = 0x1E,
  MODEL_DWFOLC = 0x1F,
  MODEL_DWMOLC1 = 0x20,
  MODEL_DWMOLC2 = 0x21,
  MODEL_DWMYLC1 = 0x22,
  MODEL_HMOGAR = 0x23,
  MODEL_WMYGOL1 = 0x24,
  MODEL_WMYGOL2 = 0x25,
  MODEL_HFORI = 0x26,
  MODEL_HFOST = 0x27,
  MODEL_HFYRI = 0x28,
  MODEL_HFYST = 0x29,
  MODEL_HMORI = 0x2B,
  MODEL_HMOST = 0x2C,
  MODEL_HMYBE = 0x2D,
  MODEL_HMYRI = 0x2E,
  MODEL_HMYCR = 0x2F,
  MODEL_HMYST = 0x30,
  MODEL_OMOKUNG = 0x31,
  MODEL_WMYMECH = 0x32,
  MODEL_BMYMOUN = 0x33,
  MODEL_WMYMOUN = 0x34,
  MODEL_OFORI = 0x35,
  MODEL_OFOST = 0x36,
  MODEL_OFYRI = 0x37,
  MODEL_OFYST = 0x38,
  MODEL_OMORI = 0x39,
  MODEL_OMOST = 0x3A,
  MODEL_OMYRI = 0x3B,
  MODEL_OMYST = 0x3C,
  MODEL_WMYPLT = 0x3D,
  MODEL_WMOPJ = 0x3E,
  MODEL_BFYPRO = 0x3F,
  MODEL_HFYPRO = 0x40,
  MODEL_BMYPOL1 = 0x42,
  MODEL_BMYPOL2 = 0x43,
  MODEL_WMOPREA = 0x44,
  MODEL_SBFYST = 0x45,
  MODEL_WMOSCI = 0x46,
  MODEL_WMYSGRD = 0x47,
  MODEL_SWMYHP1 = 0x48,
  MODEL_SWMYHP2 = 0x49,
  MODEL_SWFOPRO = 0x4B,
  MODEL_WFYSTEW = 0x4C,
  MODEL_SWMOTR1 = 0x4D,
  MODEL_WMOTR1 = 0x4E,
  MODEL_BMOTR1 = 0x4F,
  MODEL_VBMYBOX = 0x50,
  MODEL_VWMYBOX = 0x51,
  MODEL_VHMYELV = 0x52,
  MODEL_VBMYELV = 0x53,
  MODEL_VIMYELV = 0x54,
  MODEL_VWFYPRO = 0x55,
  MODEL_VWFYST1 = 0x57,
  MODEL_WFORI = 0x58,
  MODEL_WFOST = 0x59,
  MODEL_WFYJG = 0x5A,
  MODEL_WFYRI = 0x5B,
  MODEL_WFYRO = 0x5C,
  MODEL_WFYST = 0x5D,
  MODEL_WMORI = 0x5E,
  MODEL_WMOST = 0x5F,
  MODEL_WMYJG = 0x60,
  MODEL_WMYLG = 0x61,
  MODEL_WMYRI = 0x62,
  MODEL_WMYRO = 0x63,
  MODEL_WMYCR = 0x64,
  MODEL_WMYST = 0x65,
  MODEL_BALLAS1 = 0x66,
  MODEL_BALLAS2 = 0x67,
  MODEL_BALLAS3 = 0x68,
  MODEL_FAM1 = 0x69,
  MODEL_FAM2 = 0x6A,
  MODEL_FAM3 = 0x6B,
  MODEL_LSV1 = 0x6C,
  MODEL_LSV2 = 0x6D,
  MODEL_LSV3 = 0x6E,
  MODEL_MAFFA = 0x6F,
  MODEL_MAFFB = 0x70,
  MODEL_MAFBOSS = 0x71,
  MODEL_VLA1 = 0x72,
  MODEL_VLA2 = 0x73,
  MODEL_VLA3 = 0x74,
  MODEL_TRIADA = 0x75,
  MODEL_TRIADB = 0x76,
  MODEL_TRIBOSS = 0x78,
  MODEL_DNB1 = 0x79,
  MODEL_DNB2 = 0x7A,
  MODEL_DNB3 = 0x7B,
  MODEL_VMAFF1 = 0x7C,
  MODEL_VMAFF2 = 0x7D,
  MODEL_VMAFF3 = 0x7E,
  MODEL_VMAFF4 = 0x7F,
  MODEL_DNMYLC = 0x80,
  MODEL_DNFOLC1 = 0x81,
  MODEL_DNFOLC2 = 0x82,
  MODEL_DNFYLC = 0x83,
  MODEL_DNMOLC1 = 0x84,
  MODEL_DNMOLC2 = 0x85,
  MODEL_SBMOTR2 = 0x86,
  MODEL_SWMOTR2 = 0x87,
  MODEL_SBMYTR3 = 0x88,
  MODEL_SWMOTR3 = 0x89,
  MODEL_WFYBE = 0x8A,
  MODEL_BFYBE = 0x8B,
  MODEL_HFYBE = 0x8C,
  MODEL_SOFYBU = 0x8D,
  MODEL_SBMYST = 0x8E,
  MODEL_SBMYCR = 0x8F,
  MODEL_BMYCG = 0x90,
  MODEL_WFYCRK = 0x91,
  MODEL_HMYCM = 0x92,
  MODEL_WMYBU = 0x93,
  MODEL_BFYBU = 0x94,
  MODEL_WFYBU = 0x96,
  MODEL_DWFYLC1 = 0x97,
  MODEL_WFYPRO = 0x98,
  MODEL_WMYCONB = 0x99,
  MODEL_WMYBE = 0x9A,
  MODEL_WMYPIZZ = 0x9B,
  MODEL_BMOBAR = 0x9C,
  MODEL_CWFYHB = 0x9D,
  MODEL_CWMOFR = 0x9E,
  MODEL_CWMOHB1 = 0x9F,
  MODEL_CWMOHB2 = 0xA0,
  MODEL_CWMYFR = 0xA1,
  MODEL_CWMYHB1 = 0xA2,
  MODEL_BMYBOUN = 0xA3,
  MODEL_WMYBOUN = 0xA4,
  MODEL_WMOMIB = 0xA5,
  MODEL_BMYMIB = 0xA6,
  MODEL_WMYBELL = 0xA7,
  MODEL_BMOCHIL = 0xA8,
  MODEL_SOFYRI = 0xA9,
  MODEL_SOMYST = 0xAA,
  MODEL_VWMYBJD = 0xAB,
  MODEL_VWFYCRP = 0xAC,
  MODEL_SFR1 = 0xAD,
  MODEL_SFR2 = 0xAE,
  MODEL_SFR3 = 0xAF,
  MODEL_BMYBAR = 0xB0,
  MODEL_WMYBAR = 0xB1,
  MODEL_WFYSEX = 0xB2,
  MODEL_WMYAMMO = 0xB3,
  MODEL_BMYTATT = 0xB4,
  MODEL_VWMYCR = 0xB5,
  MODEL_VBMOCD = 0xB6,
  MODEL_VBMYCR = 0xB7,
  MODEL_VHMYCR = 0xB8,
  MODEL_SBMYRI = 0xB9,
  MODEL_SOMYRI = 0xBA,
  MODEL_SOMYBU = 0xBB,
  MODEL_SWMYST = 0xBC,
  MODEL_WMYVA = 0xBD,
  MODEL_COPGRL3 = 0xBE,
  MODEL_GUNGRL3 = 0xBF,
  MODEL_MECGRL3 = 0xC0,
  MODEL_NURGRL3 = 0xC1,
  MODEL_CROGRL3 = 0xC2,
  MODEL_GANGRL3 = 0xC3,
  MODEL_CWFOFR = 0xC4,
  MODEL_CWFOHB = 0xC5,
  MODEL_CWFYFR1 = 0xC6,
  MODEL_CWFYFR2 = 0xC7,
  MODEL_CWMYHB2 = 0xC8,
  MODEL_DWFYLC2 = 0xC9,
  MODEL_DWMYLC2 = 0xCA,
  MODEL_OMYKARA = 0xCB,
  MODEL_WMYKARA = 0xCC,
  MODEL_WFYBURG = 0xCD,
  MODEL_VWMYCD = 0xCE,
  MODEL_VHFYPRO = 0xCF,
  MODEL_OMONOOD = 0xD1,
  MODEL_OMOBOAT = 0xD2,
  MODEL_WFYCLOT = 0xD3,
  MODEL_VWMOTR1 = 0xD4,
  MODEL_VWMOTR2 = 0xD5,
  MODEL_VWFYWAI = 0xD6,
  MODEL_SBFORI = 0xD7,
  MODEL_SWFYRI = 0xD8,
  MODEL_WMYCLOT = 0xD9,
  MODEL_SBFOST = 0xDA,
  MODEL_SBFYRI = 0xDB,
  MODEL_SBMOCD = 0xDC,
  MODEL_SBMORI = 0xDD,
  MODEL_SBMOST = 0xDE,
  MODEL_SHMYCR = 0xDF,
  MODEL_SOFORI = 0xE0,
  MODEL_SOFOST = 0xE1,
  MODEL_SOFYST = 0xE2,
  MODEL_SOMOBU = 0xE3,
  MODEL_SOMORI = 0xE4,
  MODEL_SOMOST = 0xE5,
  MODEL_SWMOTR5 = 0xE6,
  MODEL_SWFORI = 0xE7,
  MODEL_SWFOST = 0xE8,
  MODEL_SWFYST = 0xE9,
  MODEL_SWMOCD = 0xEA,
  MODEL_SWMORI = 0xEB,
  MODEL_SWMOST = 0xEC,
  MODEL_SHFYPRO = 0xED,
  MODEL_SBFYPRO = 0xEE,
  MODEL_SWMOTR4 = 0xEF,
  MODEL_SWMYRI = 0xF0,
  MODEL_SMYST = 0xF1,
  MODEL_SMYST2 = 0xF2,
  MODEL_SFYPRO = 0xF3,
  MODEL_VBFYST2 = 0xF4,
  MODEL_VBFYPRO = 0xF5,
  MODEL_VHFYST3 = 0xF6,
  MODEL_BIKERA = 0xF7,
  MODEL_BIKERB = 0xF8,
  MODEL_BMYPIMP = 0xF9,
  MODEL_SWMYCR = 0xFA,
  MODEL_WFYLG = 0xFB,
  MODEL_WMYVA2 = 0xFC,
  MODEL_BMOSEC = 0xFD,
  MODEL_BIKDRUG = 0xFE,
  MODEL_WMYCH = 0xFF,
  MODEL_SBFYSTR = 0x100,
  MODEL_SWFYSTR = 0x101,
  MODEL_HECK1 = 0x102,
  MODEL_HECK2 = 0x103,
  MODEL_BMYCON = 0x104,
  MODEL_WMYCD1 = 0x105,
  MODEL_BMOCD = 0x106,
  MODEL_VWFYWA2 = 0x107,
  MODEL_WMOICE = 0x108,
  MODEL_LAEMT1 = 0x112,
  MODEL_LVEMT1 = 0x113,
  MODEL_SFEMT1 = 0x114,
  MODEL_LAFD1 = 0x115,
  MODEL_LVFD1 = 0x116,
  MODEL_SFFD1 = 0x117,
  MODEL_LAPD1 = 0x118,
  MODEL_SFPD1 = 0x119,
  MODEL_LVPD1 = 0x11A,
  MODEL_CSHER = 0x11B,
  MODEL_LAPDM1 = 0x11C,
  MODEL_SWAT = 0x11D,
  MODEL_FBI = 0x11E,
  MODEL_ARMY = 0x11F,
  MODEL_DSHER = 0x120,
  MODEL_SPECIAL01 = 0x122,
  MODEL_SPECIAL02 = 0x123,
  MODEL_SPECIAL03 = 0x124,
  MODEL_SPECIAL04 = 0x125,
  MODEL_SPECIAL05 = 0x126,
  MODEL_SPECIAL06 = 0x127,
  MODEL_SPECIAL07 = 0x128,
  MODEL_SPECIAL08 = 0x129,
  MODEL_SPECIAL09 = 0x12A,
  MODEL_SPECIAL10 = 0x12B,
  MODEL_LANDSTAL = 0x190,
  MODEL_BRAVURA = 0x191,
  MODEL_BUFFALO = 0x192,
  MODEL_LINERUN = 0x193,
  MODEL_PEREN = 0x194,
  MODEL_SENTINEL = 0x195,
  MODEL_DUMPER = 0x196,
  MODEL_FIRETRUK = 0x197,
  MODEL_TRASH = 0x198,
  MODEL_STRETCH = 0x199,
  MODEL_MANANA = 0x19A,
  MODEL_INFERNUS = 0x19B,
  MODEL_VOODOO = 0x19C,
  MODEL_PONY = 0x19D,
  MODEL_MULE = 0x19E,
  MODEL_CHEETAH = 0x19F,
  MODEL_AMBULAN = 0x1A0,
  MODEL_LEVIATHN = 0x1A1,
  MODEL_MOONBEAM = 0x1A2,
  MODEL_ESPERANT = 0x1A3,
  MODEL_TAXI = 0x1A4,
  MODEL_WASHING = 0x1A5,
  MODEL_BOBCAT = 0x1A6,
  MODEL_MRWHOOP = 0x1A7,
  MODEL_BFINJECT = 0x1A8,
  MODEL_HUNTER = 0x1A9,
  MODEL_PREMIER = 0x1AA,
  MODEL_ENFORCER = 0x1AB,
  MODEL_SECURICA = 0x1AC,
  MODEL_BANSHEE = 0x1AD,
  MODEL_PREDATOR = 0x1AE,
  MODEL_BUS = 0x1AF,
  MODEL_RHINO = 0x1B0,
  MODEL_BARRACKS = 0x1B1,
  MODEL_HOTKNIFE = 0x1B2,
  MODEL_ARTICT1 = 0x1B3,
  MODEL_PREVION = 0x1B4,
  MODEL_COACH = 0x1B5,
  MODEL_CABBIE = 0x1B6,
  MODEL_STALLION = 0x1B7,
  MODEL_RUMPO = 0x1B8,
  MODEL_RCBANDIT = 0x1B9,
  MODEL_ROMERO = 0x1BA,
  MODEL_PACKER = 0x1BB,
  MODEL_MONSTER = 0x1BC,
  MODEL_ADMIRAL = 0x1BD,
  MODEL_SQUALO = 0x1BE,
  MODEL_SEASPAR = 0x1BF,
  MODEL_PIZZABOY = 0x1C0,
  MODEL_TRAM = 0x1C1,
  MODEL_ARTICT2 = 0x1C2,
  MODEL_TURISMO = 0x1C3,
  MODEL_SPEEDER = 0x1C4,
  MODEL_REEFER = 0x1C5,
  MODEL_TROPIC = 0x1C6,
  MODEL_FLATBED = 0x1C7,
  MODEL_YANKEE = 0x1C8,
  MODEL_CADDY = 0x1C9,
  MODEL_SOLAIR = 0x1CA,
  MODEL_TOPFUN = 0x1CB,
  MODEL_SKIMMER = 0x1CC,
  MODEL_PCJ600 = 0x1CD,
  MODEL_FAGGIO = 0x1CE,
  MODEL_FREEWAY = 0x1CF,
  MODEL_RCBARON = 0x1D0,
  MODEL_RCRAIDER = 0x1D1,
  MODEL_GLENDALE = 0x1D2,
  MODEL_OCEANIC = 0x1D3,
  MODEL_SANCHEZ = 0x1D4,
  MODEL_SPARROW = 0x1D5,
  MODEL_PATRIOT = 0x1D6,
  MODEL_QUAD = 0x1D7,
  MODEL_COASTG = 0x1D8,
  MODEL_DINGHY = 0x1D9,
  MODEL_HERMES = 0x1DA,
  MODEL_SABRE = 0x1DB,
  MODEL_RUSTLER = 0x1DC,
  MODEL_ZR350 = 0x1DD,
  MODEL_WALTON = 0x1DE,
  MODEL_REGINA = 0x1DF,
  MODEL_COMET = 0x1E0,
  MODEL_BMX = 0x1E1,
  MODEL_BURRITO = 0x1E2,
  MODEL_CAMPER = 0x1E3,
  MODEL_MARQUIS = 0x1E4,
  MODEL_BAGGAGE = 0x1E5,
  MODEL_DOZER = 0x1E6,
  MODEL_MAVERICK = 0x1E7,
  MODEL_VCNMAV = 0x1E8,
  MODEL_RANCHER = 0x1E9,
  MODEL_FBIRANCH = 0x1EA,
  MODEL_VIRGO = 0x1EB,
  MODEL_GREENWOO = 0x1EC,
  MODEL_JETMAX = 0x1ED,
  MODEL_HOTRING = 0x1EE,
  MODEL_SANDKING = 0x1EF,
  MODEL_BLISTAC = 0x1F0,
  MODEL_POLMAV = 0x1F1,
  MODEL_BOXVILLE = 0x1F2,
  MODEL_BENSON = 0x1F3,
  MODEL_MESA = 0x1F4,
  MODEL_RCGOBLIN = 0x1F5,
  MODEL_HOTRINA = 0x1F6,
  MODEL_HOTRINB = 0x1F7,
  MODEL_BLOODRA = 0x1F8,
  MODEL_RNCHLURE = 0x1F9,
  MODEL_SUPERGT = 0x1FA,
  MODEL_ELEGANT = 0x1FB,
  MODEL_JOURNEY = 0x1FC,
  MODEL_BIKE = 0x1FD,
  MODEL_MTBIKE = 0x1FE,
  MODEL_BEAGLE = 0x1FF,
  MODEL_CROPDUST = 0x200,
  MODEL_STUNT = 0x201,
  MODEL_PETRO = 0x202,
  MODEL_RDTRAIN = 0x203,
  MODEL_NEBULA = 0x204,
  MODEL_MAJESTIC = 0x205,
  MODEL_BUCCANEE = 0x206,
  MODEL_SHAMAL = 0x207,
  MODEL_HYDRA = 0x208,
  MODEL_FCR900 = 0x209,
  MODEL_NRG500 = 0x20A,
  MODEL_COPBIKE = 0x20B,
  MODEL_CEMENT = 0x20C,
  MODEL_TOWTRUCK = 0x20D,
  MODEL_FORTUNE = 0x20E,
  MODEL_CADRONA = 0x20F,
  MODEL_FBITRUCK = 0x210,
  MODEL_WILLARD = 0x211,
  MODEL_FORKLIFT = 0x212,
  MODEL_TRACTOR = 0x213,
  MODEL_COMBINE = 0x214,
  MODEL_FELTZER = 0x215,
  MODEL_REMINGTN = 0x216,
  MODEL_SLAMVAN = 0x217,
  MODEL_BLADE = 0x218,
  MODEL_FREIGHT = 0x219,
  MODEL_STREAK = 0x21A,
  MODEL_VORTEX = 0x21B,
  MODEL_VINCENT = 0x21C,
  MODEL_BULLET = 0x21D,
  MODEL_CLOVER = 0x21E,
  MODEL_SADLER = 0x21F,
  MODEL_FIRELA = 0x220,
  MODEL_HUSTLER = 0x221,
  MODEL_INTRUDER = 0x222,
  MODEL_PRIMO = 0x223,
  MODEL_CARGOBOB = 0x224,
  MODEL_TAMPA = 0x225,
  MODEL_SUNRISE = 0x226,
  MODEL_MERIT = 0x227,
  MODEL_UTILITY = 0x228,
  MODEL_NEVADA = 0x229,
  MODEL_YOSEMITE = 0x22A,
  MODEL_WINDSOR = 0x22B,
  MODEL_MONSTERA = 0x22C,
  MODEL_MONSTERB = 0x22D,
  MODEL_URANUS = 0x22E,
  MODEL_JESTER = 0x22F,
  MODEL_SULTAN = 0x230,
  MODEL_STRATUM = 0x231,
  MODEL_ELEGY = 0x232,
  MODEL_RAINDANC = 0x233,
  MODEL_RCTIGER = 0x234,
  MODEL_FLASH = 0x235,
  MODEL_TAHOMA = 0x236,
  MODEL_SAVANNA = 0x237,
  MODEL_BANDITO = 0x238,
  MODEL_FREIFLAT = 0x239,
  MODEL_STREAKC = 0x23A,
  MODEL_KART = 0x23B,
  MODEL_MOWER = 0x23C,
  MODEL_DUNERIDE = 0x23D,
  MODEL_SWEEPER = 0x23E,
  MODEL_BROADWAY = 0x23F,
  MODEL_TORNADO = 0x240,
  MODEL_AT400 = 0x241,
  MODEL_DFT30 = 0x242,
  MODEL_HUNTLEY = 0x243,
  MODEL_STAFFORD = 0x244,
  MODEL_BF400 = 0x245,
  MODEL_NEWSVAN = 0x246,
  MODEL_TUG = 0x247,
  MODEL_PETROTR = 0x248,
  MODEL_EMPEROR = 0x249,
  MODEL_WAYFARER = 0x24A,
  MODEL_EUROS = 0x24B,
  MODEL_HOTDOG = 0x24C,
  MODEL_CLUB = 0x24D,
  MODEL_FREIBOX = 0x24E,
  MODEL_ARTICT3 = 0x24F,
  MODEL_ANDROM = 0x250,
  MODEL_DODO = 0x251,
  MODEL_RCCAM = 0x252,
  MODEL_LAUNCH = 0x253,
  MODEL_COPCARLA = 0x254,
  MODEL_COPCARSF = 0x255,
  MODEL_COPCARVG = 0x256,
  MODEL_COPCARRU = 0x257,
  MODEL_PICADOR = 0x258,
  MODEL_SWATVAN = 0x259,
  MODEL_ALPHA = 0x25A,
  MODEL_PHOENIX = 0x25B,
  MODEL_GLENSHIT = 0x25C,
  MODEL_SADLSHIT = 0x25D,
  MODEL_BAGBOXA = 0x25E,
  MODEL_BAGBOXB = 0x25F,
  MODEL_TUGSTAIR = 0x260,
  MODEL_BOXBURG = 0x261,
  MODEL_FARMTR1 = 0x262,
  MODEL_UTILTR1 = 0x263,
  MODEL_BUSX3GL = 0x264,
  MODEL_BAGX3GL = 0x265,
};

/*  393 */
enum VehicleComponents
{
  BUMP_REAR = 0x6,
  DOOR_RF = 0x8,
  DOOR_RR = 0x9,
  DOOR_LF = 0xA,
  DOOR_LR = 0xB,
};

/*  394 */
#pragma pack(push, 1)
struct MaterialRestoreData
{
  int pMaterialField;
  int OldData;
};
#pragma pack(pop)

/*  396 */
#pragma pack(push, 1)
struct CRegisteredCorona
{
  RwV3D m_vPos;
  int m_dwId;
  int m_pTexture;
  float m_fSize;
  float m_fAngle;
  float m_fFarClip;
  float m_fNearClip;
  DWORD m_fHeightAboveGround;
  float m_fFadeSpeed;
  RwRGBA m_sColor;
  unsigned __int8 m_bFadeState;
  char m_bRegisteredThisFrame;
  char m_bFlare;
  char m_bUsesReflection;
  unsigned __int8 m_bFlags1;
  char m_bJustCreated;
  unsigned __int8 m_bFlags2;
  char __padding0;
  int m_pAttachedTo;
};
#pragma pack(pop)

/*  398 */
#pragma pack(push, 1)
struct CHalo
{
  float DistanceToScreenCenter;
  int Size;
  __int16 red;
  __int16 green;
  __int16 blue;
  __int16 alpha;
  int numVertices?;
};
#pragma pack(pop)

/*  402 */
#pragma pack(push, 1)
struct CBulletTrack
{
  RwV3D TransSide;
  RwV3D YellowSide;
  char ExistFlag;
  char pad1;
  char pad2;
  char pad3;
  int createdTime;
  int disappearTime;
  int Radius;
  char alpha;
  char pad4;
  char pad5;
  char pad6;
};
#pragma pack(pop)

/*  403 */
#pragma pack(push, 1)
struct CTrainNodePoint
{
  __int16 x;
  __int16 y;
  __int16 z;
  __int16 distanceFromStart;
  __int16 field_8;
};
#pragma pack(pop)

/*  404 */
#pragma pack(push, 1)
struct CStreamSector
{
  int pEntities1;
  int pEntities2;
};
#pragma pack(pop)

/*  405 */
#pragma pack(push, 1)
struct CGlass
{
  RwMatrix matrix;
  int field_40;
  int field_44;
  int speed?;
  int field_4C;
  int field_50;
  RwV3D field_54;
  int createdTime;
  int field_64;
  int field_68;
  char field_6C;
  char existFlag;
  __int16 field_6E;
};
#pragma pack(pop)

/*  406 */
#pragma pack(push, 1)
struct CHandmanPlanes
{
  RwV3D cornerAA;
  RwV3D cornerAB;
  RwV3D cornerBA;
  RwV3D cornerBB;
  texCoords texCoorsAA;
  texCoords texCoorsAB;
  texCoords texCoorsBA;
  texCoords texCoorsBB;
  int visibleDistance;
  RwRGBA color;
};
#pragma pack(pop)

/*  408 */
#pragma pack(push, 1)
struct texCoords
{
  int u;
  int v;
};
#pragma pack(pop)

/*  409 */
#pragma pack(push, 1)
struct CRegisteredMotionBlurStreak
{
  int entity;
  RwRGBA color;
  RwV3D startPoint;
  RwV3D field_14;
  RwV3D field_20;
  RwV3D endPoint;
  RwV3D field_38;
  RwV3D field_44;
  char existFlag;
  char field_51;
  char field_52;
  char field_53;
};
#pragma pack(pop)

/*  410 */
#pragma pack(push, 1)
struct CLuminousPolygon
{
  RwV3D position;
  RwV3D right;
  RwV3D top;
  RwV3D at;
  int distanceToCamera;
  char color;
  char field_35;
  char field_36;
  char field_37;
};
#pragma pack(pop)

/*  411 */
#pragma pack(push, 1)
struct C3DMarker
{
  RwMatrix m_mat;
  int dwPad;
  int dwPad2;
  int m_pRwObject;
  int m_pMaterial;
  __int16 m_nType;
  __int16 m_bIsUsed;
  int m_nIdentifier;
  RwRGBA rwColour;
  __int16 m_nPulsePeriod;
  __int16 m_nRotateRate;
  int m_nStartTime;
  int m_fPulseFraction;
  int m_fStdSize;
  int m_fSize;
  int m_fBrightness;
  int m_fCameraRange;
  RwV3D m_normal;
  __int16 m_LastMapReadX;
  __int16 m_LastMapReadY;
  int m_LastMapReadResultZ;
  int m_roofHeight;
  RwV3D m_lastPosition;
  int m_OnScreenTestTime;
};
#pragma pack(pop)

/*  412 */
#pragma pack(push, 1)
struct CCheckpoint
{
  __int16 type;
  char isUsed;
  char field_3;
  int handle;
  RwRGBA color;
  __int16 field_C;
  __int16 field_E;
  RwV3D position;
  RwV3D direction;
  int field_28;
  int size;
  int field_30;
  int field_34;
};
#pragma pack(pop)

/*  413 */
#pragma pack(push, 1)
struct CTrainPathNode
{
  __int16 field_0;
  __int16 field_2;
  __int16 field_4;
  __int16 field_6;
  __int16 x;
  __int16 y;
  __int16 z;
};
#pragma pack(pop)

/*  414 */
#pragma pack(push, 1)
struct CStreamRepeatSector
{
  int pEntities1;
  int pEntities2;
  int pEntities3;
};
#pragma pack(pop)

/*  416 */
#pragma pack(push, 1)
struct RectX2Y2
{
  int x1;
  int y1;
  int x2;
  int y2;
};
#pragma pack(pop)

/*  419 */
#pragma pack(push, 1)
struct CShadowData
{
  CPhysical *physical;
  char existFlag;
  char ucIntensity;
  __int16 _pad1;
  CShadowImage image;
  char bIsBlurred;
  char _pad2[3];
  CShadowImage imageBlurred;
  int nBlurPasses;
  char bDrawMoreBlur;
  char _pad3[3];
  int objectType;
  int light;
  RwSphere boundingSphere;
  RwSphere baseSphere;
};
#pragma pack(pop)

/*  421 */
#pragma pack(push, 1)
struct CRegisteredShadow
{
  RwV3D pos;
  float X1;
  float Y1;
  float X2;
  float Y2;
  float zDistance;
  float scale;
  RwTexture *texture;
  int shadowData;
  __int16 intensity;
  char type;
  char rChannel;
  char gChannel;
  char bChannel;
  __int16 flags;
};
#pragma pack(pop)

/*  422 */
#pragma pack(push, 1)
struct CPermanentShadow
{
  RwV3D pos;
  float X1;
  float Y1;
  float X2;
  float Y2;
  float zDistance;
  float scale;
  int timeCreated;
  int timeDuration;
  RwTexture *texture;
  __int16 intensity;
  char type;
  char red;
  char green;
  char blue;
  __int16 flags;
};
#pragma pack(pop)

/*  423 */
#pragma pack(push, 1)
struct CStaticShadow
{
  int id;
  int field_4;
  int timeCreated;
  RwV3D pos;
  int X1;
  int Y1;
  int X2;
  int Y2;
  int zDistance;
  int scale;
  int texture;
  __int16 intensity;
  char blendType;
  char red;
  char green;
  char blue;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  __int16 field_3E;
};
#pragma pack(pop)

/*  425 */
#pragma pack(push, 2)
struct fake_CTimeShadow
{
  float float0;
  _BYTE f4[42];
  _BYTE type;
};
#pragma pack(pop)

/*  426 */
#pragma pack(push, 2)
struct struct_shadow
{
  float float0;
  _BYTE f4[42];
  _BYTE byte2E;
};
#pragma pack(pop)

/*  427 */
#pragma pack(push, 1)
struct CColPoint
{
  RwV3D point;
  int field_C;
  RwV3D normal;
  int field_1C;
  char surfaceTypeA;
  char pieceTypeA;
  char lightingA;
  char surfaceTypeB;
  char pieceTypeB;
  char lightingB;
  char field_26[2];
  float depth;
};
#pragma pack(pop)

/*  429 */
#pragma pack(push, 1)
struct CStoredCollPoly
{
  RwV3D meshVertexA;
  RwV3D meshVertexB;
  RwV3D meshVertexC;
  char isActual;
  char _padding[3];
  int lighting;
};
#pragma pack(pop)

/*  430 */
#pragma pack(push, 1)
struct CColLine
{
  RwV3D m_vStart;
  int m_fStartSize;
  RwV3D m_vEnd;
  int m_fEndSize;
};
#pragma pack(pop)

/*  431 */
#pragma pack(push, 1)
struct CMeshVertex
{
  __int16 x;
  __int16 y;
  __int16 z;
};
#pragma pack(pop)

/*  432 */
enum trueFalse
{
  false = 0x0,
  true = 0x1,
};

/*  433 */
#pragma pack(push, 1)
struct CamJiggleObject
{
  RwV3D field_0;
  RwV3D field_C;
  RwV3D field_18;
  RwV3D field_24;
  RwV3D field_30;
  RwMatrix field_3C;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
};
#pragma pack(pop)

/*  434 */
#pragma pack(push, 1)
struct CQueuedMode
{
  __int16 Mode;
  __int16 __padding0;
  float Duration;
  __int16 MinZoom;
  __int16 MaxZoom;
};
#pragma pack(pop)

/*  435 */
#pragma pack(push, 1)
struct CAnimBlendSequence
{
  int hash;
  __int16 flags;
  __int16 frameCount;
  int frames;
};
#pragma pack(pop)

/*  436 */
#pragma pack(push, 1)
struct CAutomobileDoor
{
  float m_fOpenAngle;
  float m_fClosedAngle;
  __int16 m_nDirn;
  char m_nAxis;
  char m_nDoorState;
  float m_fAngle;
  float m_fPrevAngle;
  int m_fAngVel;
};
#pragma pack(pop)

/*  437 */
#pragma pack(push, 1)
struct CAutomobilePanel
{
  __int16 m_sFrameId;
  __int16 m_sAxis;
  float m_fAngleLimit;
  RwV3D m_vRotation;
  RwV3D m_vPos;
};
#pragma pack(pop)

/*  439 */
#pragma pack(push, 1)
struct unkColStruct
{
  __int16 x;
  __int16 y;
  __int16 z;
  int field_6;
};
#pragma pack(pop)

/*  440 */
#pragma pack(push, 1)
struct CFaceGroup
{
  RwBBox bbox;
  __int16 startFace;
  __int16 endFace;
};
#pragma pack(pop)

/*  441 */
#pragma pack(push, 1)
struct unkShadColStruct
{
  RwV3D field_0;
  RwMatrix field_C;
  char field_4C;
  char gap_4D[3];
  int field_50;
  char gap_54[4];
  RwMatrix field_58;
};
#pragma pack(pop)

/*  442 */
#pragma pack(push, 1)
struct struct_v7
{
  RwV3D field_0;
  _BYTE fC[12];
  _DWORD dword18;
  RwV2D dword1C;
  RwV3D field_24;
  _BYTE f30[12];
  _DWORD dword3C;
  RwV2D dword40;
  RwV3D field_48;
  _BYTE f54[12];
  _DWORD dword60;
  RwV2D dword64;
};
#pragma pack(pop)

/*  444 */
#pragma pack(push, 1)
struct Vertex3Dx3
{
  RwV3D vector1;
  RwV3D vector2;
  RwV3D vector3;
};
#pragma pack(pop)

/*  445 */
union __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  __int8 m64_i8[8];
  __int16 m64_i16[4];
  __int32 m64_i32[2];
  __int64 m64_i64;
  unsigned __int8 m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned __int32 m64_u32[2];
};

/*  446 */
union __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  __int8 m128_i8[16];
  __int16 m128_i16[8];
  __int32 m128_i32[4];
  __int64 m128_i64[2];
  unsigned __int8 m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned __int32 m128_u32[4];
};

/*  447 */
struct __m128d
{
  double m128d_f64[2];
};

/*  448 */
union __m128i
{
  __int8 m128i_i8[16];
  __int16 m128i_i16[8];
  __int32 m128i_i32[4];
  __int64 m128i_i64[2];
  unsigned __int8 m128i_u8[16];
  unsigned __int16 m128i_u16[8];
  unsigned __int32 m128i_u32[4];
  unsigned __int64 m128i_u64[2];
};

/*  449 */
#pragma pack(push, 1)
struct CCarCtrl
{
  CNodeInfo field_0;
  CNodeInfo startingRouteNode;
  CNodeInfo field_8;
  _DWORD dwordC;
  _DWORD dword10;
  __int16 m_wCurrentNaviNodeInfo;
  __int16 m_wNextPathPointId;
  __int16 m_wPreviousPathPointId;
  char gap_1A[2];
  _DWORD time1;
  _DWORD time2;
  _BYTE f24[1];
  _BYTE byte25;
  _BYTE byte26;
  _BYTE byte27;
  _BYTE byte28;
  _BYTE m_bDrivingStyle;
  _BYTE m_bMission;
  _BYTE m_bActionId;
  int m_dwActionTime;
  _DWORD dword30;
  _BYTE byte34;
  _BYTE byte35;
  _BYTE f36[2];
  _DWORD float38;
  _DWORD dword3C;
  _BYTE byte40;
  _BYTE byte41;
  _BYTE f42[2];
  _DWORD float44;
  _BYTE f48[1];
  _BYTE byte49;
  _BYTE byte4A;
  _BYTE byte4B;
  _BYTE byte4C;
  _BYTE byte4D;
  _BYTE byte4E;
  _BYTE byte4F;
  _BYTE byte50;
  char f51;
  char gap_52[10];
  CVector m_vDestinationCoors;
  CNodeInfo m_asPathFindNodesInfo[8];
  _WORD m_wPathFindNodesCount;
  _BYTE f8A[2];
  _DWORD dword8C;
  _DWORD dword90;
  _BYTE byte94;
  _BYTE byte95;
  __int16 field_96;
};
#pragma pack(pop)

/*  450 */
#pragma pack(push, 1)
struct struct_someTaskRelatedToCarDoorWindows
{
  _BYTE f0[8];
  _DWORD vehicle;
  _BYTE fC[20];
  _DWORD dword20;
  _BYTE f24[8];
  float float2C;
  _BYTE f30[24];
  _DWORD lastTime?;
  _BYTE f4C[16];
  _BYTE byte5C;
  char _padding[3];
};
#pragma pack(pop)

/*  451 */
#pragma pack(push, 1)
struct TempParticleParams
{
  RwRGBAReal color;
  float size;
  float field_14;
  float life;
};
#pragma pack(pop)

/*  452 */
enum BULLET_FX
{
  NONE = 0x0,
  SPARKS = 0x1,
  SAND = 0x2,
  WOOD = 0x3,
  DUST = 0x4,
};

/*  453 */
#pragma pack(push, 1)
struct CBulletInfo
{
  int weaponType;
  int firedFrom;
  int destroyTime;
  char existFlag;
  char pad1[3];
  RwV3D position;
  RwV3D velocity;
  __int16 damage;
  __int16 pad2;
};
#pragma pack(pop)

/*  456 */
#pragma pack(push, 1)
struct C2DfxLight
{
  RwV3D pos;
  char type;
  char field_D[3];
  RwRGBA color;
  int distance;
  int field_18;
  int size;
  int field_20[5];
};
#pragma pack(pop)

/*  457 */
#pragma pack(push, 1)
struct CPedIK
{
  int ThisPed;
  LimbOrienation m_torsoOrien;
  float m_fSlopePitch;
  float m_fSlopePitchLimitMult;
  float m_fSlopeRoll;
  float m_fBodyRoll;
  int m_flags;
};
#pragma pack(pop)

/*  458 */
#pragma pack(push, 1)
struct LimbOrienation
{
  float yaw;
  float pitch;
};
#pragma pack(pop)

/*  459 */
enum pedBones
{
  BONE_PELVIS1 = 1,
  BONE_PELVIS = 2,
  BONE_SPINE1 = 3,
  BONE_UPPERTORSO = 4,
  BONE_NECK = 5,
  BONE_HEAD2 = 6,
  BONE_HEAD1 = 7,
  BONE_HEAD = 8,
  BONE_RIGHTUPPERTORSO = 21,
  BONE_RIGHTSHOULDER = 22,
  BONE_RIGHTELBOW = 23,
  BONE_RIGHTWRIST = 24,
  BONE_RIGHTHAND = 25,
  BONE_RIGHTTHUMB = 26,
  BONE_LEFTUPPERTORSO = 31,
  BONE_LEFTSHOULDER = 32,
  BONE_LEFTELBOW = 33,
  BONE_LEFTWRIST = 34,
  BONE_LEFTHAND = 35,
  BONE_LEFTTHUMB = 36,
  BONE_LEFTHIP = 41,
  BONE_LEFTKNEE = 42,
  BONE_LEFTANKLE = 43,
  BONE_LEFTFOOT = 44,
  BONE_RIGHTHIP = 51,
  BONE_RIGHTKNEE = 52,
  BONE_RIGHTANKLE = 53,
  BONE_RIGHTFOOT = 54,
};

/*  460 */
#pragma pack(push, 1)
struct CParticle
{
  int m_pNext;
  int m_pPrev;
  CFxSystem *m_pFxSystem;
  RwMatrix *m_pParentMatrix;
  RwMatrix m_mWorld;
  char status;
  char m_bDestroyAfterFinishing;
  char field_52;
  char field_53;
  int field_54;
  int m_fCameraDistance;
  __int16 m_wBlackAmount;
  __int16 m_wFrequency;
  __int16 m_wSpeed;
  char flag;
  char field_63;
  float fUnkRandom;
  RwV3D m_vDirection;
  CBoundingSphere *m_pBoundingSphere;
  CParticlePrimData **m_pPrimsPtrList;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  char field_90[112];
  int field_100;
};
#pragma pack(pop)

/*  461 */
#pragma pack(push, 1)
struct CPointlight
{
  CVector position;
  CVector direction;
  float radius;
  int red;
  int green;
  int blue;
  int entityAffected;
  char type;
  char fogType;
  char generateShadows;
  char pad;
};
#pragma pack(pop)

/*  462 */
#pragma pack(push, 1)
struct CVehicle_vtbl
{
  void *(__thiscall *_delDtor)(CEntity *, char);
  int m04;
  int add;
  int remove;
  int m10;
  int setModelIndex;
  int (__thiscall *setModelIndexNoCreate)(_DWORD, signed int, _DWORD);
  int createRwObject;
  int deleteRwObject;
  int getBoundRect;
  int processControl;
  int processCollision;
  int m30;
  int m34;
  int teleport;
  int m3C;
  int m40;
  int preRender;
  int render;
  int setupLighting;
  int removeLighting;
  int flagToDestroyWhenNextProcessing;
  int processEntityCollision;
  int m5C;
  int processControlInput;
  int getComponentWorldPosition;
  int isComponentPresent;
  int m6C;
  int m70;
  int m74;
  int m78;
  int m7C;
  int m80;
  int m84;
  int m88;
  int m8C;
  int m90;
  int m94;
  int m98;
  int m9C;
  int mA0;
  int blowUp;
  int mA8;
  int mAC;
  int deflateTire;
  int mB4;
  int mB8;
  int mBC;
  int mC0;
  int mC4;
  int mC8;
  int mCC;
  int mD0;
  int getModelDistanceFromCenterToGround;
  int processCarAlarm;
  int mDC;
  int VehicleDamage;
  int isUpsideDown;
  int mE8;
  int getTowHitchPos;
  int mF0;
  int AttachTrailer;
  int DetachTrailer;
  int mFC;
  int m100;
  int m104;
};
#pragma pack(pop)

/*  463 */
#pragma pack(push, 1)
struct CPlaceable
{
  int _vmt;
  CPlaceableBase placeable;
};
#pragma pack(pop)

/*  465 */
#pragma pack(push, 1)
struct CEntityBase
{
  CPlaceableBase placeable;
  RpClump *m_pRWObject;
  eEntityFlags m_dwFlags;
  __int16 m_wRandomSeed;
  __int16 m_wModelIndex;
  int m_pReferences;
  void *m_pLastRenderedLink;
  __int16 m_nScanCode;
  char m_iplIndex;
  char m_nbInterior;
  CEntity *m_pLod;
  char m_bNumLodChildren;
  char m_bNumLodChildrenRendered;
  char m_bTypeState;
  char _pad0;
};
#pragma pack(pop)

/*  466 */
#pragma pack(push, 1)
struct CPhysicalBase
{
  CEntityBase entity;
  int field_38;
  int field_3C;
  int immunities;
  RwV3D m_vVelocity;
  RwV3D m_vAngularVelocity;
  RwV3D m_vAcceleration;
  RwV3D m_vAngularAcceleration;
  RwV3D m_vForce;
  RwV3D m_vTorque;
  float m_fMass;
  int m_fTurnMass;
  int m_fVelocityFrequency;
  float fAirResistance;
  float m_fElasticity;
  float m_fBuoyancyConstant;
  RwV3D CentreOfMass;
  int field_B0;
  int field_B4;
  char field_B8;
  char numEntitiesCollided;
  char contactSurface;
  char field_BB;
  int collidedEntities[6];
  int field_D4;
  int DamageIntensity;
  int DamageEntity;
  RwV3D LastCollisionDirection;
  RwV3D LastCollision;
  __int16 DamagedPart;
  __int16 field_FA;
  int AttachedTo;
  RwV3D AttachOffset;
  RwV3D AttachRotation;
  int field_118;
  int field_11C;
  int field_120;
  int field_124;
  int EntityIgnoredCollision;
  float collisionSurfaceBrightness;
  int field_130;
  CShadowData *shadowData;
};
#pragma pack(pop)

/*  467 */
#pragma pack(push, 1)
struct CVehicleBase
{
  CPhysicalBase physical;
  CVehicleAudio vehicleAudio;
  CHandlingVehicle *pVehicleHandling;
  int pPlaneHandling;
  int dwHandlingFlags;
  CCarCtrl carCtrl;
  char flags;
  char vehicleModeFlag;
  char field_42A;
  char field_42B;
  char field_42C;
  char field_42D;
  char field_42E;
  char field_42F;
  int field_430;
  char primaryColor;
  char secondaryColor;
  char tertiaryColor;
  char quaternaryColor;
  char extraA;
  char extraB;
  __int16 upgrades[15];
  float wheelSize;
  __int16 alarm;
  __int16 field_45E;
  CPed *driver;
  CPed *passenger[8];
  __int16 numPassengers;
  char field_486;
  char field_487;
  char maxPassengers;
  char gap_485[1];
  char field_48A;
  char specialColModelID;
  int lastBuildingCollidedWheel;
  int pFire;
  float fSteerAngle1;
  int fSteerAngle2;
  float gasPedal;
  float breakPedal;
  char m_cReference;
  char gap_4A1[1];
  __int16 field_4A6;
  char flags2;
  char field_4A9;
  char field_4AA;
  char gap_4A7[1];
  char field_4AC;
  char gap_4A9[3];
  float dirtLevel;
  int currentGear;
  int field_4B8;
  int field_4BC;
  float fHealth;
  CAutomobile *trailer;
  int tractor;
  int field_4CC;
  int someTime;
  int timeLastShot;
  int field_4D8;
  __int16 field_4DC;
  __int16 field_4DE;
  CPed *field_4E0;
  int field_4E4;
  int field_4E8;
  char field_4EC;
  char gap_4E9[11];
  int doorStatus;
  int field_4FC;
  int field_500;
  int field_504;
  char damageType;
  char gap_505[3];
  int damagingEntity;
  char gap_50C[1];
  char field_511;
  char field_512;
  char field_513;
  int field_514;
  char _f518;
  char _f519;
  char _f520;
  char _f521;
  CStoredCollPoly frontCollPoly;
  CStoredCollPoly rearCollPoly;
  char flWheelColBrightness;
  char rlWheelColBrightness;
  char frWheelColBrightness;
  char rrWheelColBrightness;
  int pOverheatParticle;
  int pFireParticle;
  int pDustParticle;
  int dwRenderLights;
  int LicensePlateTexture;
  CVehicle *pSomeVehicle;
  int vehicleClass;
  int vehicleSubClass;
  __int16 previousPaintjobTxdID;
  __int16 paintJobTxdID;
  int paintJobTexture;
};
#pragma pack(pop)

/*  468 */
#pragma pack(push, 1)
struct CAutomobileBase
{
  CVehicleBase vehicle;
  CDamageManager m_sDamageManager;
  CAutomobileDoor m_sDoor[6];
  HeliComponents m_pNode;
  char gap_69C[12];
  CAutomobilePanel m_sPanel[3];
  CAutomobileDoor m_sSwingingChassis;
  CColPoint m_sWheelColPoint[4];
  float wheelsDistancesToGround1[4];
  float wheelsDistancesToGround2[4];
  float field_7F4[4];
  float field_800;
  int field_804;
  int field_80C;
  int field_810[4];
  char field_81C[4];
  int field_820;
  int field_824[4];
  float field_838[4];
  int field_848[4];
  int field_858[4];
  char TaxiAvaliable;
  char field_869;
  char field_86A;
  char field_867;
  __int16 m_wMiscComponentTime;
  __int16 field_86E;
  int someEndTime;
  int someStartTime;
  float field_878;
  float wheelOffsetZ[4];
  int field_88C[3];
  float frontHeightAboveRoad;
  float rearHeightAboveRoad;
  float field_8A0;
  float fNitroValue;
  int field_8A4;
  int field_8A8;
  int field_8B0;
  int field_8B4[6];
  int field_8C8[6];
  int burnTimer;
  CEntity *wheelCollisionEntity[4];
  RwV3D wheelCollisionPos[4];
  char field_924;
  char field_925;
  char field_926;
  char field_927;
  char field_928;
  char field_929;
  char field_92A;
  char field_92B;
  char field_92C;
  char field_92D;
  char field_92E;
  char field_92F;
  char field_930;
  char field_931;
  char field_932;
  char field_933;
  char field_934;
  char field_935;
  char field_936;
  char field_937;
  char field_938;
  char field_939;
  char field_93A;
  char field_93B;
  char field_93C;
  char field_93D;
  char field_93E;
  char field_93F;
  int field_940;
  int field_944;
  float m_fDoomVerticalRotation;
  float m_fDoomHorizontalRotation;
  int fForcedHeading;
  float m_fUpDownLightAngle[2];
  char numContactWheels;
  char allWheelsOnGround;
  char field_962;
  char field_963;
  int field_964;
  int field_968[4];
  int pNitroParticle1;
  int pNitroParticle2;
  char field_980;
  char field_981;
  __int16 field_982;
  float field_984;
};
#pragma pack(pop)

/*  469 */
#pragma pack(push, 1)
struct CSuspensionLine
{
  RwV3D field_0;
  float field_C;
  RwV3D field_10;
  float field_1C;
};
#pragma pack(pop)

/*  470 */
#pragma pack(push, 1)
struct cheatTable
{
  BYTE WeaponSet1;
  BYTE WeaponSet2;
  BYTE WeaponSet3;
  BYTE HealthArmor250k;
  BYTE WantedLevel2Stars;
  BYTE ClearWantedLevel;
  BYTE SunnyWeather;
  BYTE VerySunnyWeather;
  BYTE OvercastWeather;
  BYTE RainyWeather;
  BYTE FoggyWeather;
  BYTE FasterClock;
  BYTE FasterGameplay;
  BYTE SlowerGameplay;
  BYTE PedsAttackOtherWithGolfclub;
  BYTE HaveABountyOnYourHead;
  BYTE EveryoneArmed;
  BYTE SpawnRhino;
  BYTE SpawnBloodringBanger;
  BYTE SpawnRancher;
  BYTE SpawnHotringA;
  BYTE SpawnHotringB;
  BYTE SpawnRomero;
  BYTE SpawnStretch;
  BYTE SpawnTrashmaster;
  BYTE SpawnCaddy;
  BYTE BlowUpAllCars;
  BYTE InvisibleCar;
  BYTE PerfectHandling;
  BYTE Suicide;
  BYTE AllGreenLights;
  BYTE AggressiveDrivers;
  BYTE PinkTraffic;
  BYTE BlackTraffic;
  BYTE CarsOnWater;
  BYTE BoatsFly;
  BYTE FatPlayer;
  BYTE MaxMuscle;
  BYTE SkinnyPlayer;
  BYTE ElvisIsEverywhere;
  BYTE PedsAttackYouWithRockets;
  BYTE BeachParty;
  BYTE GangMembersEverywhere;
  BYTE GangsControlsTheStreets;
  BYTE NinjaTheme;
  BYTE SlutMagnet;
  BYTE CheapTraffic;
  BYTE FastTraffic;
  BYTE CarsFly;
  BYTE HugeBunnyHop;
  BYTE SpawnHydra;
  BYTE SpawnVortex;
  BYTE SmashNBoom;
  BYTE AllCarsHaveNitro;
  BYTE CarsFloatAwayWhenHit;
  BYTE AlwaysMidnight;
  BYTE StopGameClockOrangeSky;
  BYTE ThunderStorm;
  BYTE SandStorm;
  BYTE Unused;
  BYTE MegaJump;
  BYTE InfiniteHealth;
  BYTE InfiniteOxygen;
  BYTE GetParachute;
  BYTE GetJetpack;
  BYTE NeverWanted;
  BYTE SixWantedStars;
  BYTE MegaPunch;
  BYTE NeverGetHungry;
  BYTE RiotMode;
  BYTE FunhouseTheme;
  BYTE AdrenalineMode;
  BYTE InfiniteAmmo;
  BYTE WeaponAimingWhileDriving;
  BYTE ReducedTraffic;
  BYTE CountryTraffic;
  BYTE RecruitAnyone;
  BYTE CountryCarsAndPeds;
  BYTE RecruitAnyoneRrockets;
  BYTE MaxRespect;
  BYTE MaxSexAppeal;
  BYTE MaxStamina;
  BYTE HitmanLevelForAllWeapons;
  BYTE MaxDrivingSkills;
  BYTE SpawnHunter;
  BYTE SpawnQuad;
  BYTE SpawnTankerTruck;
  BYTE SpawnDozer;
  BYTE SpawnStuntPlane;
  BYTE SpawnMonster;
};
#pragma pack(pop)

/*  471 */
enum floats
{
  f1_0 = 0x3F800000,
};

/*  472 */
#pragma pack(push, 1)
struct RGBword
{
  __int16 red;
  __int16 green;
  __int16 blue;
};
#pragma pack(pop)

/*  476 */
#pragma pack(push, 1)
struct CHeliLight
{
  RwV3D startPoint;
  RwV3D targetPoint;
  float targetRadius;
  float shadowIntensity;
  int coronaIndex;
  char unkFlag;
  char bDrawShadow;
  __int16 ?pad;
  RwV3D unkData[3];
};
#pragma pack(pop)

/*  477 */
#pragma pack(push, 1)
struct CHeli_vtbl
{
  void *(__thiscall *_delDtor)(CEntity *, char);
  int m04;
  int add;
  int remove;
  int m10;
  int setModelIndex;
  int setModelIndexNoCreate;
  int createRwObject;
  int deleteRwObject;
  int getBoundRect;
  int processControl;
  int processCollision;
  int m30;
  int m34;
  int teleport;
  int m3C;
  int m40;
  int preRender;
  int render;
  int setupLighting;
  int removeLighting;
  int flagToDestroyWhenNextProcessing;
  int ProcessControlCollisionCheck;
  int m5C;
  int processControlInput;
  int getComponentWorldPosition;
  int isComponentPresent;
  int m6C;
  int m70;
  int m74;
  int m78;
  int m7C;
  int isDoorReady;
  int m84;
  int isDoorFullyOpen;
  int m8C;
  int isDoorClosed;
  int m94;
  int isDoorMissing;
  int isOpenTopCar;
  int mA0;
  int blowUp;
  int mA8;
  int _retFalse1;
  int _retFalse2;
  int _retTrue1;
  int mB8;
  int _retNULL1;
  int mC0;
  int mC4;
  int fix;
  int mCC;
  int mD0;
  int getHeightAboveRoad;
  int processCarAlarm;
  int getNumContactWheels;
  int mE0;
  int canPedStepOutCar;
  int canPedJumpOutCar;
  int mEC;
  int mF0;
  int mF4;
  int detachTrailer;
  int findWheelWidth;
  int m100;
  int m104;
  int m108;
  int resetSuspension;
  int m110;
  int m114;
  int m118;
};
#pragma pack(pop)

/*  478 */
#pragma pack(push, 1)
struct CVehicleAudio
{
  _DWORD vmt;
  CVehicle *m_pVehicle;
  CSound m_sSound;
  __int16 field_7C;
  char gap_7E[2];
  VehicleAudioProperties m_sProperties;
  _BYTE field_A4;
  char field_A5;
  char field_A6;
  char field_A7;
  char field_A8;
  char field_A9;
  char field_AA;
  char gap_AB[1];
  int field_AC;
  char UnkModelFlag;
  char gap_B1[1];
  __int16 field_B2;
  __int16 field_B4;
  char gap_B6[2];
  int field_B8;
  char field_BC;
  char field_BD;
  char gap_BE[6];
  float field_C4;
  char m_bModelWithSiren;
  char gap_C9[3];
  int m_dwBoatHitWaveLastPlayedTime;
  int field_D0;
  int field_D4;
  float m_fGeneralVehicleSoundVolume;
  __int16 m_wEngineDecelerateSoundBankId;
  __int16 m_wEngineAccelerateSoundBankId;
  __int16 m_nEngineBankSlotId;
  __int16 field_E2;
  CVehicleSound m_aVehicleSounds[12];
  int field_144;
  __int16 field_148;
  __int16 field_14A;
  __int16 field_14C;
  __int16 field_14E;
  char gap_150[4];
  __int16 field_154;
  __int16 field_156;
  CSound *field_158;
  __int16 field_15C;
  char gap_15E[2];
  CSound *field_160;
  __int16 field_164;
  char gap_166[2];
  CSound *field_168;
  __int16 field_16C;
  char gap_16E[2];
  CSound *field_170;
  char gap_174[4];
  CSound *field_178;
  CSound *field_17C;
  CSound *field_180;
  _DWORD obj85F438;
  _BYTE field_188[12];
  _DWORD field_194;
  _BYTE field_198[116];
  _WORD field_20C;
  _BYTE field_20E[22];
  _DWORD field_224;
  _DWORD field_228;
  float field_22C;
  float field_230;
  float field_234;
  float field_238;
  float field_23C;
  int field_240;
  char field_244;
  char field_245[3];
  float field_248;
};
#pragma pack(pop)

/*  479 */
#pragma pack(push, 1)
struct VehicleAudioProperties
{
  char m_bVehicleType;
  char field_1;
  __int16 m_wEngineOnSoundBankId;
  __int16 m_wEngineOffSoundBankId;
  char m_bStereo;
  char field_7;
  int field_8;
  int field_C;
  char m_bHornTon;
  char field_11[3];
  int m_fHornHigh;
  char m_bDoorSound;
  char field_19;
  char m_bRadioNum;
  char m_bRadioType;
  char field_1C;
  char field_1D[3];
  int field_20;
};
#pragma pack(pop)

/*  480 */
#pragma pack(push, 1)
struct CStencilShadowObject
{
  CEntity *owner;
  __int16 numShadowFaces;
  char type;
  char pad;
  _DWORD sizeOfShadowFacesData;
  _DWORD faceID;
  _DWORD shadowFacesData;
  CStencilShadowObject *next;
  CStencilShadowObject *prev;
};
#pragma pack(pop)

/*  481 */
#pragma pack(push, 1)
struct C2dfxLight
{
  C2dfx base;
  RwRGBA color;
  float coronaFarClip;
  float pointlightRange;
  float coronaSize;
  float shadowSize;
  union flagsInfo coronaFlags;
  char coronaFlashType;
  char coronaEnableReflection;
  char coronaFlareType;
  char shadowColorMultiplier;
  char shadowZDistance;
  char offsetX;
  char offsetY;
  char offsetZ;
  char __pad[2];
  RwTexture *coronaTex;
  RwTexture *shadowTex;
  int field_38;
  int field_3C;
};
#pragma pack(pop)

/*  482 */
#pragma pack(push, 1)
struct c2dfx_rwStream
{
  _DWORD color;
  float coronaFarClip;
  float pointlightRange;
  float coronaSize;
  float shadowSize;
  char coronaFlashType;
  char coronaEnableReflection;
  char coronaFlareType;
  char shadowColorMultiplier;
  char flags1;
  char coronaName[24];
  char shadowName[24];
  char shadowZDistance;
  char flags2;
  char offsetX;
  char offsetY;
  char offsetZ;
  char __pad[2];
};
#pragma pack(pop)

/*  483 */
#pragma pack(push, 1)
struct CWaterVertex
{
  __int16 m_sX;
  __int16 m_sY;
  float m_fZ;
  float m_fUnknown;
  float m_fHeight;
  char m_cFlowX;
  char m_cFlowY;
  __int16 m_wPadding;
};
#pragma pack(pop)

/*  484 */
#pragma pack(push, 1)
struct CWaterPoly
{
  __int16 m_wVertexIDs[3];
};
#pragma pack(pop)

/*  486 */
#pragma pack(push, 1)
struct CWaterQuad
{
  __int16 m_wFourthVertexIDDummy;
  __int16 m_wFlags;
  char field_4[6];
};
#pragma pack(pop)

/*  487 */
#pragma pack(push, 1)
struct CWaterTriangle
{
  __int16 m_wFlags;
  char field_2[6];
};
#pragma pack(pop)

/*  488 */
#pragma pack(push, 1)
struct CTaskSimpleJetpack
{
  void *dword0;
  _BYTE f4[4];
  _BYTE byte8;
  _BYTE byte9;
  _BYTE byteA;
  _BYTE byteB;
  _BYTE byteC;
  _BYTE byteD;
  _BYTE byteE;
  _BYTE fF[1];
  _DWORD dword10;
  _DWORD dword14;
  float dword18;
  _DWORD dword1C;
  _DWORD dword20;
  _DWORD dword24;
  _DWORD dword28;
  _DWORD dword2C;
  _DWORD dword30;
  _DWORD dword34;
  _DWORD dword38;
  float dword3C;
  RpClump *jetpackObject;
  _DWORD dword44;
  RwV3D dword48;
  _DWORD dword54;
  _DWORD dword58;
  _DWORD dword5C;
  CObject *pcobject60;
  _DWORD particleA;
  _DWORD particleB;
  float m_fParticleIntensity;
};
#pragma pack(pop)

/*  489 */
enum Vehicle Classes
{
  VEHICLE_AUTOMOBILE = 0x0,
  VEHICLE_MTRUCK = 0x1,
  VEHICLE_QUAD = 0x2,
  VEHICLE_HELI = 0x3,
  VEHICLE_PLANE = 0x4,
  VEHICLE_BOAT = 0x5,
  VEHICLE_TRAIN = 0x6,
  VEHICLE_FHELI = 0x7,
  VEHICLE_FPLANE = 0x8,
  VEHICLE_BIKE = 0x9,
  VEHICLE_BMX = 0xA,
  VEHICLE_TRAILER = 0xB,
};

/*  490 */
#pragma pack(push, 1)
struct CFx
{
  CParticle *prt_blood;
  CParticle *prt_boatsplash;
  CParticle *prt_bubble;
  CParticle *prt_cardebris;
  CParticle *prt_collisionsmoke;
  CParticle *prt_gunshell;
  CParticle *prt_sand;
  CParticle *prt_sand2;
  CParticle *prt_smoke_huge;
  CParticle *prt_smokeII_3_expand;
  CParticle *prt_spark;
  CParticle *prt_spark_2;
  CParticle *prt_splash;
  CParticle *prt_wake;
  CParticle *prt_watersplash;
  CParticle *prt_wheeldirt;
  CParticle *prt_glass;
  CParticleData__LListHead entityParticlesList;
  int numCreatedBloodPools;
  int visualFxQuality;
  int verticesCount2;
  int verticesCount;
  int transformRenderFlags;
  RwRaster *pRasterToRender;
  RwMatrix *transformLTM;
  int pVerts;
};
#pragma pack(pop)

/*  491 */
enum eEntityTypes
{
  ENTITY_TYPE_BUILDING = 0x1,
  ENTITY_TYPE_VEHICLE = 0x2,
  ENTITY_TYPE_PED = 0x3,
  ENTITY_TYPE_OBJECT = 0x4,
  ENTITY_TYPE_DUMMY = 0x5,
};

/*  492 */
enum Visual Fx Quality
{
  FX_LOW = 0x0,
  FX_MEDIUM = 0x1,
  FX_HIGH = 0x2,
  FX_VERY_HIGH = 0x3,
};

/*  493 */
#pragma pack(push, 1)
struct CShadowImage
{
  RwCamera *camera;
  RwTexture *texture;
};
#pragma pack(pop)

/*  494 */
#pragma pack(push, 1)
struct CFireManager
{
  CFire fires[60];
};
#pragma pack(pop)

/*  495 */
#pragma pack(push, 1)
struct CVector
{
  float x;
  float y;
  float z;
};
#pragma pack(pop)

/*  496 */
#pragma pack(push, 1)
struct CVector2D
{
  float x;
  float y;
};
#pragma pack(pop)

/*  497 */
enum Vehicle Struct Offsets
{
  GUN_INDEX = 0xD,
};

/*  498 */
#pragma pack(push, 1)
struct CGrassManager
{
  _DWORD numActive;
  CGrass structs[32];
  _DWORD type;
  void *pObjectList[4];
};
#pragma pack(pop)

/*  499 */
#pragma pack(push, 1)
struct CGrass
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  RwV3D pos;
  _WORD type;
  _WORD field_32;
  float field_34;
  float field_38;
  RwTexture *m_pTexture;
  RwRGBA color;
  char colorIntensity;
  char field_45;
  char surface;
  char field_47;
  float randomSeed;
  _DWORD field_4C;
  _DWORD field_50;
  float field_54;
  _DWORD field_58;
};
#pragma pack(pop)

/*  500 */
#pragma pack(push, 1)
struct struct_C03A48
{
  _DWORD dword0;
  _DWORD dword4;
  _DWORD dword8;
  _DWORD dwordC;
  _DWORD dword10;
  _DWORD dword14;
  _DWORD dword18;
  _DWORD dword1C;
  _DWORD dword20;
  _DWORD dword24;
  _DWORD dword28;
  _DWORD dword2C;
  _BYTE f30[16];
  _DWORD dword40;
  _WORD word44;
  _BYTE byte46;
  char _padding;
  int field_48;
  int next;
  int prev;
};
#pragma pack(pop)

/*  501 */
#pragma pack(push, 1)
struct RpMeshHeader
{
  int flags;
  __int16 numMeshes;
  __int16 serialNum;
  int totalIndicesInMesh;
  int firstMeshOffset;
  RpMesh meshes[2];
};
#pragma pack(pop)

/*  502 */
enum RwStreamType
{
  rwNASTREAM = 0x0,
  rwSTREAMFILE = 0x1,
  rwSTREAMFILENAME = 0x2,
  rwSTREAMMEMORY = 0x3,
  rwSTREAMCUSTOM = 0x4,
};

/*  503 */
enum RwStreamAccessType
{
  rwNASTREAMACCESS = 0x0,
  rwSTREAMREAD = 0x1,
  rwSTREAMWRITE = 0x2,
  rwSTREAMAPPEND = 0x3,
};

/*  504 */
enum RwCameraClearMode
{
  rwCAMERACLEARIMAGE = 0x1,
  rwCAMERACLEARZ = 0x2,
  rwCAMERACLEARSTENCIL = 0x4,
};

/*  505 */
struct struct_this
{
  _BYTE f0[8];
  _DWORD dword8;
  _BYTE fC[20];
  _DWORD dword20;
};

/*  506 */
#pragma pack(push, 1)
struct RestoreEntry
{
  int address;
  int value;
};
#pragma pack(pop)

/*  507 */
#pragma pack(push, 1)
struct RwObjectNameIdAssocation
{
  char *name;
  int hirerarchyID;
  void *flags;
};
#pragma pack(pop)

/*  508 */
#pragma pack(push, 1)
struct RxD3D9InstanceData
{
  int numIndex;
  int minVert;
  RpMaterial *material;
  bool vertexAlpha;
  void *vertexShader;
  _DWORD baseIndex;
  _DWORD numVertices;
  _DWORD startIndex;
  _DWORD numPrimitives;
};
#pragma pack(pop)

/*  509 */
#pragma pack(push, 1)
struct CComponentStatus
{
  char bonnet;
  char boot;
  char door_lf;
  char door_rf;
  char door_lr;
  char door_rr;
};
#pragma pack(pop)

/*  511 */
enum ComponentState
{
  STATE_OK = 0x0,
  STATE_OPENED = 0x1,
  STATE_DAMAGED = 0x2,
  STATE_OPENED_DAMAGED = 0x3,
  STATE_NOTPRESENT = 0x4,
};

/*  512 */
enum tComponentGroup
{
  GROUP_PANEL = 0x0,
  GROUP_WHEEL = 0x1,
  GROUP_DOOR = 0x2,
  GROUP_BONNET = 0x3,
  GROUP_BOOT = 0x4,
  GROUP_LIGHT = 0x5,
  GROUP_NA = 0x6,
};

/*  513 */
enum tComponent
{
  TCOMPONENT_WHEEL_LF = 0x1,
  TCOMPONENT_WHEEL_RF = 0x2,
  TCOMPONENT_WHEEL_LR = 0x3,
  TCOMPONENT_WHEEL_RR = 0x4,
  TCOMPONENT_BONNET = 0x5,
  TCOMPONENT_BOOT = 0x6,
  TCOMPONENT_DOOR_LF = 0x7,
  TCOMPONENT_DOOR_RF = 0x8,
  TCOMPONENT_DOOR_LR = 0x9,
  TCOMPONENT_DOOR_RR = 0xA,
  TCOMPONENT_WING_LF = 0xB,
  TCOMPONENT_WING_RF = 0xC,
  TCOMPONENT_WING_LR = 0xD,
  TCOMPONENT_WING_RR = 0xE,
  TCOMPONENT_WINDSCREEN = 0xF,
  TCOMPONENT_BUMP_FRONT = 0x10,
  TCOMPONENT_BUMP_REAR = 0x11,
};

/*  514 */
enum PanelId
{
  PANEL_WING_LF = 0x0,
  PANEL_WING_RF = 0x1,
  PANEL_WINDSCREEN = 0x4,
  PANEL_BUMP_FRONT = 0x5,
  PANEL_BUMP_REAR = 0x6,
};

/*  515 */
enum Collision Components
{
  COLLISION_DEFAULT = 0x0,
  COLLISION_BONNET = 0x1,
  COLLISION_BOOT = 0x2,
  COLLISION_BUMP_FRONT = 0x3,
  COLLISION_BUMP_REAR = 0x4,
  COLLISION_DOOR_LF = 0x5,
  COLLISION_DOOR_RF = 0x6,
  COLLISION_DOOR_LR = 0x7,
  COLLISION_DOOR_RR = 0x8,
  COLLISION_WING_LF = 0x9,
  COLLISION_WING_RF = 0xA,
  COLLISION_WING_LR = 0xB,
  COLLISION_WING_RR = 0xC,
  COLLISION_WINDSCREEN = 0x13,
};

/*  516 */
#pragma pack(push, 1)
struct CBoat
{
  int _vmt;
  CVehicleBase vehicle;
  _DWORD dword5A0;
  _DWORD dword5A4;
  _DWORD dword5A8;
  _BYTE byte5AC;
  _BYTE f5AD[3];
  RwFrame *frameArray[12];
  CBoatObject1 object1;
  _DWORD dword5F8;
  float dword5FC;
  _DWORD time1;
  _DWORD dword604;
  _DWORD dword608;
  _DWORD dword60C;
  _DWORD dword610;
  _DWORD dword614;
  _DWORD dword618;
  _DWORD dword61C;
  _DWORD dword620;
  _DWORD dword624;
  int particle[2];
  _BYTE f630[12];
  _BYTE byte63C;
  _BYTE byte63D;
  _BYTE f63E[2];
  float dword640;
  _WORD word644;
  _BYTE f646[258];
  char char748[128];
};
#pragma pack(pop)

/*  517 */
#pragma pack(push, 1)
struct CBoatObject1
{
  float field_0;
  float field_4;
  __int16 field_8;
  char field_A[14];
};
#pragma pack(pop)

/*  518 */
#pragma pack(push, 1)
struct gtaHAnim
{
  CAnimBlendAssociation *pPrevBlendAssociation;
  int field_4;
  int m_bNumBones;
  int CPed.Field_4D8_num;
  CBone *m_pBones;
};
#pragma pack(pop)

/*  519 */
#pragma pack(push, 1)
struct CAnimBlendAssociation
{
  void *vmt;
  void *pPrev;
  _DWORD m_pHAnim;
  __int16 m_wNumBlendNodes;
  __int16 m_wAnimGroup;
  CAnimBlendNode *pAnimBlendNodeArray;
  CAnimBlendHierarchy *pAnimBlendHierarchy;
  float fBlendAmount;
  float fBlendDelta;
  float fCurrentTime;
  float fSpeed;
  _DWORD fTimeStep;
  __int16 sAnimID;
  __int16 sFlags;
  _DWORD pCallback;
};
#pragma pack(pop)

/*  520 */
#pragma pack(push, 1)
struct parkedGenText
{
  int parkGen;
  char plateText[12];
};
#pragma pack(pop)

/*  521 */
#pragma pack(push, 1)
struct unkParkedGenBase
{
  parkedGenText texts[15];
  int count;
};
#pragma pack(pop)

/*  522 */
#pragma pack(push, 1)
struct CBike
{
  CVehicle vehicle;
  void *frameArray[10];
  _BYTE byte5C8;
  _BYTE f5C9[3];
  CMatrix dynamicMatrix;
  _BYTE byte614;
  _BYTE f615[27];
  _DWORD dword630;
  _DWORD dword634;
  _DWORD dword638;
  _DWORD dword63C;
  _BYTE ifpData[256];
  float dword740;
  _BYTE f744[76];
  _DWORD dword790;
  _DWORD dword794;
  _DWORD dword798;
  _DWORD dword79C;
  _DWORD dword7A0;
  float float7A4;
  _WORD word7A8;
  _BYTE f7AA[2];
  _DWORD dword7AC;
  _DWORD dword7B0;
  _BYTE byte7B4;
  _BYTE byte7B5;
  _BYTE f7B6[2];
  _DWORD dword7B8;
  _DWORD dword7BC;
  int f7C0[4];
  char field_7D0[48];
  _DWORD dword800;
  _BYTE byte804;
  _BYTE byte805;
  _BYTE byte806;
  _BYTE f807[1];
  _DWORD dword808;
};
#pragma pack(pop)

/*  523 */
#pragma pack(push, 1)
struct CVehicleColSphere
{
  CColSphere field_0;
  RwSphere field_14;
};
#pragma pack(pop)

/*  524 */
#pragma pack(push, 1)
struct CCompressedVector
{
  __int16 x;
  __int16 y;
  __int16 z;
};
#pragma pack(pop)

/*  525 */
#pragma pack(push, 1)
struct CColTrianglePlane
{
  CCompressedVector normal;
  __int16 distance;
  char field_8;
  char _pad;
};
#pragma pack(pop)

/*  526 */
enum VehicleModelFlags
{
  IS_VAN = 0x1,
  IS_BUS = 0x2,
  IS_BIG = 0x4,
  IS_LOW = 0x8,
};

/*  527 */
enum DamageComponents
{
  COMPONENT_BONNET = 0x0,
  COMPONENT_BOOT = 0x1,
  COMPONENT_DOOR_LF = 0x2,
  COMPONENT_DOOR_RF = 0x3,
  COMPONENT_DOOR_LR = 0x4,
  COMPONENT_DOOR_RR = 0x5,
};

/*  528 */
#pragma pack(push, 1)
struct CFxSystem
{
  CFxSystem *m_pNext;
  CFxSystem *m_pPrev;
  int m_dwKey;
  int m_fLength;
  float m_fLoopIntervalMin;
  float m_fLoopLength;
  __int16 m_sCullDist;
  char m_cPlayMode;
  char m_cNumPrims;
  CFxPrimEmitterData **m_pPrimsPtrList;
  CBoundingSphere *m_pBoundingSphere;
};
#pragma pack(pop)

/*  529 */
#pragma pack(push, 1)
struct CBoundingSphere
{
  RwSphere sphere;
  int field_10;
};
#pragma pack(pop)

/*  530 */
#pragma pack(push, 1)
struct CFxPrimEmitterData
{
  CFxPrimEmitterData_VMT *_vmt;
  char field_4;
  char m_cSrcBlendId;
  char m_cDstBlendId;
  char m_cAlphaOn;
  signed __int16 *m_pMatrixBuffered;
  RwTexture *m_pTexture[4];
  int field_1C;
  CParticleData__LListHead field_20;
  CFxPrimEmitterDataInternal m_sInfos;
  __int16 m_sLodStart;
  __int16 m_sLodEnd;
  char m_cHasInfoFlatData;
  char m_cHasInfoHeatHazeData;
  char field_3E;
  char field_3F;
};
#pragma pack(pop)

/*  531 */
#pragma pack(push, 1)
struct CFxPrimEmitterDataInternal
{
  int m_dwNumInfos;
  CFxInfoNoiseData **m_pInfos;
  char m_cNumInfos;
  char field_9;
  char _pad[2];
};
#pragma pack(pop)

/*  532 */
#pragma pack(push, 1)
struct CFxInfoDataBase
{
  int _vmt;
  __int16 m_sInfoFlags;
  char m_cTimeModePrt;
  char _pad;
};
#pragma pack(pop)

/*  533 */
#pragma pack(push, 1)
struct CFxInfoNoiseData
{
  CFxInfoDataBase base;
  CFxInfoNoiseDataInternal internal;
};
#pragma pack(pop)

/*  534 */
#pragma pack(push, 1)
struct CFxInfoNoiseDataInternal
{
  _DWORD _vmt;
  _BYTE m_cLooped;
  char m_cNumKeys;
  char m_cNumInterpDatas;
  char field_7;
  __int16 *m_pTimeKeys;
  __int16 **m_pValKeysPtrList;
};
#pragma pack(pop)

/*  535 */
#pragma pack(push, 1)
struct CFxInfoForceData
{
  CFxInfoDataBase base;
  CFxInfoForceDataInternal internal;
};
#pragma pack(pop)

/*  536 */
#pragma pack(push, 1)
struct CFxInfoForceDataInternal
{
  _DWORD _vmt;
  _BYTE m_cLooped;
  char m_cNumKeys;
  char m_cNumInterpDatas;
  char field_7;
  __int16 *m_pTimeKeys;
  __int16 **m_pValKeysPtrList;
};
#pragma pack(pop)

/*  537 */
#pragma pack(push, 1)
struct CFxInfoAttractPtDataInternal
{
  _DWORD _vmt;
  _BYTE m_cLooped;
  char m_cNumKeys;
  char m_cNumInterpDatas;
  char field_7;
  __int16 *m_pTimeKeys;
  __int16 **m_pValKeysPtrList;
};
#pragma pack(pop)

/*  538 */
#pragma pack(push, 1)
struct CFxInfoAttractPtData
{
  CFxInfoDataBase base;
  CFxInfoAttractPtDataInternal internal;
};
#pragma pack(pop)

/*  539 */
#pragma pack(push, 1)
struct CFxInfoSmokeDataInternal
{
  _DWORD _vmt;
  _BYTE m_cLooped;
  char m_cNumKeys;
  char m_cNumInterpDatas;
  char field_7;
  __int16 *m_pTimeKeys;
  __int16 **m_pValKeysPtrList;
};
#pragma pack(pop)

/*  540 */
#pragma pack(push, 1)
struct CFxInfoSmokeData
{
  CFxInfoDataBase base;
  CFxInfoSmokeDataInternal internal;
};
#pragma pack(pop)

/*  541 */
#pragma pack(push, 1)
struct CFxPrimEmitterData_VMT
{
  int ScalarDestructor;
  char (__thiscall *Read)(void *this, FILE *file, int, char *textureNames);
  char (__thiscall *SetTextures)(CFxPrimEmitterData *this, char *name, signed int value);
  int CreateParticlePrimData;
  int field_10;
  int field_14;
};
#pragma pack(pop)

/*  542 */
#pragma pack(push, 1)
struct CEventAttractor
{
  _DWORD _vmt;
  int field_4;
  char field_8;
  char _pad1[3];
  char field_C;
  char _pad2;
  __int16 field_E;
  __int16 field_10;
  char _pad3[2];
  CPedAttractor *m_p2dfx;
  CEntity *m_pEntity;
  _BYTE field_1C;
  char _padding[3];
};
#pragma pack(pop)

/*  543 */
enum RpAtomicFlag
{
  rpATOMICCOLLISIONTEST = 0x1,
  rpATOMICRENDER = 0x4,
};

/*  544 */
#pragma pack(push, 1)
struct CProjectileInfo
{
  int m_dwWeaponType;
  CEntity *m_pLauncher;
  CEntity *m_pTarget;
  int m_dwTimeToDestroy;
  char m_bState;
  char _pad[3];
  CVector m_vLastPos;
  CParticle *m_pParticle;
};
#pragma pack(pop)

/*  545 */
#pragma pack(push, 1)
struct AtomicRenderer
{
  CEntity *entity;
  void *renderCB;
  float distance;
};
#pragma pack(pop)

/*  546 */
#pragma pack(push, 1)
struct RendererInList
{
  AtomicRenderer renderer;
  AtomicRendererLink link;
};
#pragma pack(pop)

/*  547 */
#pragma pack(push, 1)
struct AtomicRendererLink
{
  RendererInList *prev;
  RendererInList *next;
};
#pragma pack(pop)

/*  548 */
enum RpAtomicVisibility
{
  VISIBILITY_OK = 0x1,
  VISIBILITY_DAM = 0x2,
};

/*  549 */
#pragma pack(push, 1)
struct RxPipelineNodePrivateData
{
  int D3D9AtomicDefaultInstanceCallback;
  int D3D9AtomicDefaultReinstanceCallback;
  int rwD3D9AtomicDefaultLightingCallback;
  int rxD3D9DefaultRenderCallback;
};
#pragma pack(pop)

/*  550 */
#pragma pack(push, 1)
struct AtomicVisibilityPlugin
{
  __int16 m_wModelId;
  __int16 m_wFlags;
};
#pragma pack(pop)

/*  551 */
#pragma pack(push, 1)
struct CExplosion
{
  int m_dwType;
  RwV3D m_vPosition;
  float m_fRadius;
  _DWORD m_dwPropagationRate;
  CEntity *m_pCreator;
  CEntity *m_pVictim;
  float m_dwExpireTime;
  _DWORD dword24;
  _BYTE m_bIsActive;
  _BYTE m_bActiveCounter;
  _BYTE m_bMakeSound;
  _BYTE f2B[1];
  float m_dwCreatedTime;
  _DWORD time?;
  float m_fVisibleDistance;
  _DWORD dword38;
  _DWORD dword3C;
  RwV3D m_vAdditionalExplosionOffset[3];
  int m_fAdditionalExplosionRange[6];
};
#pragma pack(pop)

/*  552 */
#pragma pack(push, 1)
struct CParticlePrimData
{
  CParticlePrimData_VMT *vmt;
  CFxPrimEmitterData *m_pFxPrimData;
  CParticle *m_pParticle;
  _BYTE field_C;
  char _padding[3];
  int field_10;
};
#pragma pack(pop)

/*  553 */
#pragma pack(push, 1)
struct CParticlePrimData_VMT
{
  int Scalar_Destructor;
  char (__stdcall *Init)(CFxPrimEmitterData *, CParticle *);
  int field_8;
  int field_C;
  int field_10;
  int field_14;
};
#pragma pack(pop)

/*  554 */
enum eExplosionType
{
  EXPLOSION_GRENADE = 0x0,
  EXPLOSION_MOLOTOV = 0x1,
  EXPLOSION_ROCKET = 0x2,
  EXPLOSION_WEAK_ROCKET = 0x3,
  EXPLOSION_CAR = 0x4,
  EXPLOSION_QUICK_CAR = 0x5,
  EXPLOSION_BOAT = 0x6,
  EXPLOSION_AIRCRAFT = 0x7,
  EXPLOSION_MINE = 0x8,
  EXPLOSION_OBJECT = 0x9,
  EXPLOSION_TANK_FIRE = 0xA,
  EXPLOSION_SMALL = 0xB,
  EXPLOSION_RC_VEHICLE = 0xC,
};

/*  555 */
#pragma pack(push, 1)
struct CQuad
{
  CAutomobile automobile;
  CHandlingBike *m_pHandling;
  CBikeRideAnimData m_sRideAnimData;
  float dword9A8;
  _DWORD dword9AC;
  _DWORD dword9B0;
  _DWORD dword9B4;
  _BYTE byte9B8;
  char _padding[3];
};
#pragma pack(pop)

/*  556 */
#pragma pack(push, 1)
struct CBikeRideAnimData
{
  _DWORD dword0;
  _DWORD dword4;
  _DWORD dword8;
  _DWORD dwordC;
  float dword10;
  float m_fHandlebarsAngle;
  _DWORD dword18;
};
#pragma pack(pop)

/*  558 */
#pragma pack(push, 1)
struct CQuadComponents
{
  RwFrame *_dummy;
  RwFrame *chassis;
  RwFrame *wheel_rf_dummy;
  RwFrame *wheel_rm_dummy;
  RwFrame *wheel_rb_dummy;
  RwFrame *wheel_lf_dummy;
  RwFrame *wheel_lm_dummy;
  RwFrame *wheel_lb_dummy;
  RwFrame *door_rf_dummy;
  RwFrame *door_rr_dummy;
  RwFrame *door_lf_dummy;
  RwFrame *door_lr_dummy;
  RwFrame *body_front_dummy;
  RwFrame *body_rear_dummy;
  RwFrame *suspension_rf;
  RwFrame *suspension_lf;
  RwFrame *rear_axle;
  RwFrame *handlebars;
  RwFrame *misc_a;
  RwFrame *misc_b;
  int field_50[5];
};
#pragma pack(pop)

/*  559 */
enum RwRasterType
{
  rwRASTERTYPENORMAL = 0x0,
  rwRASTERTYPEZBUFFER = 0x1,
  rwRASTERTYPECAMERA = 0x2,
  rwRASTERTYPETEXTURE = 0x4,
  rwRASTERTYPECAMERATEXTURE = 0x5,
  rwRASTERTYPEMASK = 0x7,
  rwRASTERPALETTEVOLATILE = 0x40,
  rwRASTERDONTALLOCATE = 0x80,
};

/*  560 */
#pragma pack(push, 1)
struct RwD3D9Raster
{
  IDirect3DTexture9 *pTexture;
  _DWORD pPalette;
  char bAlpha;
  char bCubeTextureFlags;
  char bTextureFlags;
  char bLockFlags;
  IDirect3DSurface9 *pLockedSurface;
  D3DLOCKED_RECT sLockedRect;
  D3DFORMAT dwFormat;
  IDirect3DSwapChain9 *pSwapChain;
  HWND *pHWnd;
};
#pragma pack(pop)

/*  561 */
enum eSurfaceTypes
{
  DEFAULT = 0,
  TARMAC = 1,
  TARMAC_FUCKED = 2,
  TARMAC_REALLYFUCKED = 3,
  PAVEMENT = 4,
  PAVEMENT_FUCKED = 5,
  GRAVEL = 6,
  FUCKED_CONCRETE = 7,
  PAINTED_GROUND = 8,
  GRASS_SHORT_LUSH = 9,
  GRASS_MEDIUM_LUSH = 10,
  GRASS_LONG_LUSH = 11,
  GRASS_SHORT_DRY = 12,
  GRASS_MEDIUM_DRY = 13,
  GRASS_LONG_DRY = 14,
  GOLFGRASS_ROUGH = 15,
  GOLFGRASS_SMOOTH = 16,
  STEEP_SLIDYGRASS = 17,
  STEEP_CLIFF = 18,
  FLOWERBED = 19,
  MEADOW = 20,
  WASTEGROUND = 21,
  WOODLANDGROUND = 22,
  VEGETATION = 23,
  MUD_WET = 24,
  MUD_DRY = 25,
  DIRT = 26,
  DIRTTRACK = 27,
  SAND_DEEP = 28,
  SAND_MEDIUM = 29,
  SAND_COMPACT = 30,
  SAND_ARID = 31,
  SAND_MORE = 32,
  SAND_BEACH = 33,
  CONCRETE_BEACH = 34,
  ROCK_DRY = 35,
  ROCK_WET = 36,
  ROCK_CLIFF = 37,
  WATER_RIVERBED = 38,
  WATER_SHALLOW = 39,
  CORNFIELD = 40,
  HEDGE = 41,
  WOOD_CRATES = 42,
  WOOD_SOLID = 43,
  WOOD_THIN = 44,
  GLASS = 45,
  GLASS_WINDOWS_LARGE = 46,
  GLASS_WINDOWS_SMALL = 47,
  EMPTY1 = 48,
  EMPTY2 = 49,
  GARAGE_DOOR = 50,
  THICK_METAL_PLATE = 51,
  SCAFFOLD_POLE = 52,
  LAMP_POST = 53,
  METAL_GATE = 54,
  METAL_CHAIN_FENCE = 55,
  GIRDER = 56,
  SURFACE_FIRE_HYDRANT = 57,
  CONTAINER = 58,
  NEWS_VENDOR = 59,
  WHEELBASE = 60,
  CARDBOARDBOX = 61,
  PED = 62,
  CAR = 63,
  CAR_PANEL = 64,
  CAR_MOVINGCOMPONENT = 65,
  TRANSPARENT_CLOTH = 66,
  RUBBER = 67,
  PLASTIC = 68,
  TRANSPARENT_STONE = 69,
  WOOD_BENCH = 70,
  CARPET = 71,
  FLOORBOARD = 72,
  STAIRSWOOD = 73,
  P_SAND = 74,
  P_SAND_DENSE = 75,
  P_SAND_ARID = 76,
  P_SAND_COMPACT = 77,
  P_SAND_ROCKY = 78,
  P_SANDBEACH = 79,
  P_GRASS_SHORT = 80,
  P_GRASS_MEADOW = 81,
  P_GRASS_DRY = 82,
  P_WOODLAND = 83,
  P_WOODDENSE = 84,
  P_ROADSIDE = 85,
  P_ROADSIDEDES = 86,
  P_FLOWERBED = 87,
  P_WASTEGROUND = 88,
  P_CONCRETE = 89,
  P_OFFICEDESK = 90,
  P_711SHELF1 = 91,
  P_711SHELF2 = 92,
  P_711SHELF3 = 93,
  P_RESTUARANTTABLE = 94,
  P_BARTABLE = 95,
  P_UNDERWATERLUSH = 96,
  P_UNDERWATERBARREN = 97,
  P_UNDERWATERCORAL = 98,
  P_UNDERWATERDEEP = 99,
  P_RIVERBED = 100,
  P_RUBBLE = 101,
  P_BEDROOMFLOOR = 102,
  P_KIRCHENFLOOR = 103,
  P_LIVINGRMFLOOR = 104,
  P_CORRIDORFLOOR = 105,
  P_711FLOOR = 106,
  P_FASTFOODFLOOR = 107,
  P_SKANKYFLOOR = 108,
  P_MOUNTAIN = 109,
  P_MARSH = 110,
  P_BUSHY = 111,
  P_BUSHYMIX = 112,
  P_BUSHYDRY = 113,
  P_BUSHYMID = 114,
  P_GRASSWEEFLOWERS = 115,
  P_GRASSDRYTALL = 116,
  P_GRASSLUSHTALL = 117,
  P_GRASSGRNMIX = 118,
  P_GRASSBRNMIX = 119,
  P_GRASSLOW = 120,
  P_GRASSROCKY = 121,
  P_GRASSSMALLTREES = 122,
  P_DIRTROCKY = 123,
  P_DIRTWEEDS = 124,
  P_GRASSWEEDS = 125,
  P_RIVEREDGE = 126,
  P_POOLSIDE = 127,
  P_FORESTSTUMPS = 128,
  P_FORESTSTICKS = 129,
  P_FORRESTLEAVES = 130,
  P_DESERTROCKS = 131,
  P_FORRESTDRY = 132,
  P_SPARSEFLOWERS = 133,
  P_BUILDINGSITE = 134,
  P_DOCKLANDS = 135,
  P_INDUSTRIAL = 136,
  P_INDUSTJETTY = 137,
  P_CONCRETELITTER = 138,
  P_ALLEYRUBISH = 139,
  P_JUNKYARDPILES = 140,
  P_JUNKYARDGRND = 141,
  P_DUMP = 142,
  P_CACTUSDENSE = 143,
  P_AIRPORTGRND = 144,
  P_CORNFIELD = 145,
  P_GRASSLIGHT = 146,
  P_GRASSLIGHTER = 147,
  P_GRASSLIGHTER2 = 148,
  P_GRASSMID1 = 149,
  P_GRASSMID2 = 150,
  P_GRASSDARK = 151,
  P_GRASSDARK2 = 152,
  P_GRASSDIRTMIX = 153,
  P_RIVERBEDSTONE = 154,
  P_RIVERBEDSHALLOW = 155,
  P_RIVERBEDWEEDS = 156,
  P_SEAWEED = 157,
  DOOR = 158,
  PLASTICBARRIER = 159,
  PARKGRASS = 160,
  STAIRSSTONE = 161,
  STAIRSMETAL = 162,
  STAIRSCARPET = 163,
  FLOORMETAL = 164,
  FLOORCONCRETE = 165,
  BIN_BAG = 166,
  THIN_METAL_SHEET = 167,
  METAL_BARREL = 168,
  PLASTIC_CONE = 169,
  PLASTIC_DUMPSTER = 170,
  METAL_DUMPSTER = 171,
  WOOD_PICKET_FENCE = 172,
  WOOD_SLATTED_FENCE = 173,
  WOOD_RANCH_FENCE = 174,
  UNBREAKABLE_GLASS = 175,
  HAY_BALE = 176,
  GORE = 177,
  RAILTRACK = 178,
};

/*  562 */
enum eObjectTypes
{
  OBJECT_TYPE_FLYING_COMPONENT = 0x3,
  OBJECT_TYPE_CUTSCENE = 0x4,
  OBJECT_TYPE_HAND = 0x5,
};

/*  563 */
enum EffectTypes
{
  EFFECT_LIGHT = 0x0,
  EFFECT_PARTICLE = 0x1,
  EFFECT_PEDS = 0x3,
  EFFECT_SUN_FLARE = 0x4,
  EFFECT_FURNITUR = 0x5,
  EFFECT_ENEX = 0x6,
  EFFECT_ROADSIGN = 0x7,
  EFFECT_SLOTMACHINE_WHEEL = 0x8,
  EFFECT_9 = 0x9,
  EFFECT_ESCALATOR = 0xA,
};

/*  564 */
#pragma pack(push, 1)
struct CEventDeadPed
{
  _DWORD vmt;
  _DWORD dword4;
  _BYTE byte8;
  _BYTE f9[3];
  _BYTE byteC;
  _BYTE fD[1];
  _WORD possiblyTime;
  _WORD word10;
  _BYTE f12[2];
  CPed *m_pPed;
  _BYTE byte18;
  _BYTE f19[3];
  _DWORD dword1C;
};
#pragma pack(pop)

/*  565 */
#pragma pack(push, 1)
struct CTaskComplexDie
{
  char char0;
  _BYTE f1[11];
  _DWORD dwordC;
  _DWORD animGroup;
  _DWORD anim;
  _DWORD dword18;
  _DWORD dword1C;
  _DWORD dword20;
  _DWORD dword24;
};
#pragma pack(pop)

/*  566 */
#pragma pack(push, 1)
struct ParticleObj60b
{
  _DWORD vmt;
  _BYTE f4[4];
  float float8;
  _DWORD dwordC;
  RwV3D dword10;
  RwV3D m_vDirection;
  _DWORD m_pParticle;
  _BYTE byte2C;
  _BYTE byte2D;
  _BYTE byte2E;
  _BYTE byte2F;
  _BYTE byte30;
  _BYTE byte31;
  _BYTE byte32;
  _BYTE byte33;
  _BYTE byte34;
  _BYTE byte35;
  _BYTE byte36;
  _BYTE byte37;
  float float38;
};
#pragma pack(pop)

/*  567 */
enum eHelpBoxState
{
  HELPBOX_FADING = 0x3,
};

/*  568 */
enum eFontStyle
{
  FONT_GOTHIC = 0x0,
  FONT_SUBTITLES = 0x1,
  FONT_MENU = 0x2,
  FONT_PRICEDOWN = 0x3,
};

/*  569 */
enum eNameState
{
  NAME_DONT_SHOW = 0x0,
  NAME_SHOW = 0x1,
  NAME_FADE_IN = 0x2,
  NAME_FADE_OUT = 0x3,
  NAME_SWITCH = 0x4,
};

/*  570 */
#pragma pack(push, 1)
struct CPlaceName
{
  CZone *m_pZone;
  _WORD m_wAdditionalTimer;
  char _padding[2];
};
#pragma pack(pop)

/*  571 */
#pragma pack(push, 1)
struct _ProjectionParam
{
  RwV3D at;
  RwMatrix invMatrix;
  _BYTE shadowValue;
  _BYTE _pad0[3];
  _DWORD fade;
  _BYTE __unused__[4];
  RwMatrix entityMatrix;
};
#pragma pack(pop)

/*  572 */
#pragma pack(push, 1)
struct struc_430
{
  RwV3D pos;
  RwV3D objNormal;
  int color;
  float u;
  float v;
};
#pragma pack(pop)

/*  573 */
#pragma pack(push, 1)
struct CTaskVMT
{
  int _scalarDtor;
  int Clone;
  int GetSubTask;
  int IsSimple;
  int GetId;
  int StopTimer;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
};
#pragma pack(pop)

/*  574 */
#pragma pack(push, 1)
struct RpMatFxDualPass
{
  void *m_pTexture[2];
  _DWORD m_dwDstBlend;
  int field_C;
  int field_10;
  int m_dwType;
};
#pragma pack(pop)

/*  575 */
#pragma pack(push, 1)
struct MatFXMaterialData
{
  RpMatFxDualPass m_Fx[2];
};
#pragma pack(pop)

/*  576 */
#pragma pack(push, 1)
struct RxD3D9ResEntryHeader
{
  int serialNumber;
  _DWORD numMeshes;
  void *indexBuffer;
  int primType;
  RxD3D9VertexStream vertexStream[2];
  bool useOffsets;
  void *vertexDeclaration;
  int totalNumIndex;
  int totalNumVertex;
};
#pragma pack(pop)

/*  577 */
#pragma pack(push, 1)
struct D3DMATERIAL9
{
  D3DCOLORVALUE Diffuse;
  D3DCOLORVALUE Ambient;
  D3DCOLORVALUE Specular;
  D3DCOLORVALUE Emissive;
  float Power;
};
#pragma pack(pop)

/*  578 */
#pragma pack(push, 1)
struct Specular
{
  float m_fLevel;
  int m_pTexture;
};
#pragma pack(pop)

/*  579 */
#pragma pack(push, 1)
struct CCustomEnvMapPipeMatData
{
  void *pPlgData;
  _DWORD dword4;
  _DWORD dword8;
};
#pragma pack(pop)

/*  580 */
struct CCustomEnvMapPipeAtmData
{
  _DWORD dword0;
  _DWORD dword4;
  _DWORD dword8;
};

/*  581 */
#pragma pack(push, 1)
struct D3DLIGHT9
{
  D3DLIGHTTYPE Type;
  D3DCOLORVALUE Diffuse;
  D3DCOLORVALUE Specular;
  D3DCOLORVALUE Ambient;
  D3DVECTOR Position;
  D3DVECTOR Direction;
  float Range;
  float Falloff;
  float Attenuation0;
  float Attenuation1;
  float Attenuation2;
  float Theta;
  float Phi;
};
#pragma pack(pop)

/*  582 */
#pragma pack(push, 1)
struct ReflectionMaterialPlg
{
  char m_bTransformParam[4];
  unsigned __int8 m_bIntensity;
  char _pad;
  __int16 m_wRenderFrame;
  RwTexture *m_pTexture;
};
#pragma pack(pop)

/*  583 */
#pragma pack(push, 1)
struct ReflectionMaterialStream
{
  float transform[4];
  float intensity;
  int texture;
};
#pragma pack(pop)

/*  584 */
enum eSystem
{
  NULL = 0x0,
};

/*  585 */
#pragma pack(push, 1)
struct gtaVertexColorPlugin
{
  RwRGBA *m_pNightColors;
  RwRGBA *m_pDayColors;
  float intensity;
};
#pragma pack(pop)

/*  586 */
#pragma pack(push, 1)
struct RxD3D9ResEntryHeaderWithMeshes
{
  int serialNumber;
  _DWORD numMeshes;
  void *indexBuffer;
  int primType;
  RxD3D9VertexStream vertexStream[2];
  bool useOffsets;
  void *vertexDeclaration;
  int totalNumIndex;
  int totalNumVertex;
  RxD3D9InstanceData meshes;
};
#pragma pack(pop)

/*  587 */
#pragma pack(push, 1)
struct IDirect3D9
{
  IDirect3D9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  588 */
#pragma pack(push, 1)
struct CPedAttractor
{
  CEffect2d effect;
  RwV3D direction[3];
  _BYTE m_cEventType;
  _BYTE pedExistingProbability;
  char unknown34;
  char flags;
  char m_acExternalScript[8];
};
#pragma pack(pop)

/*  589 */
#pragma pack(push, 1)
struct CEffect2d
{
  RwV3D posn;
  char type;
  char __padding[3];
};
#pragma pack(pop)

/*  590 */
#pragma pack(push, 1)
struct MaterialStructStream
{
  int field_0;
  int color;
  int field_8;
  int numTextures;
  float ambient;
  float specular;
  float diffuse;
};
#pragma pack(pop)

/*  591 */
#pragma pack(push, 1)
struct IDirect3DVertexBuffer9
{
  IDirect3DVertexBuffer9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  592 */
#pragma pack(push, 1)
struct CPickupText
{
  float x;
  float y;
  int field_8;
  float w;
  float h;
  RwRGBA color;
  char flags;
  char field_19;
  char __padding[2];
  int price;
  int textMessage;
};
#pragma pack(pop)

/*  593 */
enum eCamMode
{
  MODE_NONE = 0x0,
  MODE_TOPDOWN = 0x1,
  MODE_GTACLASSIC = 0x2,
  MODE_BEHINDCAR = 0x3,
  MODE_FOLLOWPED = 0x4,
  MODE_AIMING = 0x5,
  MODE_DEBUG = 0x6,
  MODE_SNIPER = 0x7,
  MODE_ROCKETLAUNCHER = 0x8,
  MODE_MODELVIEW = 0x9,
  MODE_BILL = 0xA,
  MODE_SYPHON = 0xB,
  MODE_CIRCLE = 0xC,
  MODE_CHEESYZOOM = 0xD,
  MODE_WHEELCAM = 0xE,
  MODE_FIXED = 0xF,
  MODE_1STPERSON = 0x10,
  MODE_FLYBY = 0x11,
  MODE_CAM_ON_A_STRING = 0x12,
  MODE_REACTION = 0x13,
  MODE_FOLLOW_PED_WITH_BIND = 0x14,
  MODE_CHRIS = 0x15,
  MODE_BEHINDBOAT = 0x16,
  MODE_PLAYER_FALLEN_WATER = 0x17,
  MODE_CAM_ON_TRAIN_ROOF = 0x18,
  MODE_CAM_RUNNING_SIDE_TRAIN = 0x19,
  MODE_BLOOD_ON_THE_TRACKS = 0x1A,
  MODE_IM_THE_PASSENGER_WOOWOO = 0x1B,
  MODE_SYPHON_CRIM_IN_FRONT = 0x1C,
  MODE_PED_DEAD_BABY = 0x1D,
  MODE_PILLOWS_PAPS = 0x1E,
  MODE_LOOK_AT_CARS = 0x1F,
  MODE_ARRESTCAM_ONE = 0x20,
  MODE_ARRESTCAM_TWO = 0x21,
  MODE_M16_1STPERSON = 0x22,
  MODE_SPECIAL_FIXED_FOR_SYPHON = 0x23,
  MODE_FIGHT_CAM = 0x24,
  MODE_TOP_DOWN_PED = 0x25,
  MODE_LIGHTHOUSE = 0x26,
  MODE_SNIPER_RUNABOUT = 0x27,
  MODE_ROCKETLAUNCHER_RUNABOUT = 0x28,
  MODE_1STPERSON_RUNABOUT = 0x29,
  MODE_M16_1STPERSON_RUNABOUT = 0x2A,
  MODE_FIGHT_CAM_RUNABOUT = 0x2B,
  MODE_EDITOR = 0x2C,
  MODE_HELICANNON_1STPERSON = 0x2D,
  MODE_CAMERA = 0x2E,
  MODE_ATTACHCAM = 0x2F,
  MODE_TWOPLAYER = 0x30,
  MODE_TWOPLAYER_IN_CAR_AND_SHOOTING = 0x31,
  MODE_TWOPLAYER_SEPARATE_CARS = 0x32,
  MODE_ROCKETLAUNCHER_HS = 0x33,
  MODE_ROCKETLAUNCHER_RUNABOUT_HS = 0x34,
  MODE_AIMWEAPON = 0x35,
  MODE_TWOPLAYER_SEPARATE_CARS_TOPDOWN = 0x36,
  MODE_AIMWEAPON_FROMCAR = 0x37,
  MODE_DW_HELI_CHASE = 0x38,
  MODE_DW_CAM_MAN = 0x39,
  MODE_DW_BIRDY = 0x3A,
  MODE_DW_PLANE_SPOTTER = 0x3B,
  MODE_DW_DOG_FIGHT = 0x3C,
  MODE_DW_FISH = 0x3D,
  MODE_DW_PLANECAM1 = 0x3E,
  MODE_DW_PLANECAM2 = 0x3F,
  MODE_DW_PLANECAM3 = 0x40,
  MODE_AIMWEAPON_ATTACHED = 0x41,
};

/*  594 */
#pragma pack(push, 1)
struct CCamPathSplines
{
  float *m_arr_PathData;
};
#pragma pack(pop)

/*  595 */
enum RwIm3DTransformFlags
{
  rwIM3D_VERTEXUV = 0x1,
  rwIM3D_ALLOPAQUE = 0x2,
  rwIM3D_NOCLIP = 0x4,
  rwIM3D_VERTEXXYZ = 0x8,
  rwIM3D_VERTEXRGBA = 0x10,
};

/*  596 */
#pragma pack(push, 1)
struct RxCamSpace3DVertex
{
  RwV3D cameraVertex;
  __int8 clipFlags;
  __int8 pad[3];
  RwRGBAReal col;
  float u;
  float v;
};
#pragma pack(pop)

/*  597 */
#pragma pack(push, 1)
struct RxMeshStateVector
{
  int Flags;
  void *SourceObject;
  RwMatrix Obj2World;
  RwMatrix Obj2Cam;
  RwSurfaceProperties SurfaceProperties;
  RwTexture *Texture;
  RwRGBA MatCol;
  RxPipeline *Pipeline;
  int PrimType;
  unsigned int NumElements;
  unsigned int NumVertices;
  int ClipFlagsOr;
  int ClipFlagsAnd;
  void *SourceMesh;
  void *DataObject;
};
#pragma pack(pop)

/*  598 */
#pragma pack(push, 1)
struct _rwIm3DPoolStash
{
  int flags;
  RwMatrix *ltm;
  int numVerts;
  RxObjSpace3dVertex *objVerts;
  RxCamSpace3DVertex *camVerts;
  RwD3D9Vertex *devVerts;
  RxMeshStateVector *meshState;
  RxRenderStateVector *renderState;
  RxPipeline *pipeline;
  int primType;
  __int16 *indices;
  int numIndices;
};
#pragma pack(pop)

/*  599 */
#pragma pack(push, 1)
struct rwIm3DPool
{
  __int16 numElements;
  __int16 pad;
  void *elements;
  int stride;
  _rwIm3DPoolStash stash;
};
#pragma pack(pop)

/*  600 */
#pragma pack(push, 1)
struct rwIm3DRenderPipelines
{
  RxPipeline *triList;
  RxPipeline *triFan;
  RxPipeline *triStrip;
  RxPipeline *lineList;
  RxPipeline *polyLine;
  RxPipeline *pointList;
};
#pragma pack(pop)

/*  601 */
#pragma pack(push, 1)
struct rwImmediGlobals
{
  RxPipeline *im3DTransformPipeline;
  rwIm3DRenderPipelines im3DRenderPipelines;
  RxPipeline *platformIm3DTransformPipeline;
  rwIm3DRenderPipelines platformIm3DRenderPipelines;
  rwIm3DPool curPool;
};
#pragma pack(pop)

/*  602 */
enum RwPrimitiveTypeConverted
{
  _rwPRIMTYPENAPRIMTYPE = 0x0,
  _rwPRIMTYPELINELIST = 0x2,
  _rwPRIMTYPEPOLYLINE = 0x3,
  _rwPRIMTYPETRILIST = 0x4,
  _rwPRIMTYPETRIFAN = 0x5,
  _rwPRIMTYPETRISTRIP = 0x6,
};

/*  603 */
#pragma pack(push, 1)
struct IDirect3DIndexBuffer9
{
  IDirect3DIndexBuffer9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  604 */
#pragma pack(push, 1)
struct IDirect3DVertexBuffer
{
  IDirect3DVertexBufferVtbl *lpVtbl;
};
#pragma pack(pop)

/*  605 */
#pragma pack(push, 1)
struct MaterialFxBumpMap
{
  _DWORD field_0;
  _DWORD texture1;
  _DWORD m_pBumpTexture;
  _BYTE fC[4];
  float float10;
  _DWORD dw14;
  _DWORD dw18;
};
#pragma pack(pop)

/*  606 */
#pragma pack(push, 1)
struct MaterialFxStream
{
  int m_Active;
  int m_Type;
};
#pragma pack(pop)

/*  608 */

/*  609 */
#pragma pack(push, 1)
struct IDirect3DSurface9
{
  IDirect3DSurface9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  610 */
#pragma pack(push, 1)
struct D3DVERTEXELEMENT9
{
  WORD Stream;
  WORD Offset;
  char Type;
  char Method;
  char Usage;
  char UsageIndex;
};
#pragma pack(pop)

/*  611 */
#pragma pack(push, 1)
struct Ped2dfxStream
{
  int type;
  RwV3D rotation[3];
  char m_acExternalScript[8];
  int pedExistingProbability;
  char flags1;
  char unknown35;
  char flags2;
  char unknown37;
};
#pragma pack(pop)

/*  612 */
#pragma pack(push, 1)
struct CPedAttractorSitOnBench
{
  _DWORD vmt;
  CPedAttractor *m_pEffect;
  _DWORD m_pEntity;
  _BYTE fC[4];
  _DWORD dword10;
  _DWORD dword14;
  _DWORD dword18;
  _BYTE f1C[4];
  _DWORD dword20;
  _DWORD dword24;
  _DWORD dword28;
  _BYTE f2C[4];
  _DWORD dword30;
  _DWORD dword34;
  _DWORD dword38;
  _DWORD m_unkType;
  _DWORD dword40;
  _DWORD dword44;
  _DWORD dword48;
  _BYTE f4C[8];
  _DWORD dword54;
  float field_58;
  RwV3D field_5C;
  RwV3D field_68;
  RwV3D field_74;
  int field_80;
  char m_acExternalScript[8];
};
#pragma pack(pop)

/*  613 */
#pragma pack(push, 1)
struct cMusicManager
{
  char f0;
  char field_1;
  char field_2;
  char field_3;
  _BYTE byte4;
  _BYTE byte5;
  _BYTE byte6;
  _BYTE byte7;
  _BYTE f8[14];
  _BYTE byte16;
  _BYTE byte17;
  int m_PlayerStats[14];
  _DWORD dword50;
  _DWORD m_dwTimeToDisplayRadioName;
  _DWORD dword58;
  _DWORD dword5C;
  _DWORD dword60;
  int f64;
  int field_68;
  _DWORD m_nStationsListed;
  _DWORD m_nStationsListDown;
  _DWORD dword74;
  _DWORD dword78;
  _DWORD dword7C;
  _DWORD dword80;
  _DWORD dword84;
  char char88;
  _BYTE f89[19];
  _DWORD dword9C;
  _DWORD dwordA0;
  _DWORD dwordA4;
  _DWORD dwordA8;
  _BYTE byteAC;
  _BYTE m_nCurrentRadioStation;
  _BYTE byteAE;
  _BYTE fAF[10];
  _BYTE byteB9;
  _BYTE byteBA;
  _BYTE fBB[5];
  _BYTE byteC0;
  _BYTE byteC1;
  _BYTE fC2[2];
  char charC4;
  char fC5;
  char gap_C6[24];
  char field_DE;
  char gap_DF[9];
  char field_E8;
  char m_nRadioStationState;
  char gap_EA[2];
  int field_EC;
  char field_F0;
  char gap_F1[1];
  char field_F2;
  char gap_F3[5];
  char field_F8;
  char gap_F9[15];
  char field_108;
  char gap_109[3];
  unkRadio2C field_10C[13];
  char field_348[32];
  _DWORD dword368;
  _BYTE byte36C;
};
#pragma pack(pop)

/*  614 */
#pragma pack(push, 1)
struct unkRadio20
{
  _DWORD dword0;
  _DWORD dword4;
  _DWORD dword8;
  _DWORD dwordC;
  _DWORD field_10;
};
#pragma pack(pop)

/*  615 */
#pragma pack(push, 1)
struct unkRadio2C
{
  int m_dwState;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
};
#pragma pack(pop)

/*  617 */
#pragma pack(push, 1)
struct CGunAimingOffset
{
  float AimX;
  float AimZ;
  float DuckX;
  float DuckZ;
  __int16 RLoadA;
  __int16 RLoadB;
  __int16 CrouchRLoadA;
  __int16 CrouchRLoadB;
};
#pragma pack(pop)

/*  618 */
enum eFireType
{
  FIRETYPE_MELEE = 0x0,
  FIRETYPE_INSTANT_HIT = 0x1,
  FIRETYPE_PROJECTILE = 0x2,
  FIRETYPE_AREA_EFFECT = 0x3,
  FIRETYPE_CAMERA = 0x4,
  FIRETYPE_USE = 0x5,
};

/*  619 */
enum eWeaponType
{
  WEAPON_UNARMED = 0x0,
  WEAPON_BRASSKNUCKLE = 0x1,
  WEAPON_GOLFCLUB = 0x2,
  WEAPON_NIGHTSTICK = 0x3,
  WEAPON_KNIFE = 0x4,
  WEAPON_BASEBALLBAT = 0x5,
  WEAPON_SHOVEL = 0x6,
  WEAPON_POOLCUE = 0x7,
  WEAPON_KATANA = 0x8,
  WEAPON_CHAINSAW = 0x9,
  WEAPON_DILDO1 = 0xA,
  WEAPON_DILDO2 = 0xB,
  WEAPON_VIBE1 = 0xC,
  WEAPON_VIBE2 = 0xD,
  WEAPON_FLOWERS = 0xE,
  WEAPON_CANE = 0xF,
  WEAPON_GRENADE = 0x10,
  WEAPON_TEARGAS = 0x11,
  WEAPON_MOLOTOV = 0x12,
  WEAPON_ROCKET = 0x13,
  WEAPON_ROCKET_HS = 0x14,
  WEAPON_FREEFALL_BOMB = 0x15,
  WEAPON_PISTOL = 0x16,
  WEAPON_PISTOL_SILENCED = 0x17,
  WEAPON_DESERT_EAGLE = 0x18,
  WEAPON_SHOTGUN = 0x19,
  WEAPON_SAWNOFF = 0x1A,
  WEAPON_SPAS12 = 0x1B,
  WEAPON_MICRO_UZI = 0x1C,
  WEAPON_MP5 = 0x1D,
  WEAPON_AK47 = 0x1E,
  WEAPON_M4 = 0x1F,
  WEAPON_TEC9 = 0x20,
  WEAPON_COUNTRYRIFLE = 0x21,
  WEAPON_SNIPERRIFLE = 0x22,
  WEAPON_RLAUNCHER = 0x23,
  WEAPON_RLAUNCHER_HS = 0x24,
  WEAPON_FTHROWER = 0x25,
  WEAPON_MINIGUN = 0x26,
  WEAPON_SATCHEL_CHARGE = 0x27,
  WEAPON_DETONATOR = 0x28,
  WEAPON_SPRAYCAN = 0x29,
  WEAPON_EXTINGUISHER = 0x2A,
  WEAPON_CAMERA = 0x2B,
  WEAPON_NIGHTVISION = 0x2C,
  WEAPON_INFRARED = 0x2D,
  WEAPON_PARACHUTE = 0x2E,
  WEAPON_UNUSED = 0x2F,
  WEAPON_ARMOUR = 0x30,
};

/*  620 */
enum ePickupTypes
{
  PICKUP_NONE = 0x0,
  PICKUP_IN_SHOP = 0x1,
  PICKUP_ON_STREET = 0x2,
  PICKUP_ONCE = 0x3,
  PICKUP_ONCE_TIMEOUT = 0x4,
  PICKUP_ONCE_TIMEOUT_SLOW = 0x5,
  PICKUP_COLLECTABLE1 = 0x6,
  PICKUP_IN_SHOP_OUT_OF_STOCK = 0x7,
  PICKUP_MONEY = 0x8,
  PICKUP_MINE_INACTIVE = 0x9,
  PICKUP_MINE_ARMED = 0xA,
  PICKUP_NAUTICAL_MINE_INACTIVE = 0xB,
  PICKUP_NAUTICAL_MINE_ARMED = 0xC,
  PICKUP_FLOATINGPACKAGE = 0xD,
  PICKUP_FLOATINGPACKAGE_FLOATING = 0xE,
  PICKUP_ON_STREET_SLOW = 0xF,
  PICKUP_ASSET_REVENUE = 0x10,
  PICKUP_PROPERTY_LOCKED = 0x11,
  PICKUP_PROPERTY_FORSALE = 0x12,
};

/*  622 */
enum ECommandIds
{
  NOP = 0x0,
  WAIT = 0x1,
  GOTO = 0x2,
  SHAKE_CAM = 0x3,
  SET_VAR_INT = 0x4,
  SET_VAR_FLOAT = 0x5,
  SET_LVAR_INT = 0x6,
  SET_LVAR_FLOAT = 0x7,
  ADD_VAL_TO_INT_VAR = 0x8,
  ADD_VAL_TO_FLOAT_VAR = 0x9,
  ADD_VAL_TO_INT_LVAR = 0xA,
  ADD_VAL_TO_FLOAT_LVAR = 0xB,
  SUB_VAL_FROM_INT_VAR = 0xC,
  SUB_VAL_FROM_FLOAT_VAR = 0xD,
  SUB_VAL_FROM_INT_LVAR = 0xE,
  SUB_VAL_FROM_FLOAT_LVAR = 0xF,
  MULT_INT_VAR_BY_VAL = 0x10,
  MULT_FLOAT_VAR_BY_VAL = 0x11,
  MULT_INT_LVAR_BY_VAL = 0x12,
  MULT_FLOAT_LVAR_BY_VAL = 0x13,
  DIV_INT_VAR_BY_VAL = 0x14,
  DIV_FLOAT_VAR_BY_VAL = 0x15,
  DIV_INT_LVAR_BY_VAL = 0x16,
  DIV_FLOAT_LVAR_BY_VAL = 0x17,
  IS_INT_VAR_GREATER_THAN_NUMBER = 0x18,
  IS_INT_LVAR_GREATER_THAN_NUMBER = 0x19,
  IS_NUMBER_GREATER_THAN_INT_VAR = 0x1A,
  IS_NUMBER_GREATER_THAN_INT_LVAR = 0x1B,
  IS_INT_VAR_GREATER_THAN_INT_VAR = 0x1C,
  IS_INT_LVAR_GREATER_THAN_INT_LVAR = 0x1D,
  IS_INT_VAR_GREATER_THAN_INT_LVAR = 0x1E,
  IS_INT_LVAR_GREATER_THAN_INT_VAR = 0x1F,
  IS_FLOAT_VAR_GREATER_THAN_NUMBER = 0x20,
  IS_FLOAT_LVAR_GREATER_THAN_NUMBER = 0x21,
  IS_NUMBER_GREATER_THAN_FLOAT_VAR = 0x22,
  IS_NUMBER_GREATER_THAN_FLOAT_LVAR = 0x23,
  IS_FLOAT_VAR_GREATER_THAN_FLOAT_VAR = 0x24,
  IS_FLOAT_LVAR_GREATER_THAN_FLOAT_LVAR = 0x25,
  IS_FLOAT_VAR_GREATER_THAN_FLOAT_LVAR = 0x26,
  IS_FLOAT_LVAR_GREATER_THAN_FLOAT_VAR = 0x27,
  IS_INT_VAR_GREATER_OR_EQUAL_TO_NUMBER = 0x28,
  IS_INT_LVAR_GREATER_OR_EQUAL_TO_NUMBER = 0x29,
  IS_NUMBER_GREATER_OR_EQUAL_TO_INT_VAR = 0x2A,
  IS_NUMBER_GREATER_OR_EQUAL_TO_INT_LVAR = 0x2B,
  IS_INT_VAR_GREATER_OR_EQUAL_TO_INT_VAR = 0x2C,
  IS_INT_LVAR_GREATER_OR_EQUAL_TO_INT_LVAR = 0x2D,
  IS_INT_VAR_GREATER_OR_EQUAL_TO_INT_LVAR = 0x2E,
  IS_INT_LVAR_GREATER_OR_EQUAL_TO_INT_VAR = 0x2F,
  IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_NUMBER = 0x30,
  IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_NUMBER = 0x31,
  IS_NUMBER_GREATER_OR_EQUAL_TO_FLOAT_VAR = 0x32,
  IS_NUMBER_GREATER_OR_EQUAL_TO_FLOAT_LVAR = 0x33,
  IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_FLOAT_VAR = 0x34,
  IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_FLOAT_LVAR = 0x35,
  IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_FLOAT_LVAR = 0x36,
  IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_FLOAT_VAR = 0x37,
  IS_INT_VAR_EQUAL_TO_NUMBER = 0x38,
  IS_INT_LVAR_EQUAL_TO_NUMBER = 0x39,
  IS_INT_VAR_EQUAL_TO_INT_VAR = 0x3A,
  IS_INT_LVAR_EQUAL_TO_INT_LVAR = 0x3B,
  IS_INT_VAR_EQUAL_TO_INT_LVAR = 0x3C,
  IS_INT_VAR_NOT_EQUAL_TO_NUMBER = 0x3D,
  IS_INT_LVAR_NOT_EQUAL_TO_NUMBER = 0x3E,
  IS_INT_VAR_NOT_EQUAL_TO_INT_VAR = 0x3F,
  IS_INT_LVAR_NOT_EQUAL_TO_INT_LVAR = 0x40,
  IS_INT_VAR_NOT_EQUAL_TO_INT_LVAR = 0x41,
  IS_FLOAT_VAR_EQUAL_TO_NUMBER = 0x42,
  IS_FLOAT_LVAR_EQUAL_TO_NUMBER = 0x43,
  IS_FLOAT_VAR_EQUAL_TO_FLOAT_VAR = 0x44,
  IS_FLOAT_LVAR_EQUAL_TO_FLOAT_LVAR = 0x45,
  IS_FLOAT_VAR_EQUAL_TO_FLOAT_LVAR = 0x46,
  IS_FLOAT_VAR_NOT_EQUAL_TO_NUMBER = 0x47,
  IS_FLOAT_LVAR_NOT_EQUAL_TO_NUMBER = 0x48,
  IS_FLOAT_VAR_NOT_EQUAL_TO_FLOAT_VAR = 0x49,
  IS_FLOAT_LVAR_NOT_EQUAL_TO_FLOAT_LVAR = 0x4A,
  IS_FLOAT_VAR_NOT_EQUAL_TO_FLOAT_LVAR = 0x4B,
  GOTO_IF_TRUE = 0x4C,
  GOTO_IF_FALSE = 0x4D,
  TERMINATE_THIS_SCRIPT = 0x4E,
  START_NEW_SCRIPT = 0x4F,
  GOSUB = 0x50,
  RETURN = 0x51,
  LINE = 0x52,
  CREATE_PLAYER = 0x53,
  GET_PLAYER_COORDINATES = 0x54,
  SET_PLAYER_COORDINATES = 0x55,
  IS_PLAYER_IN_AREA_2D = 0x56,
  IS_PLAYER_IN_AREA_3D = 0x57,
  ADD_INT_VAR_TO_INT_VAR = 0x58,
  ADD_FLOAT_VAR_TO_FLOAT_VAR = 0x59,
  ADD_INT_LVAR_TO_INT_LVAR = 0x5A,
  ADD_FLOAT_LVAR_TO_FLOAT_LVAR = 0x5B,
  ADD_INT_VAR_TO_INT_LVAR = 0x5C,
  ADD_FLOAT_VAR_TO_FLOAT_LVAR = 0x5D,
  ADD_INT_LVAR_TO_INT_VAR = 0x5E,
  ADD_FLOAT_LVAR_TO_FLOAT_VAR = 0x5F,
  SUB_INT_VAR_FROM_INT_VAR = 0x60,
  SUB_FLOAT_VAR_FROM_FLOAT_VAR = 0x61,
  SUB_INT_LVAR_FROM_INT_LVAR = 0x62,
  SUB_FLOAT_LVAR_FROM_FLOAT_LVAR = 0x63,
  SUB_INT_VAR_FROM_INT_LVAR = 0x64,
  SUB_FLOAT_VAR_FROM_FLOAT_LVAR = 0x65,
  SUB_INT_LVAR_FROM_INT_VAR = 0x66,
  SUB_FLOAT_LVAR_FROM_FLOAT_VAR = 0x67,
  MULT_INT_VAR_BY_INT_VAR = 0x68,
  MULT_FLOAT_VAR_BY_FLOAT_VAR = 0x69,
  MULT_INT_LVAR_BY_INT_LVAR = 0x6A,
  MULT_FLOAT_LVAR_BY_FLOAT_LVAR = 0x6B,
  MULT_INT_VAR_BY_INT_LVAR = 0x6C,
  MULT_FLOAT_VAR_BY_FLOAT_LVAR = 0x6D,
  MULT_INT_LVAR_BY_INT_VAR = 0x6E,
  MULT_FLOAT_LVAR_BY_FLOAT_VAR = 0x6F,
  DIV_INT_VAR_BY_INT_VAR = 0x70,
  DIV_FLOAT_VAR_BY_FLOAT_VAR = 0x71,
  DIV_INT_LVAR_BY_INT_LVAR = 0x72,
  DIV_FLOAT_LVAR_BY_FLOAT_LVAR = 0x73,
  DIV_INT_VAR_BY_INT_LVAR = 0x74,
  DIV_FLOAT_VAR_BY_FLOAT_LVAR = 0x75,
  DIV_INT_LVAR_BY_INT_VAR = 0x76,
  DIV_FLOAT_LVAR_BY_FLOAT_VAR = 0x77,
  ADD_TIMED_VAL_TO_FLOAT_VAR = 0x78,
  ADD_TIMED_VAL_TO_FLOAT_LVAR = 0x79,
  ADD_TIMED_FLOAT_VAR_TO_FLOAT_VAR = 0x7A,
  ADD_TIMED_FLOAT_LVAR_TO_FLOAT_LVAR = 0x7B,
  ADD_TIMED_FLOAT_LVAR_TO_FLOAT_VAR = 0x7C,
  ADD_TIMED_FLOAT_VAR_TO_FLOAT_LVAR = 0x7D,
  SUB_TIMED_VAL_FROM_FLOAT_VAR = 0x7E,
  SUB_TIMED_VAL_FROM_FLOAT_LVAR = 0x7F,
  SUB_TIMED_FLOAT_VAR_FROM_FLOAT_VAR = 0x80,
  SUB_TIMED_FLOAT_LVAR_FROM_FLOAT_LVAR = 0x81,
  SUB_TIMED_FLOAT_LVAR_FROM_FLOAT_VAR = 0x82,
  SUB_TIMED_FLOAT_VAR_FROM_FLOAT_LVAR = 0x83,
  SET_VAR_INT_TO_VAR_INT = 0x84,
  SET_LVAR_INT_TO_LVAR_INT = 0x85,
  SET_VAR_FLOAT_TO_VAR_FLOAT = 0x86,
  SET_LVAR_FLOAT_TO_LVAR_FLOAT = 0x87,
  SET_VAR_FLOAT_TO_LVAR_FLOAT = 0x88,
  SET_LVAR_FLOAT_TO_VAR_FLOAT = 0x89,
  SET_VAR_INT_TO_LVAR_INT = 0x8A,
  SET_LVAR_INT_TO_VAR_INT = 0x8B,
  CSET_VAR_INT_TO_VAR_FLOAT = 0x8C,
  CSET_VAR_FLOAT_TO_VAR_INT = 0x8D,
  CSET_LVAR_INT_TO_VAR_FLOAT = 0x8E,
  CSET_LVAR_FLOAT_TO_VAR_INT = 0x8F,
  CSET_VAR_INT_TO_LVAR_FLOAT = 0x90,
  CSET_VAR_FLOAT_TO_LVAR_INT = 0x91,
  CSET_LVAR_INT_TO_LVAR_FLOAT = 0x92,
  CSET_LVAR_FLOAT_TO_LVAR_INT = 0x93,
  ABS_VAR_INT = 0x94,
  ABS_LVAR_INT = 0x95,
  ABS_VAR_FLOAT = 0x96,
  ABS_LVAR_FLOAT = 0x97,
  GENERATE_RANDOM_FLOAT = 0x98,
  GENERATE_RANDOM_INT = 0x99,
  CREATE_CHAR = 0x9A,
  DELETE_CHAR = 0x9B,
  CHAR_WANDER_DIR = 0x9C,
  CHAR_WANDER_RANGE = 0x9D,
  CHAR_FOLLOW_PATH = 0x9E,
  CHAR_SET_IDLE = 0x9F,
  GET_CHAR_COORDINATES = 0xA0,
  SET_CHAR_COORDINATES = 0xA1,
  IS_CHAR_STILL_ALIVE = 0xA2,
  IS_CHAR_IN_AREA_2D = 0xA3,
  IS_CHAR_IN_AREA_3D = 0xA4,
  CREATE_CAR = 0xA5,
  DELETE_CAR = 0xA6,
  CAR_GOTO_COORDINATES = 0xA7,
  CAR_WANDER_RANDOMLY = 0xA8,
  CAR_SET_IDLE = 0xA9,
  GET_CAR_COORDINATES = 0xAA,
  SET_CAR_COORDINATES = 0xAB,
  IS_CAR_STILL_ALIVE = 0xAC,
  SET_CAR_CRUISE_SPEED = 0xAD,
  SET_CAR_DRIVING_STYLE = 0xAE,
  SET_CAR_MISSION = 0xAF,
  IS_CAR_IN_AREA_2D = 0xB0,
  IS_CAR_IN_AREA_3D = 0xB1,
  SPECIAL_0 = 0xB2,
  SPECIAL_1 = 0xB3,
  SPECIAL_2 = 0xB4,
  SPECIAL_3 = 0xB5,
  SPECIAL_4 = 0xB6,
  SPECIAL_5 = 0xB7,
  SPECIAL_6 = 0xB8,
  SPECIAL_7 = 0xB9,
  PRINT_BIG = 0xBA,
  PRINT = 0xBB,
  PRINT_NOW = 0xBC,
  PRINT_SOON = 0xBD,
  CLEAR_PRINTS = 0xBE,
  GET_TIME_OF_DAY = 0xBF,
  SET_TIME_OF_DAY = 0xC0,
  GET_MINUTES_TO_TIME_OF_DAY = 0xC1,
  IS_POINT_ON_SCREEN = 0xC2,
  DEBUG_ON = 0xC3,
  DEBUG_OFF = 0xC4,
  RETURN_TRUE = 0xC5,
  RETURN_FALSE = 0xC6,
  VAR_INT = 0xC7,
  VAR_FLOAT = 0xC8,
  LVAR_INT = 0xC9,
  LVAR_FLOAT = 0xCA,
  _OPCODE_00CB = 0xCB,
  _OPCODE_00CC = 0xCC,
  REPEAT = 0xCD,
  ENDREPEAT = 0xCE,
  IF = 0xCF,
  IFNOT = 0xD0,
  ELSE = 0xD1,
  ENDIF = 0xD2,
  WHILE = 0xD3,
  WHILENOT = 0xD4,
  ENDWHILE = 0xD5,
  ANDOR = 0xD6,
  LAUNCH_MISSION = 0xD7,
  MISSION_HAS_FINISHED = 0xD8,
  STORE_CAR_CHAR_IS_IN = 0xD9,
  STORE_CAR_PLAYER_IS_IN = 0xDA,
  IS_CHAR_IN_CAR = 0xDB,
  IS_PLAYER_IN_CAR = 0xDC,
  IS_CHAR_IN_MODEL = 0xDD,
  IS_PLAYER_IN_MODEL = 0xDE,
  IS_CHAR_IN_ANY_CAR = 0xDF,
  IS_PLAYER_IN_ANY_CAR = 0xE0,
  IS_BUTTON_PRESSED = 0xE1,
  GET_PAD_STATE = 0xE2,
  LOCATE_PLAYER_ANY_MEANS_2D = 0xE3,
  LOCATE_PLAYER_ON_FOOT_2D = 0xE4,
  LOCATE_PLAYER_IN_CAR_2D = 0xE5,
  LOCATE_STOPPED_PLAYER_ANY_MEANS_2D = 0xE6,
  LOCATE_STOPPED_PLAYER_ON_FOOT_2D = 0xE7,
  LOCATE_STOPPED_PLAYER_IN_CAR_2D = 0xE8,
  LOCATE_PLAYER_ANY_MEANS_CHAR_2D = 0xE9,
  LOCATE_PLAYER_ON_FOOT_CHAR_2D = 0xEA,
  LOCATE_PLAYER_IN_CAR_CHAR_2D = 0xEB,
  LOCATE_CHAR_ANY_MEANS_2D = 0xEC,
  LOCATE_CHAR_ON_FOOT_2D = 0xED,
  LOCATE_CHAR_IN_CAR_2D = 0xEE,
  LOCATE_STOPPED_CHAR_ANY_MEANS_2D = 0xEF,
  LOCATE_STOPPED_CHAR_ON_FOOT_2D = 0xF0,
  LOCATE_STOPPED_CHAR_IN_CAR_2D = 0xF1,
  LOCATE_CHAR_ANY_MEANS_CHAR_2D = 0xF2,
  LOCATE_CHAR_ON_FOOT_CHAR_2D = 0xF3,
  LOCATE_CHAR_IN_CAR_CHAR_2D = 0xF4,
  LOCATE_PLAYER_ANY_MEANS_3D = 0xF5,
  LOCATE_PLAYER_ON_FOOT_3D = 0xF6,
  LOCATE_PLAYER_IN_CAR_3D = 0xF7,
  LOCATE_STOPPED_PLAYER_ANY_MEANS_3D = 0xF8,
  LOCATE_STOPPED_PLAYER_ON_FOOT_3D = 0xF9,
  LOCATE_STOPPED_PLAYER_IN_CAR_3D = 0xFA,
  LOCATE_PLAYER_ANY_MEANS_CHAR_3D = 0xFB,
  LOCATE_PLAYER_ON_FOOT_CHAR_3D = 0xFC,
  LOCATE_PLAYER_IN_CAR_CHAR_3D = 0xFD,
  LOCATE_CHAR_ANY_MEANS_3D = 0xFE,
  LOCATE_CHAR_ON_FOOT_3D = 0xFF,
  LOCATE_CHAR_IN_CAR_3D = 0x100,
  LOCATE_STOPPED_CHAR_ANY_MEANS_3D = 0x101,
  LOCATE_STOPPED_CHAR_ON_FOOT_3D = 0x102,
  LOCATE_STOPPED_CHAR_IN_CAR_3D = 0x103,
  LOCATE_CHAR_ANY_MEANS_CHAR_3D = 0x104,
  LOCATE_CHAR_ON_FOOT_CHAR_3D = 0x105,
  LOCATE_CHAR_IN_CAR_CHAR_3D = 0x106,
  CREATE_OBJECT = 0x107,
  DELETE_OBJECT = 0x108,
  ADD_SCORE = 0x109,
  IS_SCORE_GREATER = 0x10A,
  STORE_SCORE = 0x10B,
  GIVE_REMOTE_CONTROLLED_CAR_TO_PLAYER = 0x10C,
  ALTER_WANTED_LEVEL = 0x10D,
  ALTER_WANTED_LEVEL_NO_DROP = 0x10E,
  IS_WANTED_LEVEL_GREATER = 0x10F,
  CLEAR_WANTED_LEVEL = 0x110,
  SET_DEATHARREST_STATE = 0x111,
  HAS_DEATHARREST_BEEN_EXECUTED = 0x112,
  ADD_AMMO_TO_PLAYER = 0x113,
  ADD_AMMO_TO_CHAR = 0x114,
  ADD_AMMO_TO_CAR = 0x115,
  IS_PLAYER_STILL_ALIVE = 0x116,
  IS_PLAYER_DEAD = 0x117,
  IS_CHAR_DEAD = 0x118,
  IS_CAR_DEAD = 0x119,
  SET_CHAR_THREAT_SEARCH = 0x11A,
  SET_CHAR_THREAT_REACTION = 0x11B,
  SET_CHAR_OBJ_NO_OBJ = 0x11C,
  ORDER_DRIVER_OUT_OF_CAR = 0x11D,
  ORDER_CHAR_TO_DRIVE_CAR = 0x11E,
  ADD_PATROL_POINT = 0x11F,
  IS_PLAYER_IN_GANGZONE = 0x120,
  IS_PLAYER_IN_ZONE = 0x121,
  IS_PLAYER_PRESSING_HORN = 0x122,
  HAS_CHAR_SPOTTED_PLAYER = 0x123,
  ORDER_CHAR_TO_BACKDOOR = 0x124,
  ADD_CHAR_TO_GANG = 0x125,
  IS_CHAR_OBJECTIVE_PASSED = 0x126,
  SET_CHAR_DRIVE_AGGRESSION = 0x127,
  SET_CHAR_MAX_DRIVESPEED = 0x128,
  CREATE_CHAR_INSIDE_CAR = 0x129,
  WARP_PLAYER_FROM_CAR_TO_COORD = 0x12A,
  MAKE_CHAR_DO_NOTHING = 0x12B,
  SET_CHAR_INVINCIBLE = 0x12C,
  SET_PLAYER_INVINCIBLE = 0x12D,
  SET_CHAR_GRAPHIC_TYPE = 0x12E,
  SET_PLAYER_GRAPHIC_TYPE = 0x12F,
  HAS_PLAYER_BEEN_ARRESTED = 0x130,
  STOP_CHAR_DRIVING = 0x131,
  KILL_CHAR = 0x132,
  SET_FAVOURITE_CAR_MODEL_FOR_CHAR = 0x133,
  SET_CHAR_OCCUPATION = 0x134,
  CHANGE_CAR_LOCK = 0x135,
  SHAKE_CAM_WITH_POINT = 0x136,
  IS_CAR_MODEL = 0x137,
  IS_CAR_REMAP = 0x138,
  HAS_CAR_JUST_SUNK = 0x139,
  SET_CAR_NO_COLLIDE = 0x13A,
  IS_CAR_DEAD_IN_AREA_2D = 0x13B,
  IS_CAR_DEAD_IN_AREA_3D = 0x13C,
  IS_TRAILER_ATTACHED = 0x13D,
  IS_CAR_ON_TRAILER = 0x13E,
  HAS_CAR_GOT_WEAPON = 0x13F,
  PARK = 0x140,
  HAS_PARK_FINISHED = 0x141,
  KILL_ALL_PASSENGERS = 0x142,
  SET_CAR_BULLETPROOF = 0x143,
  SET_CAR_FLAMEPROOF = 0x144,
  SET_CAR_ROCKETPROOF = 0x145,
  IS_CARBOMB_ACTIVE = 0x146,
  GIVE_CAR_ALARM = 0x147,
  PUT_CAR_ON_TRAILER = 0x148,
  IS_CAR_CRUSHED = 0x149,
  CREATE_GANG_CAR = 0x14A,
  CREATE_CAR_GENERATOR = 0x14B,
  SWITCH_CAR_GENERATOR = 0x14C,
  ADD_PAGER_MESSAGE = 0x14D,
  DISPLAY_ONSCREEN_TIMER = 0x14E,
  CLEAR_ONSCREEN_TIMER = 0x14F,
  DISPLAY_ONSCREEN_COUNTER = 0x150,
  CLEAR_ONSCREEN_COUNTER = 0x151,
  SET_ZONE_CAR_INFO = 0x152,
  IS_CHAR_IN_GANG_ZONE = 0x153,
  IS_CHAR_IN_ZONE = 0x154,
  SET_CAR_DENSITY = 0x155,
  SET_PED_DENSITY = 0x156,
  POINT_CAMERA_AT_PLAYER = 0x157,
  POINT_CAMERA_AT_CAR = 0x158,
  POINT_CAMERA_AT_CHAR = 0x159,
  RESTORE_CAMERA = 0x15A,
  SHAKE_PAD = 0x15B,
  SET_ZONE_PED_INFO = 0x15C,
  SET_TIME_SCALE = 0x15D,
  IS_CAR_IN_AIR = 0x15E,
  SET_FIXED_CAMERA_POSITION = 0x15F,
  POINT_CAMERA_AT_POINT = 0x160,
  ADD_BLIP_FOR_CAR_OLD = 0x161,
  ADD_BLIP_FOR_CHAR_OLD = 0x162,
  ADD_BLIP_FOR_OBJECT_OLD = 0x163,
  REMOVE_BLIP = 0x164,
  CHANGE_BLIP_COLOUR = 0x165,
  DIM_BLIP = 0x166,
  ADD_BLIP_FOR_COORD_OLD = 0x167,
  CHANGE_BLIP_SCALE = 0x168,
  SET_FADING_COLOUR = 0x169,
  DO_FADE = 0x16A,
  GET_FADING_STATUS = 0x16B,
  ADD_HOSPITAL_RESTART = 0x16C,
  ADD_POLICE_RESTART = 0x16D,
  OVERRIDE_NEXT_RESTART = 0x16E,
  DRAW_SHADOW = 0x16F,
  GET_PLAYER_HEADING = 0x170,
  SET_PLAYER_HEADING = 0x171,
  GET_CHAR_HEADING = 0x172,
  SET_CHAR_HEADING = 0x173,
  GET_CAR_HEADING = 0x174,
  SET_CAR_HEADING = 0x175,
  GET_OBJECT_HEADING = 0x176,
  SET_OBJECT_HEADING = 0x177,
  IS_PLAYER_TOUCHING_OBJECT = 0x178,
  IS_CHAR_TOUCHING_OBJECT = 0x179,
  SET_PLAYER_AMMO = 0x17A,
  SET_CHAR_AMMO = 0x17B,
  SET_CAR_AMMO = 0x17C,
  LOAD_CAMERA_SPLINE = 0x17D,
  MOVE_CAMERA_ALONG_SPLINE = 0x17E,
  GET_CAMERA_POSITION_ALONG_SPLINE = 0x17F,
  DECLARE_MISSION_FLAG = 0x180,
  DECLARE_MISSION_FLAG_FOR_CONTACT = 0x181,
  DECLARE_BASE_BRIEF_ID_FOR_CONTACT = 0x182,
  IS_PLAYER_HEALTH_GREATER = 0x183,
  IS_CHAR_HEALTH_GREATER = 0x184,
  IS_CAR_HEALTH_GREATER = 0x185,
  ADD_BLIP_FOR_CAR = 0x186,
  ADD_BLIP_FOR_CHAR = 0x187,
  ADD_BLIP_FOR_OBJECT = 0x188,
  ADD_BLIP_FOR_CONTACT_POINT = 0x189,
  ADD_BLIP_FOR_COORD = 0x18A,
  CHANGE_BLIP_DISPLAY = 0x18B,
  ADD_ONE_OFF_SOUND = 0x18C,
  ADD_CONTINUOUS_SOUND = 0x18D,
  REMOVE_SOUND = 0x18E,
  IS_CAR_STUCK_ON_ROOF = 0x18F,
  ADD_UPSIDEDOWN_CAR_CHECK = 0x190,
  REMOVE_UPSIDEDOWN_CAR_CHECK = 0x191,
  SET_CHAR_OBJ_WAIT_ON_FOOT = 0x192,
  SET_CHAR_OBJ_FLEE_ON_FOOT_TILL_SAFE = 0x193,
  SET_CHAR_OBJ_GUARD_SPOT = 0x194,
  SET_CHAR_OBJ_GUARD_AREA = 0x195,
  SET_CHAR_OBJ_WAIT_IN_CAR = 0x196,
  IS_PLAYER_IN_AREA_ON_FOOT_2D = 0x197,
  IS_PLAYER_IN_AREA_IN_CAR_2D = 0x198,
  IS_PLAYER_STOPPED_IN_AREA_2D = 0x199,
  IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_2D = 0x19A,
  IS_PLAYER_STOPPED_IN_AREA_IN_CAR_2D = 0x19B,
  IS_PLAYER_IN_AREA_ON_FOOT_3D = 0x19C,
  IS_PLAYER_IN_AREA_IN_CAR_3D = 0x19D,
  IS_PLAYER_STOPPED_IN_AREA_3D = 0x19E,
  IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_3D = 0x19F,
  IS_PLAYER_STOPPED_IN_AREA_IN_CAR_3D = 0x1A0,
  IS_CHAR_IN_AREA_ON_FOOT_2D = 0x1A1,
  IS_CHAR_IN_AREA_IN_CAR_2D = 0x1A2,
  IS_CHAR_STOPPED_IN_AREA_2D = 0x1A3,
  IS_CHAR_STOPPED_IN_AREA_ON_FOOT_2D = 0x1A4,
  IS_CHAR_STOPPED_IN_AREA_IN_CAR_2D = 0x1A5,
  IS_CHAR_IN_AREA_ON_FOOT_3D = 0x1A6,
  IS_CHAR_IN_AREA_IN_CAR_3D = 0x1A7,
  IS_CHAR_STOPPED_IN_AREA_3D = 0x1A8,
  IS_CHAR_STOPPED_IN_AREA_ON_FOOT_3D = 0x1A9,
  IS_CHAR_STOPPED_IN_AREA_IN_CAR_3D = 0x1AA,
  IS_CAR_STOPPED_IN_AREA_2D = 0x1AB,
  IS_CAR_STOPPED_IN_AREA_3D = 0x1AC,
  LOCATE_CAR_2D = 0x1AD,
  LOCATE_STOPPED_CAR_2D = 0x1AE,
  LOCATE_CAR_3D = 0x1AF,
  LOCATE_STOPPED_CAR_3D = 0x1B0,
  GIVE_WEAPON_TO_PLAYER = 0x1B1,
  GIVE_WEAPON_TO_CHAR = 0x1B2,
  GIVE_WEAPON_TO_CAR = 0x1B3,
  SET_PLAYER_CONTROL = 0x1B4,
  FORCE_WEATHER = 0x1B5,
  FORCE_WEATHER_NOW = 0x1B6,
  RELEASE_WEATHER = 0x1B7,
  SET_CURRENT_PLAYER_WEAPON = 0x1B8,
  SET_CURRENT_CHAR_WEAPON = 0x1B9,
  SET_CURRENT_CAR_WEAPON = 0x1BA,
  GET_OBJECT_COORDINATES = 0x1BB,
  SET_OBJECT_COORDINATES = 0x1BC,
  GET_GAME_TIMER = 0x1BD,
  TURN_CHAR_TO_FACE_COORD = 0x1BE,
  TURN_PLAYER_TO_FACE_COORD = 0x1BF,
  STORE_WANTED_LEVEL = 0x1C0,
  IS_CAR_STOPPED = 0x1C1,
  MARK_CHAR_AS_NO_LONGER_NEEDED = 0x1C2,
  MARK_CAR_AS_NO_LONGER_NEEDED = 0x1C3,
  MARK_OBJECT_AS_NO_LONGER_NEEDED = 0x1C4,
  DONT_REMOVE_CHAR = 0x1C5,
  DONT_REMOVE_CAR = 0x1C6,
  DONT_REMOVE_OBJECT = 0x1C7,
  CREATE_CHAR_AS_PASSENGER = 0x1C8,
  SET_CHAR_OBJ_KILL_CHAR_ON_FOOT = 0x1C9,
  SET_CHAR_OBJ_KILL_PLAYER_ON_FOOT = 0x1CA,
  SET_CHAR_OBJ_KILL_CHAR_ANY_MEANS = 0x1CB,
  SET_CHAR_OBJ_KILL_PLAYER_ANY_MEANS = 0x1CC,
  SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE = 0x1CD,
  SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE = 0x1CE,
  SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS = 0x1CF,
  SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS = 0x1D0,
  SET_CHAR_OBJ_GOTO_CHAR_ON_FOOT = 0x1D1,
  SET_CHAR_OBJ_GOTO_PLAYER_ON_FOOT = 0x1D2,
  SET_CHAR_OBJ_LEAVE_CAR = 0x1D3,
  SET_CHAR_OBJ_ENTER_CAR_AS_PASSENGER = 0x1D4,
  SET_CHAR_OBJ_ENTER_CAR_AS_DRIVER = 0x1D5,
  SET_CHAR_OBJ_FOLLOW_CAR_IN_CAR = 0x1D6,
  SET_CHAR_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE = 0x1D7,
  SET_CHAR_OBJ_DESTROY_OBJECT = 0x1D8,
  SET_CHAR_OBJ_DESTROY_CAR = 0x1D9,
  SET_CHAR_OBJ_GOTO_AREA_ON_FOOT = 0x1DA,
  SET_CHAR_OBJ_GOTO_AREA_IN_CAR = 0x1DB,
  SET_CHAR_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET = 0x1DC,
  SET_CHAR_OBJ_GUARD_ATTACK = 0x1DD,
  SET_CHAR_AS_LEADER = 0x1DE,
  SET_PLAYER_AS_LEADER = 0x1DF,
  LEAVE_GROUP = 0x1E0,
  SET_CHAR_OBJ_FOLLOW_ROUTE = 0x1E1,
  ADD_ROUTE_POINT = 0x1E2,
  PRINT_WITH_NUMBER_BIG = 0x1E3,
  PRINT_WITH_NUMBER = 0x1E4,
  PRINT_WITH_NUMBER_NOW = 0x1E5,
  PRINT_WITH_NUMBER_SOON = 0x1E6,
  SWITCH_ROADS_ON = 0x1E7,
  SWITCH_ROADS_OFF = 0x1E8,
  GET_NUMBER_OF_PASSENGERS = 0x1E9,
  GET_MAXIMUM_NUMBER_OF_PASSENGERS = 0x1EA,
  SET_CAR_DENSITY_MULTIPLIER = 0x1EB,
  SET_CAR_HEAVY = 0x1EC,
  CLEAR_CHAR_THREAT_SEARCH = 0x1ED,
  ACTIVATE_CRANE = 0x1EE,
  DEACTIVATE_CRANE = 0x1EF,
  SET_MAX_WANTED_LEVEL = 0x1F0,
  SAVE_VAR_INT = 0x1F1,
  SAVE_VAR_FLOAT = 0x1F2,
  IS_CAR_IN_AIR_PROPER = 0x1F3,
  IS_CAR_UPSIDEDOWN = 0x1F4,
  GET_PLAYER_CHAR = 0x1F5,
  CANCEL_OVERRIDE_RESTART = 0x1F6,
  SET_POLICE_IGNORE_PLAYER = 0x1F7,
  ADD_PAGER_MESSAGE_WITH_NUMBER = 0x1F8,
  START_KILL_FRENZY = 0x1F9,
  READ_KILL_FRENZY_STATUS = 0x1FA,
  SQRT = 0x1FB,
  LOCATE_PLAYER_ANY_MEANS_CAR_2D = 0x1FC,
  LOCATE_PLAYER_ON_FOOT_CAR_2D = 0x1FD,
  LOCATE_PLAYER_IN_CAR_CAR_2D = 0x1FE,
  LOCATE_PLAYER_ANY_MEANS_CAR_3D = 0x1FF,
  LOCATE_PLAYER_ON_FOOT_CAR_3D = 0x200,
  LOCATE_PLAYER_IN_CAR_CAR_3D = 0x201,
  LOCATE_CHAR_ANY_MEANS_CAR_2D = 0x202,
  LOCATE_CHAR_ON_FOOT_CAR_2D = 0x203,
  LOCATE_CHAR_IN_CAR_CAR_2D = 0x204,
  LOCATE_CHAR_ANY_MEANS_CAR_3D = 0x205,
  LOCATE_CHAR_ON_FOOT_CAR_3D = 0x206,
  LOCATE_CHAR_IN_CAR_CAR_3D = 0x207,
  GENERATE_RANDOM_FLOAT_IN_RANGE = 0x208,
  GENERATE_RANDOM_INT_IN_RANGE = 0x209,
  LOCK_CAR_DOORS = 0x20A,
  EXPLODE_CAR = 0x20B,
  ADD_EXPLOSION = 0x20C,
  IS_CAR_UPRIGHT = 0x20D,
  TURN_CHAR_TO_FACE_CHAR = 0x20E,
  TURN_CHAR_TO_FACE_PLAYER = 0x20F,
  TURN_PLAYER_TO_FACE_CHAR = 0x210,
  SET_CHAR_OBJ_GOTO_COORD_ON_FOOT = 0x211,
  SET_CHAR_OBJ_GOTO_COORD_IN_CAR = 0x212,
  CREATE_PICKUP = 0x213,
  HAS_PICKUP_BEEN_COLLECTED = 0x214,
  REMOVE_PICKUP = 0x215,
  SET_TAXI_LIGHTS = 0x216,
  PRINT_BIG_Q = 0x217,
  PRINT_WITH_NUMBER_BIG_Q = 0x218,
  SET_GARAGE = 0x219,
  SET_GARAGE_WITH_CAR_MODEL = 0x21A,
  SET_TARGET_CAR_FOR_MISSION_GARAGE = 0x21B,
  IS_CAR_IN_MISSION_GARAGE = 0x21C,
  SET_FREE_BOMBS = 0x21D,
  SET_POWERPOINT = 0x21E,
  SET_ALL_TAXI_LIGHTS = 0x21F,
  IS_CAR_ARMED_WITH_ANY_BOMB = 0x220,
  APPLY_BRAKES_TO_PLAYERS_CAR = 0x221,
  SET_PLAYER_HEALTH = 0x222,
  SET_CHAR_HEALTH = 0x223,
  SET_CAR_HEALTH = 0x224,
  GET_PLAYER_HEALTH = 0x225,
  GET_CHAR_HEALTH = 0x226,
  GET_CAR_HEALTH = 0x227,
  IS_CAR_ARMED_WITH_BOMB = 0x228,
  CHANGE_CAR_COLOUR = 0x229,
  SWITCH_PED_ROADS_ON = 0x22A,
  SWITCH_PED_ROADS_OFF = 0x22B,
  CHAR_LOOK_AT_CHAR_ALWAYS = 0x22C,
  CHAR_LOOK_AT_PLAYER_ALWAYS = 0x22D,
  PLAYER_LOOK_AT_CHAR_ALWAYS = 0x22E,
  STOP_CHAR_LOOKING = 0x22F,
  STOP_PLAYER_LOOKING = 0x230,
  SWITCH_HELICOPTER = 0x231,
  SET_GANG_ATTITUDE = 0x232,
  SET_GANG_GANG_ATTITUDE = 0x233,
  SET_GANG_PLAYER_ATTITUDE = 0x234,
  SET_GANG_PED_MODELS = 0x235,
  SET_GANG_CAR_MODEL = 0x236,
  SET_GANG_WEAPONS = 0x237,
  SET_CHAR_OBJ_RUN_TO_AREA = 0x238,
  SET_CHAR_OBJ_RUN_TO_COORD = 0x239,
  IS_PLAYER_TOUCHING_OBJECT_ON_FOOT = 0x23A,
  IS_CHAR_TOUCHING_OBJECT_ON_FOOT = 0x23B,
  LOAD_SPECIAL_CHARACTER = 0x23C,
  HAS_SPECIAL_CHARACTER_LOADED = 0x23D,
  FLASH_CAR = 0x23E,
  FLASH_CHAR = 0x23F,
  FLASH_OBJECT = 0x240,
  IS_PLAYER_IN_REMOTE_MODE = 0x241,
  ARM_CAR_WITH_BOMB = 0x242,
  SET_CHAR_PERSONALITY = 0x243,
  SET_CUTSCENE_OFFSET = 0x244,
  SET_ANIM_GROUP_FOR_CHAR = 0x245,
  SET_ANIM_GROUP_FOR_PLAYER = 0x246,
  REQUEST_MODEL = 0x247,
  HAS_MODEL_LOADED = 0x248,
  MARK_MODEL_AS_NO_LONGER_NEEDED = 0x249,
  GRAB_PHONE = 0x24A,
  SET_REPEATED_PHONE_MESSAGE = 0x24B,
  SET_PHONE_MESSAGE = 0x24C,
  HAS_PHONE_DISPLAYED_MESSAGE = 0x24D,
  TURN_PHONE_OFF = 0x24E,
  DRAW_CORONA = 0x24F,
  DRAW_LIGHT = 0x250,
  STORE_WEATHER = 0x251,
  RESTORE_WEATHER = 0x252,
  STORE_CLOCK = 0x253,
  RESTORE_CLOCK = 0x254,
  RESTART_CRITICAL_MISSION = 0x255,
  IS_PLAYER_PLAYING = 0x256,
  SET_COLL_OBJ_NO_OBJ = 0x257,
  SET_COLL_OBJ_WAIT_ON_FOOT = 0x258,
  SET_COLL_OBJ_FLEE_ON_FOOT_TILL_SAFE = 0x259,
  SET_COLL_OBJ_GUARD_SPOT = 0x25A,
  SET_COLL_OBJ_GUARD_AREA = 0x25B,
  SET_COLL_OBJ_WAIT_IN_CAR = 0x25C,
  SET_COLL_OBJ_KILL_CHAR_ON_FOOT = 0x25D,
  SET_COLL_OBJ_KILL_PLAYER_ON_FOOT = 0x25E,
  SET_COLL_OBJ_KILL_CHAR_ANY_MEANS = 0x25F,
  SET_COLL_OBJ_KILL_PLAYER_ANY_MEANS = 0x260,
  SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE = 0x261,
  SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE = 0x262,
  SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS = 0x263,
  SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS = 0x264,
  SET_COLL_OBJ_GOTO_CHAR_ON_FOOT = 0x265,
  SET_COLL_OBJ_GOTO_PLAYER_ON_FOOT = 0x266,
  SET_COLL_OBJ_LEAVE_CAR = 0x267,
  SET_COLL_OBJ_ENTER_CAR_AS_PASSENGER = 0x268,
  SET_COLL_OBJ_ENTER_CAR_AS_DRIVER = 0x269,
  SET_COLL_OBJ_FOLLOW_CAR_IN_CAR = 0x26A,
  SET_COLL_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE = 0x26B,
  SET_COLL_OBJ_DESTROY_OBJECT = 0x26C,
  SET_COLL_OBJ_DESTROY_CAR = 0x26D,
  SET_COLL_OBJ_GOTO_AREA_ON_FOOT = 0x26E,
  SET_COLL_OBJ_GOTO_AREA_IN_CAR = 0x26F,
  SET_COLL_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET = 0x270,
  SET_COLL_OBJ_GUARD_ATTACK = 0x271,
  SET_COLL_OBJ_FOLLOW_ROUTE = 0x272,
  SET_COLL_OBJ_GOTO_COORD_ON_FOOT = 0x273,
  SET_COLL_OBJ_GOTO_COORD_IN_CAR = 0x274,
  SET_COLL_OBJ_RUN_TO_AREA = 0x275,
  SET_COLL_OBJ_RUN_TO_COORD = 0x276,
  ADD_PEDS_IN_AREA_TO_COLL = 0x277,
  ADD_PEDS_IN_VEHICLE_TO_COLL = 0x278,
  CLEAR_COLL = 0x279,
  IS_COLL_IN_CARS = 0x27A,
  LOCATE_COLL_ANY_MEANS_2D = 0x27B,
  LOCATE_COLL_ON_FOOT_2D = 0x27C,
  LOCATE_COLL_IN_CAR_2D = 0x27D,
  LOCATE_STOPPED_COLL_ANY_MEANS_2D = 0x27E,
  LOCATE_STOPPED_COLL_ON_FOOT_2D = 0x27F,
  LOCATE_STOPPED_COLL_IN_CAR_2D = 0x280,
  LOCATE_COLL_ANY_MEANS_CHAR_2D = 0x281,
  LOCATE_COLL_ON_FOOT_CHAR_2D = 0x282,
  LOCATE_COLL_IN_CAR_CHAR_2D = 0x283,
  LOCATE_COLL_ANY_MEANS_CAR_2D = 0x284,
  LOCATE_COLL_ON_FOOT_CAR_2D = 0x285,
  LOCATE_COLL_IN_CAR_CAR_2D = 0x286,
  LOCATE_COLL_ANY_MEANS_PLAYER_2D = 0x287,
  LOCATE_COLL_ON_FOOT_PLAYER_2D = 0x288,
  LOCATE_COLL_IN_CAR_PLAYER_2D = 0x289,
  IS_COLL_IN_AREA_2D = 0x28A,
  IS_COLL_IN_AREA_ON_FOOT_2D = 0x28B,
  IS_COLL_IN_AREA_IN_CAR_2D = 0x28C,
  IS_COLL_STOPPED_IN_AREA_2D = 0x28D,
  IS_COLL_STOPPED_IN_AREA_ON_FOOT_2D = 0x28E,
  IS_COLL_STOPPED_IN_AREA_IN_CAR_2D = 0x28F,
  GET_NUMBER_OF_PEDS_IN_COLL = 0x290,
  SET_CHAR_HEED_THREATS = 0x291,
  SET_PLAYER_HEED_THREATS = 0x292,
  GET_CONTROLLER_MODE = 0x293,
  SET_CAN_RESPRAY_CAR = 0x294,
  IS_TAXI = 0x295,
  UNLOAD_SPECIAL_CHARACTER = 0x296,
  RESET_NUM_OF_MODELS_KILLED_BY_PLAYER = 0x297,
  GET_NUM_OF_MODELS_KILLED_BY_PLAYER = 0x298,
  ACTIVATE_GARAGE = 0x299,
  SWITCH_TAXI_TIMER = 0x29A,
  CREATE_OBJECT_NO_OFFSET = 0x29B,
  IS_BOAT = 0x29C,
  SET_CHAR_OBJ_GOTO_AREA_ANY_MEANS = 0x29D,
  SET_COLL_OBJ_GOTO_AREA_ANY_MEANS = 0x29E,
  IS_PLAYER_STOPPED = 0x29F,
  IS_CHAR_STOPPED = 0x2A0,
  MESSAGE_WAIT = 0x2A1,
  ADD_PARTICLE_EFFECT = 0x2A2,
  SWITCH_WIDESCREEN = 0x2A3,
  ADD_SPRITE_BLIP_FOR_CAR = 0x2A4,
  ADD_SPRITE_BLIP_FOR_CHAR = 0x2A5,
  ADD_SPRITE_BLIP_FOR_OBJECT = 0x2A6,
  ADD_SPRITE_BLIP_FOR_CONTACT_POINT = 0x2A7,
  ADD_SPRITE_BLIP_FOR_COORD = 0x2A8,
  SET_CHAR_ONLY_DAMAGED_BY_PLAYER = 0x2A9,
  SET_CAR_ONLY_DAMAGED_BY_PLAYER = 0x2AA,
  SET_CHAR_PROOFS = 0x2AB,
  SET_CAR_PROOFS = 0x2AC,
  IS_PLAYER_IN_ANGLED_AREA_2D = 0x2AD,
  IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_2D = 0x2AE,
  IS_PLAYER_IN_ANGLED_AREA_IN_CAR_2D = 0x2AF,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_2D = 0x2B0,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_2D = 0x2B1,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_2D = 0x2B2,
  IS_PLAYER_IN_ANGLED_AREA_3D = 0x2B3,
  IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_3D = 0x2B4,
  IS_PLAYER_IN_ANGLED_AREA_IN_CAR_3D = 0x2B5,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_3D = 0x2B6,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_3D = 0x2B7,
  IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_3D = 0x2B8,
  DEACTIVATE_GARAGE = 0x2B9,
  GET_NUMBER_OF_CARS_COLLECTED_BY_GARAGE = 0x2BA,
  HAS_CAR_BEEN_TAKEN_TO_GARAGE = 0x2BB,
  SET_SWAT_REQUIRED = 0x2BC,
  SET_FBI_REQUIRED = 0x2BD,
  SET_ARMY_REQUIRED = 0x2BE,
  IS_CAR_IN_WATER = 0x2BF,
  GET_CLOSEST_CHAR_NODE = 0x2C0,
  GET_CLOSEST_CAR_NODE = 0x2C1,
  CAR_GOTO_COORDINATES_ACCURATE = 0x2C2,
  START_PACMAN_RACE = 0x2C3,
  START_PACMAN_RECORD = 0x2C4,
  GET_NUMBER_OF_POWER_PILLS_EATEN = 0x2C5,
  CLEAR_PACMAN = 0x2C6,
  START_PACMAN_SCRAMBLE = 0x2C7,
  GET_NUMBER_OF_POWER_PILLS_CARRIED = 0x2C8,
  CLEAR_NUMBER_OF_POWER_PILLS_CARRIED = 0x2C9,
  IS_CAR_ON_SCREEN = 0x2CA,
  IS_CHAR_ON_SCREEN = 0x2CB,
  IS_OBJECT_ON_SCREEN = 0x2CC,
  GOSUB_FILE = 0x2CD,
  GET_GROUND_Z_FOR_3D_COORD = 0x2CE,
  START_SCRIPT_FIRE = 0x2CF,
  IS_SCRIPT_FIRE_EXTINGUISHED = 0x2D0,
  REMOVE_SCRIPT_FIRE = 0x2D1,
  SET_COMEDY_CONTROLS = 0x2D2,
  BOAT_GOTO_COORDS = 0x2D3,
  BOAT_STOP = 0x2D4,
  IS_PLAYER_SHOOTING_IN_AREA = 0x2D5,
  IS_CHAR_SHOOTING_IN_AREA = 0x2D6,
  IS_CURRENT_PLAYER_WEAPON = 0x2D7,
  IS_CURRENT_CHAR_WEAPON = 0x2D8,
  CLEAR_NUMBER_OF_POWER_PILLS_EATEN = 0x2D9,
  ADD_POWER_PILL = 0x2DA,
  SET_BOAT_CRUISE_SPEED = 0x2DB,
  GET_RANDOM_CHAR_IN_AREA = 0x2DC,
  GET_RANDOM_CHAR_IN_ZONE = 0x2DD,
  IS_PLAYER_IN_TAXI = 0x2DE,
  IS_PLAYER_SHOOTING = 0x2DF,
  IS_CHAR_SHOOTING = 0x2E0,
  CREATE_MONEY_PICKUP = 0x2E1,
  SET_CHAR_ACCURACY = 0x2E2,
  GET_CAR_SPEED = 0x2E3,
  LOAD_CUTSCENE = 0x2E4,
  CREATE_CUTSCENE_OBJECT = 0x2E5,
  SET_CUTSCENE_ANIM = 0x2E6,
  START_CUTSCENE = 0x2E7,
  GET_CUTSCENE_TIME = 0x2E8,
  HAS_CUTSCENE_FINISHED = 0x2E9,
  CLEAR_CUTSCENE = 0x2EA,
  RESTORE_CAMERA_JUMPCUT = 0x2EB,
  CREATE_COLLECTABLE1 = 0x2EC,
  SET_COLLECTABLE1_TOTAL = 0x2ED,
  IS_PROJECTILE_IN_AREA = 0x2EE,
  DESTROY_PROJECTILES_IN_AREA = 0x2EF,
  DROP_MINE = 0x2F0,
  DROP_NAUTICAL_MINE = 0x2F1,
  IS_CHAR_MODEL = 0x2F2,
  LOAD_SPECIAL_MODEL = 0x2F3,
  CREATE_CUTSCENE_HEAD = 0x2F4,
  SET_CUTSCENE_HEAD_ANIM = 0x2F5,
  SIN = 0x2F6,
  COS = 0x2F7,
  GET_CAR_FORWARD_X = 0x2F8,
  GET_CAR_FORWARD_Y = 0x2F9,
  CHANGE_GARAGE_TYPE = 0x2FA,
  ACTIVATE_CRUSHER_CRANE = 0x2FB,
  PRINT_WITH_2_NUMBERS = 0x2FC,
  PRINT_WITH_2_NUMBERS_NOW = 0x2FD,
  PRINT_WITH_2_NUMBERS_SOON = 0x2FE,
  PRINT_WITH_3_NUMBERS = 0x2FF,
  PRINT_WITH_3_NUMBERS_NOW = 0x300,
  PRINT_WITH_3_NUMBERS_SOON = 0x301,
  PRINT_WITH_4_NUMBERS = 0x302,
  PRINT_WITH_4_NUMBERS_NOW = 0x303,
  PRINT_WITH_4_NUMBERS_SOON = 0x304,
  PRINT_WITH_5_NUMBERS = 0x305,
  PRINT_WITH_5_NUMBERS_NOW = 0x306,
  PRINT_WITH_5_NUMBERS_SOON = 0x307,
  PRINT_WITH_6_NUMBERS = 0x308,
  PRINT_WITH_6_NUMBERS_NOW = 0x309,
  PRINT_WITH_6_NUMBERS_SOON = 0x30A,
  SET_CHAR_OBJ_FOLLOW_CHAR_IN_FORMATION = 0x30B,
  PLAYER_MADE_PROGRESS = 0x30C,
  SET_PROGRESS_TOTAL = 0x30D,
  REGISTER_JUMP_DISTANCE = 0x30E,
  REGISTER_JUMP_HEIGHT = 0x30F,
  REGISTER_JUMP_FLIPS = 0x310,
  REGISTER_JUMP_SPINS = 0x311,
  REGISTER_JUMP_STUNT = 0x312,
  REGISTER_UNIQUE_JUMP_FOUND = 0x313,
  SET_UNIQUE_JUMPS_TOTAL = 0x314,
  REGISTER_PASSENGER_DROPPED_OFF_TAXI = 0x315,
  REGISTER_MONEY_MADE_TAXI = 0x316,
  REGISTER_MISSION_GIVEN = 0x317,
  REGISTER_MISSION_PASSED = 0x318,
  SET_CHAR_RUNNING = 0x319,
  REMOVE_ALL_SCRIPT_FIRES = 0x31A,
  IS_FIRST_CAR_COLOUR = 0x31B,
  IS_SECOND_CAR_COLOUR = 0x31C,
  HAS_CHAR_BEEN_DAMAGED_BY_WEAPON = 0x31D,
  HAS_CAR_BEEN_DAMAGED_BY_WEAPON = 0x31E,
  IS_CHAR_IN_CHARS_GROUP = 0x31F,
  IS_CHAR_IN_PLAYERS_GROUP = 0x320,
  EXPLODE_CHAR_HEAD = 0x321,
  EXPLODE_PLAYER_HEAD = 0x322,
  ANCHOR_BOAT = 0x323,
  SET_ZONE_GROUP = 0x324,
  START_CAR_FIRE = 0x325,
  START_CHAR_FIRE = 0x326,
  GET_RANDOM_CAR_OF_TYPE_IN_AREA = 0x327,
  GET_RANDOM_CAR_OF_TYPE_IN_ZONE = 0x328,
  HAS_RESPRAY_HAPPENED = 0x329,
  SET_CAMERA_ZOOM = 0x32A,
  CREATE_PICKUP_WITH_AMMO = 0x32B,
  SET_CAR_RAM_CAR = 0x32C,
  SET_CAR_BLOCK_CAR = 0x32D,
  SET_CHAR_OBJ_CATCH_TRAIN = 0x32E,
  SET_COLL_OBJ_CATCH_TRAIN = 0x32F,
  SET_PLAYER_NEVER_GETS_TIRED = 0x330,
  SET_PLAYER_FAST_RELOAD = 0x331,
  SET_CHAR_BLEEDING = 0x332,
  SET_CAR_FUNNY_SUSPENSION = 0x333,
  SET_CAR_BIG_WHEELS = 0x334,
  SET_FREE_RESPRAYS = 0x335,
  SET_PLAYER_VISIBLE = 0x336,
  SET_CHAR_VISIBLE = 0x337,
  SET_CAR_VISIBLE = 0x338,
  IS_AREA_OCCUPIED = 0x339,
  START_DRUG_RUN = 0x33A,
  HAS_DRUG_RUN_BEEN_COMPLETED = 0x33B,
  HAS_DRUG_PLANE_BEEN_SHOT_DOWN = 0x33C,
  SAVE_PLAYER_FROM_FIRES = 0x33D,
  DISPLAY_TEXT = 0x33E,
  SET_TEXT_SCALE = 0x33F,
  SET_TEXT_COLOUR = 0x340,
  SET_TEXT_JUSTIFY = 0x341,
  SET_TEXT_CENTRE = 0x342,
  SET_TEXT_WRAPX = 0x343,
  SET_TEXT_CENTRE_SIZE = 0x344,
  SET_TEXT_BACKGROUND = 0x345,
  SET_TEXT_BACKGROUND_COLOUR = 0x346,
  SET_TEXT_BACKGROUND_ONLY_TEXT = 0x347,
  SET_TEXT_PROPORTIONAL = 0x348,
  SET_TEXT_FONT = 0x349,
  INDUSTRIAL_PASSED = 0x34A,
  COMMERCIAL_PASSED = 0x34B,
  SUBURBAN_PASSED = 0x34C,
  ROTATE_OBJECT = 0x34D,
  SLIDE_OBJECT = 0x34E,
  REMOVE_CHAR_ELEGANTLY = 0x34F,
  SET_CHAR_STAY_IN_SAME_PLACE = 0x350,
  IS_NASTY_GAME = 0x351,
  UNDRESS_CHAR = 0x352,
  DRESS_CHAR = 0x353,
  START_CHASE_SCENE = 0x354,
  STOP_CHASE_SCENE = 0x355,
  IS_EXPLOSION_IN_AREA = 0x356,
  IS_EXPLOSION_IN_ZONE = 0x357,
  START_DRUG_DROP_OFF = 0x358,
  HAS_DROP_OFF_PLANE_BEEN_SHOT_DOWN = 0x359,
  FIND_DROP_OFF_PLANE_COORDINATES = 0x35A,
  CREATE_FLOATING_PACKAGE = 0x35B,
  PLACE_OBJECT_RELATIVE_TO_CAR = 0x35C,
  MAKE_OBJECT_TARGETTABLE = 0x35D,
  ADD_ARMOUR_TO_PLAYER = 0x35E,
  ADD_ARMOUR_TO_CHAR = 0x35F,
  OPEN_GARAGE = 0x360,
  CLOSE_GARAGE = 0x361,
  WARP_CHAR_FROM_CAR_TO_COORD = 0x362,
  SET_VISIBILITY_OF_CLOSEST_OBJECT_OF_TYPE = 0x363,
  HAS_CHAR_SPOTTED_CHAR = 0x364,
  SET_CHAR_OBJ_HAIL_TAXI = 0x365,
  HAS_OBJECT_BEEN_DAMAGED = 0x366,
  START_KILL_FRENZY_HEADSHOT = 0x367,
  ACTIVATE_MILITARY_CRANE = 0x368,
  WARP_PLAYER_INTO_CAR = 0x369,
  WARP_CHAR_INTO_CAR = 0x36A,
  SWITCH_CAR_RADIO = 0x36B,
  SET_AUDIO_STREAM = 0x36C,
  PRINT_WITH_2_NUMBERS_BIG = 0x36D,
  PRINT_WITH_3_NUMBERS_BIG = 0x36E,
  PRINT_WITH_4_NUMBERS_BIG = 0x36F,
  PRINT_WITH_5_NUMBERS_BIG = 0x370,
  PRINT_WITH_6_NUMBERS_BIG = 0x371,
  SET_CHAR_WAIT_STATE = 0x372,
  SET_CAMERA_BEHIND_PLAYER = 0x373,
  SET_MOTION_BLUR = 0x374,
  PRINT_STRING_IN_STRING = 0x375,
  CREATE_RANDOM_CHAR = 0x376,
  SET_CHAR_OBJ_STEAL_ANY_CAR = 0x377,
  SET_2_REPEATED_PHONE_MESSAGES = 0x378,
  SET_2_PHONE_MESSAGES = 0x379,
  SET_3_REPEATED_PHONE_MESSAGES = 0x37A,
  SET_3_PHONE_MESSAGES = 0x37B,
  SET_4_REPEATED_PHONE_MESSAGES = 0x37C,
  SET_4_PHONE_MESSAGES = 0x37D,
  IS_SNIPER_BULLET_IN_AREA = 0x37E,
  GIVE_PLAYER_DETONATOR = 0x37F,
  SET_COLL_OBJ_STEAL_ANY_CAR = 0x380,
  SET_OBJECT_VELOCITY = 0x381,
  SET_OBJECT_COLLISION = 0x382,
  IS_ICECREAM_JINGLE_ON = 0x383,
  PRINT_STRING_IN_STRING_NOW = 0x384,
  PRINT_STRING_IN_STRING_SOON = 0x385,
  SET_5_REPEATED_PHONE_MESSAGES = 0x386,
  SET_5_PHONE_MESSAGES = 0x387,
  SET_6_REPEATED_PHONE_MESSAGES = 0x388,
  SET_6_PHONE_MESSAGES = 0x389,
  IS_POINT_OBSCURED_BY_A_MISSION_ENTITY = 0x38A,
  LOAD_ALL_MODELS_NOW = 0x38B,
  ADD_TO_OBJECT_VELOCITY = 0x38C,
  DRAW_SPRITE = 0x38D,
  DRAW_RECT = 0x38E,
  LOAD_SPRITE = 0x38F,
  LOAD_TEXTURE_DICTIONARY = 0x390,
  REMOVE_TEXTURE_DICTIONARY = 0x391,
  SET_OBJECT_DYNAMIC = 0x392,
  SET_CHAR_ANIM_SPEED = 0x393,
  PLAY_MISSION_PASSED_TUNE = 0x394,
  CLEAR_AREA = 0x395,
  FREEZE_ONSCREEN_TIMER = 0x396,
  SWITCH_CAR_SIREN = 0x397,
  SWITCH_PED_ROADS_ON_ANGLED = 0x398,
  SWITCH_PED_ROADS_OFF_ANGLED = 0x399,
  SWITCH_ROADS_ON_ANGLED = 0x39A,
  SWITCH_ROADS_OFF_ANGLED = 0x39B,
  SET_CAR_WATERTIGHT = 0x39C,
  ADD_MOVING_PARTICLE_EFFECT = 0x39D,
  SET_CHAR_CANT_BE_DRAGGED_OUT = 0x39E,
  TURN_CAR_TO_FACE_COORD = 0x39F,
  IS_CRANE_LIFTING_CAR = 0x3A0,
  DRAW_SPHERE = 0x3A1,
  SET_CAR_STATUS = 0x3A2,
  IS_CHAR_MALE = 0x3A3,
  SCRIPT_NAME = 0x3A4,
  CHANGE_GARAGE_TYPE_WITH_CAR_MODEL = 0x3A5,
  FIND_DRUG_PLANE_COORDINATES = 0x3A6,
  SAVE_INT_TO_DEBUG_FILE = 0x3A7,
  SAVE_FLOAT_TO_DEBUG_FILE = 0x3A8,
  SAVE_NEWLINE_TO_DEBUG_FILE = 0x3A9,
  POLICE_RADIO_MESSAGE = 0x3AA,
  SET_CAR_STRONG = 0x3AB,
  REMOVE_ROUTE = 0x3AC,
  SWITCH_RUBBISH = 0x3AD,
  REMOVE_PARTICLE_EFFECTS_IN_AREA = 0x3AE,
  SWITCH_STREAMING = 0x3AF,
  IS_GARAGE_OPEN = 0x3B0,
  IS_GARAGE_CLOSED = 0x3B1,
  START_CATALINA_HELI = 0x3B2,
  CATALINA_HELI_TAKE_OFF = 0x3B3,
  REMOVE_CATALINA_HELI = 0x3B4,
  HAS_CATALINA_HELI_BEEN_SHOT_DOWN = 0x3B5,
  SWAP_NEAREST_BUILDING_MODEL = 0x3B6,
  SWITCH_WORLD_PROCESSING = 0x3B7,
  REMOVE_ALL_PLAYER_WEAPONS = 0x3B8,
  GRAB_CATALINA_HELI = 0x3B9,
  CLEAR_AREA_OF_CARS = 0x3BA,
  SET_ROTATING_GARAGE_DOOR = 0x3BB,
  ADD_SPHERE = 0x3BC,
  REMOVE_SPHERE = 0x3BD,
  CATALINA_HELI_FLY_AWAY = 0x3BE,
  SET_EVERYONE_IGNORE_PLAYER = 0x3BF,
  STORE_CAR_CHAR_IS_IN_NO_SAVE = 0x3C0,
  STORE_CAR_PLAYER_IS_IN_NO_SAVE = 0x3C1,
  IS_PHONE_DISPLAYING_MESSAGE = 0x3C2,
  DISPLAY_ONSCREEN_TIMER_WITH_STRING = 0x3C3,
  DISPLAY_ONSCREEN_COUNTER_WITH_STRING = 0x3C4,
  CREATE_RANDOM_CAR_FOR_CAR_PARK = 0x3C5,
  IS_COLLISION_IN_MEMORY = 0x3C6,
  SET_WANTED_MULTIPLIER = 0x3C7,
  SET_CAMERA_IN_FRONT_OF_PLAYER = 0x3C8,
  IS_CAR_VISIBLY_DAMAGED = 0x3C9,
  DOES_OBJECT_EXIST = 0x3CA,
  LOAD_SCENE = 0x3CB,
  ADD_STUCK_CAR_CHECK = 0x3CC,
  REMOVE_STUCK_CAR_CHECK = 0x3CD,
  IS_CAR_STUCK = 0x3CE,
  LOAD_MISSION_AUDIO = 0x3CF,
  HAS_MISSION_AUDIO_LOADED = 0x3D0,
  PLAY_MISSION_AUDIO = 0x3D1,
  HAS_MISSION_AUDIO_FINISHED = 0x3D2,
  GET_CLOSEST_CAR_NODE_WITH_HEADING = 0x3D3,
  HAS_IMPORT_GARAGE_SLOT_BEEN_FILLED = 0x3D4,
  CLEAR_THIS_PRINT = 0x3D5,
  CLEAR_THIS_BIG_PRINT = 0x3D6,
  SET_MISSION_AUDIO_POSITION = 0x3D7,
  ACTIVATE_SAVE_MENU = 0x3D8,
  HAS_SAVE_GAME_FINISHED = 0x3D9,
  NO_SPECIAL_CAMERA_FOR_THIS_GARAGE = 0x3DA,
  ADD_BLIP_FOR_PICKUP_OLD = 0x3DB,
  ADD_BLIP_FOR_PICKUP = 0x3DC,
  ADD_SPRITE_BLIP_FOR_PICKUP = 0x3DD,
  SET_PED_DENSITY_MULTIPLIER = 0x3DE,
  FORCE_RANDOM_PED_TYPE = 0x3DF,
  SET_TEXT_DRAW_BEFORE_FADE = 0x3E0,
  GET_COLLECTABLE1S_COLLECTED = 0x3E1,
  SET_CHAR_OBJ_LEAVE_ANY_CAR = 0x3E2,
  SET_SPRITES_DRAW_BEFORE_FADE = 0x3E3,
  SET_TEXT_RIGHT_JUSTIFY = 0x3E4,
  PRINT_HELP = 0x3E5,
  CLEAR_HELP = 0x3E6,
  FLASH_HUD_OBJECT = 0x3E7,
  FLASH_RADAR_BLIP = 0x3E8,
  IS_CHAR_IN_CONTROL = 0x3E9,
  SET_GENERATE_CARS_AROUND_CAMERA = 0x3EA,
  CLEAR_SMALL_PRINTS = 0x3EB,
  HAS_MILITARY_CRANE_COLLECTED_ALL_CARS = 0x3EC,
  SET_UPSIDEDOWN_CAR_NOT_DAMAGED = 0x3ED,
  CAN_PLAYER_START_MISSION = 0x3EE,
  MAKE_PLAYER_SAFE_FOR_CUTSCENE = 0x3EF,
  USE_TEXT_COMMANDS = 0x3F0,
  SET_THREAT_FOR_PED_TYPE = 0x3F1,
  CLEAR_THREAT_FOR_PED_TYPE = 0x3F2,
  GET_CAR_COLOURS = 0x3F3,
  SET_ALL_CARS_CAN_BE_DAMAGED = 0x3F4,
  SET_CAR_CAN_BE_DAMAGED = 0x3F5,
  MAKE_PLAYER_UNSAFE = 0x3F6,
  LOAD_COLLISION = 0x3F7,
  GET_BODY_CAST_HEALTH = 0x3F8,
  SET_CHARS_CHATTING = 0x3F9,
  MAKE_PLAYER_SAFE = 0x3FA,
  SET_CAR_STAYS_IN_CURRENT_LEVEL = 0x3FB,
  SET_CHAR_STAYS_IN_CURRENT_LEVEL = 0x3FC,
  SET_DRUNK_INPUT_DELAY = 0x3FD,
  SET_CHAR_MONEY = 0x3FE,
  INCREASE_CHAR_MONEY = 0x3FF,
  GET_OFFSET_FROM_OBJECT_IN_WORLD_COORDS = 0x400,
  REGISTER_LIFE_SAVED = 0x401,
  REGISTER_CRIMINAL_CAUGHT = 0x402,
  REGISTER_AMBULANCE_LEVEL = 0x403,
  REGISTER_FIRE_EXTINGUISHED = 0x404,
  TURN_PHONE_ON = 0x405,
  REGISTER_LONGEST_DODO_FLIGHT = 0x406,
  GET_OFFSET_FROM_CAR_IN_WORLD_COORDS = 0x407,
  SET_TOTAL_NUMBER_OF_KILL_FRENZIES = 0x408,
  BLOW_UP_RC_BUGGY = 0x409,
  REMOVE_CAR_FROM_CHASE = 0x40A,
  IS_FRENCH_GAME = 0x40B,
  IS_GERMAN_GAME = 0x40C,
  CLEAR_MISSION_AUDIO = 0x40D,
  SET_FADE_IN_AFTER_NEXT_ARREST = 0x40E,
  SET_FADE_IN_AFTER_NEXT_DEATH = 0x40F,
  SET_GANG_PED_MODEL_PREFERENCE = 0x410,
  SET_CHAR_USE_PEDNODE_SEEK = 0x411,
  SWITCH_VEHICLE_WEAPONS = 0x412,
  SET_GET_OUT_OF_JAIL_FREE = 0x413,
  SET_FREE_HEALTH_CARE = 0x414,
  IS_CAR_DOOR_CLOSED = 0x415,
  LOAD_AND_LAUNCH_MISSION = 0x416,
  LOAD_AND_LAUNCH_MISSION_INTERNAL = 0x417,
  SET_OBJECT_DRAW_LAST = 0x418,
  GET_AMMO_IN_PLAYER_WEAPON = 0x419,
  GET_AMMO_IN_CHAR_WEAPON = 0x41A,
  REGISTER_KILL_FRENZY_PASSED = 0x41B,
  SET_CHAR_SAY = 0x41C,
  SET_NEAR_CLIP = 0x41D,
  SET_RADIO_CHANNEL = 0x41E,
  OVERRIDE_HOSPITAL_LEVEL = 0x41F,
  OVERRIDE_POLICE_STATION_LEVEL = 0x420,
  FORCE_RAIN = 0x421,
  DOES_GARAGE_CONTAIN_CAR = 0x422,
  SET_CAR_TRACTION = 0x423,
  ARE_MEASUREMENTS_IN_METRES = 0x424,
  CONVERT_METRES_TO_FEET = 0x425,
  MARK_ROADS_BETWEEN_LEVELS = 0x426,
  MARK_PED_ROADS_BETWEEN_LEVELS = 0x427,
  SET_CAR_AVOID_LEVEL_TRANSITIONS = 0x428,
  SET_CHAR_AVOID_LEVEL_TRANSITIONS = 0x429,
  IS_THREAT_FOR_PED_TYPE = 0x42A,
  CLEAR_AREA_OF_CHARS = 0x42B,
  SET_TOTAL_NUMBER_OF_MISSIONS = 0x42C,
  CONVERT_METRES_TO_FEET_INT = 0x42D,
  REGISTER_FASTEST_TIME = 0x42E,
  REGISTER_HIGHEST_SCORE = 0x42F,
  WARP_CHAR_INTO_CAR_AS_PASSENGER = 0x430,
  IS_CAR_PASSENGER_SEAT_FREE = 0x431,
  GET_CHAR_IN_CAR_PASSENGER_SEAT = 0x432,
  SET_CHAR_IS_CHRIS_CRIMINAL = 0x433,
  START_CREDITS = 0x434,
  STOP_CREDITS = 0x435,
  ARE_CREDITS_FINISHED = 0x436,
  CREATE_SINGLE_PARTICLE = 0x437,
  SET_CHAR_IGNORE_LEVEL_TRANSITIONS = 0x438,
  GET_CHASE_CAR = 0x439,
  START_BOAT_FOAM_ANIMATION = 0x43A,
  UPDATE_BOAT_FOAM_ANIMATION = 0x43B,
  SET_MUSIC_DOES_FADE = 0x43C,
  SET_INTRO_IS_PLAYING = 0x43D,
  SET_PLAYER_HOOKER = 0x43E,
  PLAY_END_OF_GAME_TUNE = 0x43F,
  STOP_END_OF_GAME_TUNE = 0x440,
  GET_CAR_MODEL = 0x441,
  IS_PLAYER_SITTING_IN_CAR = 0x442,
  IS_PLAYER_SITTING_IN_ANY_CAR = 0x443,
  SET_SCRIPT_FIRE_AUDIO = 0x444,
  ARE_ANY_CAR_CHEATS_ACTIVATED = 0x445,
  SET_CHAR_SUFFERS_CRITICAL_HITS = 0x446,
  IS_PLAYER_LIFTING_A_PHONE = 0x447,
  IS_CHAR_SITTING_IN_CAR = 0x448,
  IS_CHAR_SITTING_IN_ANY_CAR = 0x449,
  IS_PLAYER_ON_FOOT = 0x44A,
  IS_CHAR_ON_FOOT = 0x44B,
  LOAD_COLLISION_WITH_SCREEN = 0x44C,
  LOAD_SPLASH_SCREEN = 0x44D,
  SET_CAR_IGNORE_LEVEL_TRANSITIONS = 0x44E,
  MAKE_CRAIGS_CAR_A_BIT_STRONGER = 0x44F,
  SET_JAMES_CAR_ON_PATH_TO_PLAYER = 0x450,
  LOAD_END_OF_GAME_TUNE = 0x451,
  ENABLE_PLAYER_CONTROL_CAMERA = 0x452,
  SET_OBJECT_ROTATION = 0x453,
  GET_DEBUG_CAMERA_COORDINATES = 0x454,
  GET_DEBUG_CAMERA_FRONT_VECTOR = 0x455,
  IS_PLAYER_TARGETTING_ANY_CHAR = 0x456,
  IS_PLAYER_TARGETTING_CHAR = 0x457,
  IS_PLAYER_TARGETTING_OBJECT = 0x458,
  TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME = 0x459,
  DISPLAY_TEXT_WITH_NUMBER = 0x45A,
  DISPLAY_TEXT_WITH_2_NUMBERS = 0x45B,
  FAIL_CURRENT_MISSION = 0x45C,
  GET_CLOSEST_OBJECT_OF_TYPE = 0x45D,
  PLACE_OBJECT_RELATIVE_TO_OBJECT = 0x45E,
  SET_ALL_OCCUPANTS_OF_CAR_LEAVE_CAR = 0x45F,
  SET_INTERPOLATION_PARAMETERS = 0x460,
  GET_CLOSEST_CAR_NODE_WITH_HEADING_TOWARDS_POINT = 0x461,
  GET_CLOSEST_CAR_NODE_WITH_HEADING_AWAY_POINT = 0x462,
  GET_DEBUG_CAMERA_POINT_AT = 0x463,
  ATTACH_CHAR_TO_CAR = 0x464,
  DETACH_CHAR_FROM_CAR = 0x465,
  SET_CAR_CHANGE_LANE = 0x466,
  CLEAR_CHAR_LAST_WEAPON_DAMAGE = 0x467,
  CLEAR_CAR_LAST_WEAPON_DAMAGE = 0x468,
  GET_RANDOM_COP_IN_AREA = 0x469,
  GET_RANDOM_COP_IN_ZONE = 0x46A,
  SET_CHAR_OBJ_FLEE_CAR = 0x46B,
  GET_DRIVER_OF_CAR = 0x46C,
  GET_NUMBER_OF_FOLLOWERS = 0x46D,
  GIVE_REMOTE_CONTROLLED_MODEL_TO_PLAYER = 0x46E,
  GET_CURRENT_PLAYER_WEAPON = 0x46F,
  GET_CURRENT_CHAR_WEAPON = 0x470,
  LOCATE_CHAR_ANY_MEANS_OBJECT_2D = 0x471,
  LOCATE_CHAR_ON_FOOT_OBJECT_2D = 0x472,
  LOCATE_CHAR_IN_CAR_OBJECT_2D = 0x473,
  LOCATE_CHAR_ANY_MEANS_OBJECT_3D = 0x474,
  LOCATE_CHAR_ON_FOOT_OBJECT_3D = 0x475,
  LOCATE_CHAR_IN_CAR_OBJECT_3D = 0x476,
  SET_CAR_TEMP_ACTION = 0x477,
  SET_CAR_HANDBRAKE_TURN_RIGHT = 0x478,
  SET_CAR_HANDBRAKE_STOP = 0x479,
  IS_CHAR_ON_ANY_BIKE = 0x47A,
  LOCATE_SNIPER_BULLET_2D = 0x47B,
  LOCATE_SNIPER_BULLET_3D = 0x47C,
  GET_NUMBER_OF_SEATS_IN_MODEL = 0x47D,
  IS_PLAYER_ON_ANY_BIKE = 0x47E,
  IS_CHAR_LYING_DOWN = 0x47F,
  CAN_CHAR_SEE_DEAD_CHAR = 0x480,
  SET_ENTER_CAR_RANGE_MULTIPLIER = 0x481,
  SET_THREAT_REACTION_RANGE_MULTIPLIER = 0x482,
  SET_CHAR_CEASE_ATTACK_TIMER = 0x483,
  GET_REMOTE_CONTROLLED_CAR = 0x484,
  IS_PC_VERSION = 0x485,
  REPLAY = 0x486,
  IS_REPLAY_PLAYING = 0x487,
  IS_MODEL_AVAILABLE = 0x488,
  SHUT_CHAR_UP = 0x489,
  SET_ENABLE_RC_DETONATE = 0x48A,
  SET_CAR_RANDOM_ROUTE_SEED = 0x48B,
  IS_ANY_PICKUP_AT_COORDS = 0x48C,
  GET_FIRST_PICKUP_COORDS = 0x48D,
  GET_NEXT_PICKUP_COORDS = 0x48E,
  REMOVE_ALL_CHAR_WEAPONS = 0x48F,
  HAS_PLAYER_GOT_WEAPON = 0x490,
  HAS_CHAR_GOT_WEAPON = 0x491,
  IS_PLAYER_FACING_CHAR = 0x492,
  SET_TANK_DETONATE_CARS = 0x493,
  GET_POSITION_OF_ANALOGUE_STICKS = 0x494,
  IS_CAR_ON_FIRE = 0x495,
  IS_CAR_TYRE_BURST = 0x496,
  SET_CAR_DRIVE_STRAIGHT_AHEAD = 0x497,
  SET_CAR_WAIT = 0x498,
  IS_PLAYER_STANDING_ON_A_VEHICLE = 0x499,
  IS_PLAYER_FOOT_DOWN = 0x49A,
  IS_CHAR_FOOT_DOWN = 0x49B,
  INITIALISE_OBJECT_PATH = 0x49C,
  START_OBJECT_ON_PATH = 0x49D,
  SET_OBJECT_PATH_SPEED = 0x49E,
  SET_OBJECT_PATH_POSITION = 0x49F,
  GET_OBJECT_DISTANCE_ALONG_PATH = 0x4A0,
  CLEAR_OBJECT_PATH = 0x4A1,
  HELI_GOTO_COORDS = 0x4A2,
  IS_INT_VAR_EQUAL_TO_CONSTANT = 0x4A3,
  IS_INT_LVAR_EQUAL_TO_CONSTANT = 0x4A4,
  GET_DEAD_CHAR_PICKUP_COORDS = 0x4A5,
  CREATE_PROTECTION_PICKUP = 0x4A6,
  IS_CHAR_IN_ANY_BOAT = 0x4A7,
  IS_PLAYER_IN_ANY_BOAT = 0x4A8,
  IS_CHAR_IN_ANY_HELI = 0x4A9,
  IS_PLAYER_IN_ANY_HELI = 0x4AA,
  IS_CHAR_IN_ANY_PLANE = 0x4AB,
  IS_PLAYER_IN_ANY_PLANE = 0x4AC,
  IS_CHAR_IN_WATER = 0x4AD,
  SET_VAR_INT_TO_CONSTANT = 0x4AE,
  SET_LVAR_INT_TO_CONSTANT = 0x4AF,
  IS_INT_VAR_GREATER_THAN_CONSTANT = 0x4B0,
  IS_INT_LVAR_GREATER_THAN_CONSTANT = 0x4B1,
  IS_CONSTANT_GREATER_THAN_INT_VAR = 0x4B2,
  IS_CONSTANT_GREATER_THAN_INT_LVAR = 0x4B3,
  IS_INT_VAR_GREATER_OR_EQUAL_TO_CONSTANT = 0x4B4,
  IS_INT_LVAR_GREATER_OR_EQUAL_TO_CONSTANT = 0x4B5,
  IS_CONSTANT_GREATER_OR_EQUAL_TO_INT_VAR = 0x4B6,
  IS_CONSTANT_GREATER_OR_EQUAL_TO_INT_LVAR = 0x4B7,
  GET_CHAR_WEAPON_IN_SLOT = 0x4B8,
  GET_CLOSEST_STRAIGHT_ROAD = 0x4B9,
  SET_CAR_FORWARD_SPEED = 0x4BA,
  SET_AREA_VISIBLE = 0x4BB,
  SET_CUTSCENE_ANIM_TO_LOOP = 0x4BC,
  MARK_CAR_AS_CONVOY_CAR = 0x4BD,
  RESET_HAVOC_CAUSED_BY_PLAYER = 0x4BE,
  GET_HAVOC_CAUSED_BY_PLAYER = 0x4BF,
  CREATE_SCRIPT_ROADBLOCK = 0x4C0,
  CLEAR_ALL_SCRIPT_ROADBLOCKS = 0x4C1,
  SET_CHAR_OBJ_WALK_TO_CHAR = 0x4C2,
  IS_PICKUP_IN_ZONE = 0x4C3,
  GET_OFFSET_FROM_CHAR_IN_WORLD_COORDS = 0x4C4,
  HAS_CHAR_BEEN_PHOTOGRAPHED = 0x4C5,
  SET_CHAR_OBJ_AIM_GUN_AT_CHAR = 0x4C6,
  SWITCH_SECURITY_CAMERA = 0x4C7,
  IS_CHAR_IN_FLYING_VEHICLE = 0x4C8,
  IS_PLAYER_IN_FLYING_VEHICLE = 0x4C9,
  HAS_SONY_CD_BEEN_READ = 0x4CA,
  GET_NUMBER_OF_SONY_CDS_READ = 0x4CB,
  ADD_SHORT_RANGE_BLIP_FOR_COORD_OLD = 0x4CC,
  ADD_SHORT_RANGE_BLIP_FOR_COORD = 0x4CD,
  ADD_SHORT_RANGE_SPRITE_BLIP_FOR_COORD = 0x4CE,
  ADD_MONEY_SPENT_ON_CLOTHES = 0x4CF,
  SET_HELI_ORIENTATION = 0x4D0,
  CLEAR_HELI_ORIENTATION = 0x4D1,
  PLANE_GOTO_COORDS = 0x4D2,
  GET_NTH_CLOSEST_CAR_NODE = 0x4D3,
  GET_NTH_CLOSEST_CHAR_NODE = 0x4D4,
  DRAW_WEAPONSHOP_CORONA = 0x4D5,
  SET_ENABLE_RC_DETONATE_ON_CONTACT = 0x4D6,
  FREEZE_CHAR_POSITION = 0x4D7,
  SET_CHAR_DROWNS_IN_WATER = 0x4D8,
  SET_OBJECT_RECORDS_COLLISIONS = 0x4D9,
  HAS_OBJECT_COLLIDED_WITH_ANYTHING = 0x4DA,
  REMOVE_RC_BUGGY = 0x4DB,
  HAS_PHOTOGRAPH_BEEN_TAKEN = 0x4DC,
  GET_CHAR_ARMOUR = 0x4DD,
  SET_CHAR_ARMOUR = 0x4DE,
  SET_HELI_STABILISER = 0x4DF,
  SET_CAR_STRAIGHT_LINE_DISTANCE = 0x4E0,
  POP_CAR_BOOT = 0x4E1,
  SHUT_PLAYER_UP = 0x4E2,
  SET_PLAYER_MOOD = 0x4E3,
  REQUEST_COLLISION = 0x4E4,
  LOCATE_OBJECT_2D = 0x4E5,
  LOCATE_OBJECT_3D = 0x4E6,
  IS_OBJECT_IN_WATER = 0x4E7,
  SET_CHAR_OBJ_STEAL_ANY_CAR_EVEN_MISSION_CAR = 0x4E8,
  IS_OBJECT_IN_AREA_2D = 0x4E9,
  IS_OBJECT_IN_AREA_3D = 0x4EA,
  SET_CHAR_CROUCH = 0x4EB,
  SET_ZONE_CIVILIAN_CAR_INFO = 0x4EC,
  REQUEST_ANIMATION = 0x4ED,
  HAS_ANIMATION_LOADED = 0x4EE,
  REMOVE_ANIMATION = 0x4EF,
  IS_CHAR_WAITING_FOR_WORLD_COLLISION = 0x4F0,
  IS_CAR_WAITING_FOR_WORLD_COLLISION = 0x4F1,
  IS_OBJECT_WAITING_FOR_WORLD_COLLISION = 0x4F2,
  SET_CHAR_SHUFFLE_INTO_DRIVERS_SEAT = 0x4F3,
  ATTACH_CHAR_TO_OBJECT = 0x4F4,
  SET_CHAR_AS_PLAYER_FRIEND = 0x4F5,
  DISPLAY_NTH_ONSCREEN_COUNTER = 0x4F6,
  DISPLAY_NTH_ONSCREEN_COUNTER_WITH_STRING = 0x4F7,
  ADD_SET_PIECE = 0x4F8,
  SET_EXTRA_COLOURS = 0x4F9,
  CLEAR_EXTRA_COLOURS = 0x4FA,
  CLOSE_CAR_BOOT = 0x4FB,
  GET_WHEELIE_STATS = 0x4FC,
  DISARM_CHAR = 0x4FD,
  BURST_CAR_TYRE = 0x4FE,
  IS_CHAR_OBJ_NO_OBJ = 0x4FF,
  IS_PLAYER_WEARING = 0x500,
  SET_PLAYER_CAN_DO_DRIVE_BY = 0x501,
  SET_CHAR_OBJ_SPRINT_TO_COORD = 0x502,
  CREATE_SWAT_ROPE = 0x503,
  SET_FIRST_PERSON_CONTROL_CAMERA = 0x504,
  GET_NEAREST_TYRE_TO_POINT = 0x505,
  SET_CAR_MODEL_COMPONENTS = 0x506,
  SWITCH_LIFT_CAMERA = 0x507,
  CLOSE_ALL_CAR_DOORS = 0x508,
  GET_DISTANCE_BETWEEN_COORDS_2D = 0x509,
  GET_DISTANCE_BETWEEN_COORDS_3D = 0x50A,
  POP_CAR_BOOT_USING_PHYSICS = 0x50B,
  SET_FIRST_PERSON_WEAPON_CAMERA = 0x50C,
  IS_CHAR_LEAVING_VEHICLE_TO_DIE = 0x50D,
  SORT_OUT_OBJECT_COLLISION_WITH_CAR = 0x50E,
  GET_MAX_WANTED_LEVEL = 0x50F,
  IS_CHAR_WANDER_PATH_CLEAR = 0x510,
  PRINT_HELP_WITH_NUMBER = 0x511,
  PRINT_HELP_FOREVER = 0x512,
  PRINT_HELP_FOREVER_WITH_NUMBER = 0x513,
  SET_CHAR_CAN_BE_DAMAGED_BY_MEMBERS_OF_GANG = 0x514,
  LOAD_AND_LAUNCH_MISSION_EXCLUSIVE = 0x515,
  IS_MISSION_AUDIO_PLAYING = 0x516,
  CREATE_LOCKED_PROPERTY_PICKUP = 0x517,
  CREATE_FORSALE_PROPERTY_PICKUP = 0x518,
  FREEZE_CAR_POSITION = 0x519,
  HAS_CHAR_BEEN_DAMAGED_BY_CHAR = 0x51A,
  HAS_CHAR_BEEN_DAMAGED_BY_CAR = 0x51B,
  HAS_CAR_BEEN_DAMAGED_BY_CHAR = 0x51C,
  HAS_CAR_BEEN_DAMAGED_BY_CAR = 0x51D,
  GET_RADIO_CHANNEL = 0x51E,
  DISPLAY_TEXT_WITH_3_NUMBERS = 0x51F,
  IS_CAR_DROWNING_IN_WATER = 0x520,
  IS_CHAR_DROWNING_IN_WATER = 0x521,
  DISABLE_CUTSCENE_SHADOWS = 0x522,
  HAS_GLASS_BEEN_SHATTERED_NEARBY = 0x523,
  ATTACH_CUTSCENE_OBJECT_TO_BONE = 0x524,
  ATTACH_CUTSCENE_OBJECT_TO_COMPONENT = 0x525,
  SET_CHAR_STAY_IN_CAR_WHEN_JACKED = 0x526,
  IS_MISSION_AUDIO_LOADING = 0x527,
  ADD_MONEY_SPENT_ON_WEAPONS = 0x528,
  ADD_MONEY_SPENT_ON_PROPERTY = 0x529,
  ADD_MONEY_SPENT_ON_AUTO_PAINTING = 0x52A,
  SET_CHAR_ANSWERING_MOBILE = 0x52B,
  SET_PLAYER_DRUNKENNESS = 0x52C,
  GET_PLAYER_DRUNKENNESS = 0x52D,
  SET_PLAYER_DRUG_LEVEL = 0x52E,
  GET_PLAYER_DRUG_LEVEL = 0x52F,
  ADD_LOAN_SHARK_VISITS = 0x530,
  ADD_STORES_KNOCKED_OFF = 0x531,
  ADD_MOVIE_STUNTS = 0x532,
  ADD_NUMBER_OF_ASSASSINATIONS = 0x533,
  ADD_PIZZAS_DELIVERED = 0x534,
  ADD_GARBAGE_PICKUPS = 0x535,
  ADD_ICE_CREAMS_SOLD = 0x536,
  SET_TOP_SHOOTING_RANGE_SCORE = 0x537,
  ADD_SHOOTING_RANGE_RANK = 0x538,
  ADD_MONEY_SPENT_ON_GAMBLING = 0x539,
  ADD_MONEY_WON_ON_GAMBLING = 0x53A,
  SET_LARGEST_GAMBLING_WIN = 0x53B,
  SET_CHAR_IN_PLAYERS_GROUP_CAN_FIGHT = 0x53C,
  CLEAR_CHAR_WAIT_STATE = 0x53D,
  GET_RANDOM_CAR_OF_TYPE_IN_AREA_NO_SAVE = 0x53E,
  SET_CAN_BURST_CAR_TYRES = 0x53F,
  SET_PLAYER_AUTO_AIM = 0x540,
  FIRE_HUNTER_GUN = 0x541,
  SET_PROPERTY_AS_OWNED = 0x542,
  ADD_BLOOD_RING_KILLS = 0x543,
  SET_LONGEST_TIME_IN_BLOOD_RING = 0x544,
  REMOVE_EVERYTHING_FOR_HUGE_CUTSCENE = 0x545,
  IS_PLAYER_TOUCHING_VEHICLE = 0x546,
  IS_CHAR_TOUCHING_VEHICLE = 0x547,
  CHECK_FOR_PED_MODEL_AROUND_PLAYER = 0x548,
  CLEAR_CHAR_FOLLOW_PATH = 0x549,
  SET_CHAR_CAN_BE_SHOT_IN_VEHICLE = 0x54A,
  ATTACH_CUTSCENE_OBJECT_TO_VEHICLE = 0x54B,
  LOAD_MISSION_TEXT = 0x54C,
  SET_TONIGHTS_EVENT = 0x54D,
  CLEAR_CHAR_LAST_DAMAGE_ENTITY = 0x54E,
  CLEAR_CAR_LAST_DAMAGE_ENTITY = 0x54F,
  FREEZE_OBJECT_POSITION = 0x550,
  SET_PLAYER_HAS_MET_DEBBIE_HARRY = 0x551,
  SET_RIOT_INTENSITY = 0x552,
  IS_CAR_IN_ANGLED_AREA_2D = 0x553,
  IS_CAR_IN_ANGLED_AREA_3D = 0x554,
  REMOVE_WEAPON_FROM_CHAR = 0x555,
  SET_UP_TAXI_SHORTCUT = 0x556,
  CLEAR_TAXI_SHORTCUT = 0x557,
  SET_CHAR_OBJ_GOTO_CAR_ON_FOOT = 0x558,
  GET_CLOSEST_WATER_NODE = 0x559,
  ADD_PORN_LEAFLET_TO_RUBBISH = 0x55A,
  CREATE_CLOTHES_PICKUP = 0x55B,
  CHANGE_BLIP_THRESHOLD = 0x55C,
  MAKE_PLAYER_FIRE_PROOF = 0x55D,
  INCREASE_PLAYER_MAX_HEALTH = 0x55E,
  INCREASE_PLAYER_MAX_ARMOUR = 0x55F,
  CREATE_RANDOM_CHAR_AS_DRIVER = 0x560,
  CREATE_RANDOM_CHAR_AS_PASSENGER = 0x561,
  SET_CHAR_IGNORE_THREATS_BEHIND_OBJECTS = 0x562,
  ENSURE_PLAYER_HAS_DRIVE_BY_WEAPON = 0x563,
  MAKE_HELI_COME_CRASHING_DOWN = 0x564,
  ADD_EXPLOSION_NO_SOUND = 0x565,
  SET_OBJECT_AREA_VISIBLE = 0x566,
  WAS_VEHICLE_EVER_POLICE = 0x567,
  SET_CHAR_NEVER_TARGETTED = 0x568,
  LOAD_UNCOMPRESSED_ANIM = 0x569,
  WAS_CUTSCENE_SKIPPED = 0x56A,
  SET_CHAR_CROUCH_WHEN_THREATENED = 0x56B,
  IS_CHAR_IN_ANY_POLICE_VEHICLE = 0x56C,
  DOES_CHAR_EXIST = 0x56D,
  DOES_VEHICLE_EXIST = 0x56E,
  ADD_SHORT_RANGE_BLIP_FOR_CONTACT_POINT = 0x56F,
  ADD_SHORT_RANGE_SPRITE_BLIP_FOR_CONTACT_POINT = 0x570,
  IS_CHAR_STUCK = 0x571,
  SET_ALL_TAXIS_HAVE_NITRO = 0x572,
  SET_CHAR_STOP_SHOOT_DONT_SEEK_ENTITY = 0x573,
  FREEZE_CAR_POSITION_AND_DONT_LOAD_COLLISION = 0x574,
  FREEZE_CHAR_POSITION_AND_DONT_LOAD_COLLISION = 0x575,
  FREEZE_OBJECT_POSITION_AND_DONT_LOAD_COLLISION = 0x576,
  SET_FADE_AND_JUMPCUT_AFTER_RC_EXPLOSION = 0x577,
  REGISTER_VIGILANTE_LEVEL = 0x578,
  CLEAR_ALL_CHAR_ANIMS = 0x579,
  SET_MAXIMUM_NUMBER_OF_CARS_IN_GARAGE = 0x57A,
  WANTED_STARS_ARE_FLASHING = 0x57B,
  SET_ALLOW_HURRICANES = 0x57C,
  PLAY_ANNOUNCEMENT = 0x57D,
  SET_PLAYER_IS_IN_STADIUM = 0x57E,
  GET_BUS_FARES_COLLECTED_BY_PLAYER = 0x57F,
  SET_CHAR_OBJ_BUY_ICE_CREAM = 0x580,
  DISPLAY_RADAR = 0x581,
  REGISTER_BEST_POSITION = 0x582,
  IS_PLAYER_IN_INFO_ZONE = 0x583,
  CLEAR_CHAR_ICE_CREAM_PURCHASE = 0x584,
  IS_IN_CAR_FIRE_BUTTON_PRESSED = 0x585,
  HAS_CHAR_ATTEMPTED_ATTRACTOR = 0x586,
  SET_LOAD_COLLISION_FOR_CAR_FLAG = 0x587,
  SET_LOAD_COLLISION_FOR_CHAR_FLAG = 0x588,
  SET_LOAD_COLLISION_FOR_OBJECT_FLAG = 0x589,
  ADD_BIG_GUN_FLASH = 0x58A,
  HAS_CHAR_BOUGHT_ICE_CREAM = 0x58B,
  GET_PROGRESS_PERCENTAGE = 0x58C,
  SET_SHORTCUT_PICKUP_POINT = 0x58D,
  SET_SHORTCUT_DROPOFF_POINT_FOR_MISSION = 0x58E,
  GET_RANDOM_ICE_CREAM_CUSTOMER_IN_AREA = 0x58F,
  GET_RANDOM_ICE_CREAM_CUSTOMER_IN_ZONE = 0x590,
  UNLOCK_ALL_CAR_DOORS_IN_AREA = 0x591,
  SET_GANG_ATTACK_PLAYER_WITH_COPS = 0x592,
  SET_CHAR_FRIGHTENED_IN_JACKED_CAR = 0x593,
  SET_VEHICLE_TO_FADE_IN = 0x594,
  REGISTER_ODDJOB_MISSION_PASSED = 0x595,
  IS_PLAYER_IN_SHORTCUT_TAXI = 0x596,
  IS_CHAR_DUCKING = 0x597,
  CREATE_DUST_EFFECT_FOR_CUTSCENE_HELI = 0x598,
  REGISTER_FIRE_LEVEL = 0x599,
  IS_AUSTRALIAN_GAME = 0x59A,
  DISARM_CAR_BOMB = 0x59B,
  SET_ONSCREEN_COUNTER_FLASH_WHEN_FIRST_DISPLAYED = 0x59C,
  SHUFFLE_CARD_DECKS = 0x59D,
  FETCH_NEXT_CARD = 0x59E,
  GET_OBJECT_VELOCITY = 0x59F,
  IS_DEBUG_CAMERA_ON = 0x5A0,
  ADD_TO_OBJECT_ROTATION_VELOCITY = 0x5A1,
  SET_OBJECT_ROTATION_VELOCITY = 0x5A2,
  IS_OBJECT_STATIC = 0x5A3,
  GET_ANGLE_BETWEEN_2D_VECTORS = 0x5A4,
  DO_2D_RECTANGLES_COLLIDE = 0x5A5,
  GET_OBJECT_ROTATION_VELOCITY = 0x5A6,
  ADD_VELOCITY_RELATIVE_TO_OBJECT_VELOCITY = 0x5A7,
  GET_OBJECT_SPEED = 0x5A8,
};

/*  624 */
#pragma pack(push, 1)
struct CTimeCycleCurrent
{
  float m_fAmbientRed;
  float m_fAmbientGreen;
  float m_fAmbientBlue;
  float m_fAmbientRed_Obj;
  float m_fAmbientGreen_Obj;
  float m_fAmbientBlue_Obj;
  int m_fDirectionalRed;
  int m_fDirectionalGreen;
  int m_fDirectionalBlue;
  _WORD m_wSkyTopRed;
  _WORD m_wSkyTopGreen;
  _WORD m_wSkyTopBlue;
  _WORD m_wSkyBottomRed;
  _WORD m_wSkyBottomGreen;
  _WORD m_wSkyBottomBlue;
  _WORD m_wSunCoreRed;
  _WORD m_wSunCoreGreen;
  _WORD m_wSunCoreBlue;
  _WORD m_wSunCoronaRed;
  _WORD m_wSunCoronaGreen;
  _WORD m_wSunCoronaBlue;
  float m_fSunSize;
  float m_fSpriteSize;
  float m_fSpriteBrightness;
  _WORD m_wShadowStrength;
  _WORD m_wLightShadowStrength;
  _WORD m_wPoleShadowStrength;
  _BYTE _padding0[2];
  float m_fFarClip;
  float m_fFogSt;
  float m_fLightOnGround;
  _WORD m_wLowCloudsRed;
  _WORD m_wLowCloudsGreen;
  _WORD m_wLowCloudsBlue;
  _WORD m_wBottomCloudsRed;
  _WORD m_wBottomCloudsGreen;
  _WORD m_wBottomCloudsBlue;
  float m_fWaterRed;
  float m_fWaterGreen;
  float m_fWaterBlue;
  float m_fWaterAlpha;
  float m_fRGB1_R;
  float m_fRGB1_G;
  float m_fRGB1_B;
  float m_fAlpha1;
  float m_fRGB2_R;
  float m_fRGB2_G;
  float m_fRGB2_B;
  float m_fAlpha2;
  float m_fCloudAlpha1;
  _DWORD m_dwCloudAlpha2;
  _WORD m_wCloudAlpha3;
  _BYTE _padding1[2];
  float m_fIllumination;
  float m_fOne;
};
#pragma pack(pop)

/*  625 */
enum eFlareTypes
{
  FLARETYPE_NONE = 0x0,
  FLARETYPE_SUN = 0x1,
  FLARETYPE_HEADLIGHTS = 0x2,
};

/*  626 */
#pragma pack(push, 1)
struct CBone
{
  char m_bFlags;
  char _padding0[3];
  RwV3D m_vOffset;
  RtQuat *m_pQuat;
  int m_dwNodeId;
};
#pragma pack(pop)

/*  627 */
#pragma pack(push, 1)
struct RtAnimAnimation
{
  RtAnimInterpolatorInfo *interpInfo;
  __int32 numFrames;
  __int32 flags;
  float duration;
  void *pFrames;
  void *customData;
};
#pragma pack(pop)

/*  628 */
#pragma pack(push, 1)
struct RtAnimInterpolator
{
  RtAnimAnimation *pCurrentAnim;
  float currentTime;
  void *pNextFrame;
  void *pAnimCallBack;
  void *pAnimCallBackData;
  float animCallBackTime;
  void *pAnimLoopCallBack;
  void *pAnimLoopCallBackData;
  __int32 maxInterpKeyFrameSize;
  __int32 currentInterpKeyFrameSize;
  __int32 currentAnimKeyFrameSize;
  __int32 numNodes;
  bool isSubInterpolator;
  __int32 offsetInParent;
  struct RtAnimInterpolator *parentAnimation;
  void *keyFrameApplyCB;
  void *keyFrameBlendCB;
  void *keyFrameInterpolateCB;
  void *keyFrameAddCB;
};
#pragma pack(pop)

/*  629 */
#pragma pack(push, 1)
struct gtaHAnimIFrame
{
  RtQuat m_qOrient;
  RwV3D m_vOffset;
};
#pragma pack(pop)

/*  630 */
#pragma pack(push, 1)
struct HeliComponents
{
  RwFrame *nullFrame;
  RwFrame *chassis;
  RwFrame *wheel_rf_dummy;
  RwFrame *wheel_rm_dummy;
  RwFrame *wheel_rb_dummy;
  RwFrame *wheel_lf_dummy;
  RwFrame *wheel_lm_dummy;
  RwFrame *wheel_lb_dummy;
  RwFrame *door_rf_dummy;
  RwFrame *door_rr_dummy;
  RwFrame *door_lf_dummy;
  RwFrame *door_lr_dummy;
  RwFrame *static_rotor;
  RwFrame *moving_rotor;
  RwFrame *static_rotor2;
  RwFrame *moving_rotor2;
  RwFrame *rudder;
  RwFrame *elevators;
  RwFrame *msc_a;
  RwFrame *misc_b;
  RwFrame *misc_c;
  RwFrame *misc_d;
};
#pragma pack(pop)

/*  631 */
#pragma pack(push, 1)
union flagsInfo
{
  char flag[2];
  __int16 flags;
};
#pragma pack(pop)

/*  632 */
#pragma pack(push, 1)
struct C2dfxInfoStore
{
  int m_dwCount;
  C2dfxLight m_Objects[100];
};
#pragma pack(pop)

/*  633 */
#pragma pack(push, 1)
struct C2dfx
{
  RwV3D offset;
  int type;
};
#pragma pack(pop)

/*  634 */
#pragma pack(push, 1)
struct C2dfxRoadsign
{
  C2dfx base;
  RwV2D size;
  RwV3D rotation;
  __int16 flags;
  __int16 __pad;
  char *text;
  RpAtomic *object;
};
#pragma pack(pop)

/*  635 */
#pragma pack(push, 1)
struct _2dfxRoadsign_rwStream
{
  RwV2D size;
  RwV3D rotation;
  __int16 flags;
  char text[16][4];
};
#pragma pack(pop)

/*  636 */
#pragma pack(push, 1)
struct C2dfxEscalator
{
  C2dfx base;
  RwV3D bottom;
  RwV3D top;
  RwV3D end;
  char direction;
  char __pad[3];
};
#pragma pack(pop)

/*  637 */
#pragma pack(push, 1)
struct CEscalator
{
  RwV3D start;
  RwV3D bottom;
  RwV3D top;
  RwV3D end;
  CMatrix rotation;
  _BYTE exist;
  char objectsCreated;
  char moveDown;
  char __pad;
  int numIntermediatePlanes;
  _DWORD numBottomPlanes;
  _DWORD numTopPlanes;
  char __unused[8];
  RwSphere bounding;
  float currentPosition;
  CEntity *entity;
  CEntity *objetcs[42];
};
#pragma pack(pop)

/*  639 */
#pragma pack(push, 1)
struct C2dfxParticle
{
  C2dfx base;
  char effectName[24];
};
#pragma pack(pop)

/*  640 */
#pragma pack(push, 1)
struct _2dfxParticle_rwStream
{
  char effectName[24];
};
#pragma pack(pop)

/*  641 */
#pragma pack(push, 1)
struct CEntityParticle
{
  CLink link;
  CParticle *particle;
  CEntity *entity;
};
#pragma pack(pop)

/*  642 */
#pragma pack(push, 1)
struct CLink
{
  void *next;
  void *prev;
};
#pragma pack(pop)

/*  643 */
#pragma pack(push, 1)
struct C2dfxEffect9
{
  C2dfx base;
  RwV2D field_10;
  char field_18;
  char __pad[3];
};
#pragma pack(pop)

/*  644 */
#pragma pack(push, 1)
struct CEffect9
{
  char entityType;
  char field_1;
  char field_2;
  char __pad;
  RwV3D pos;
  CEntity *entity;
  CEntity *entityReference;
  int field_18;
};
#pragma pack(pop)

/*  646 */
#pragma pack(push, 1)
struct CPedAttractors
{
  int field_0[40];
};
#pragma pack(pop)

/*  647 */
#pragma pack(push, 1)
struct CPathFind
{
  CNodeInfo info;
  int field_4[512];
  CPathNode *pNodes[72];
  CNaviNode *pNaviNodes[72];
  CNodeInfo *pLinks[72];
  BYTE *pLinkLengths[72];
  void *pSection7[72];
  WORD *pNaviLinks[72];
  char field_EC4[224];
  int NumNodes[72];
  int NumVehicleNodes[72];
  int NumPedNodes[72];
  int NumNaviNodes[72];
  int NumLinks[72];
  int field_1544[2048];
  int field_3544;
  char char3548[32];
  _DWORD m_dwNumForbiddenAreas;
  CForbiddenArea m_aForbiddenAreas[64];
  _BYTE m_bForbiddenForScriptedCarsEnabled;
  char _padding[3];
  float m_fForbiddenForScrCarsX1;
  float m_fForbiddenForScrCarsX2;
  float m_fForbiddenForScrCarsY1;
  float m_fForbiddenForScrCarsY2;
};
#pragma pack(pop)

/*  648 */
#pragma pack(push, 1)
struct CPathNode
{
  int field_0;
  int field_4;
  __int16 x;
  __int16 y;
  __int16 z;
  __int16 field_E;
  __int16 linkId;
  CNodeInfo info;
  char pathWidth;
  char nodeType;
  char flags1;
  char flags2;
  char flags3;
  char flags4;
};
#pragma pack(pop)

/*  649 */
#pragma pack(push, 1)
struct CForbiddenArea
{
  float x1;
  float x2;
  float y1;
  float y2;
  float z1;
  float z2;
  char bEnable;
  char type;
  char _padding[2];
};
#pragma pack(pop)

/*  650 */
#pragma pack(push, 1)
struct CNaviNode
{
  __int16 x;
  __int16 y;
  CNodeInfo info;
  char dirX;
  char dirY;
  char flags1;
  char flags2;
  char flags3;
  char flags4;
};
#pragma pack(pop)

/*  651 */
#pragma pack(push, 1)
struct CNodeInfo
{
  __int16 areaId;
  __int16 nodeId;
};
#pragma pack(pop)

/*  652 */
#pragma pack(push, 1)
struct CAnimBlendNode
{
  float field_0;
  float field_4;
  _WORD field_8;
  _WORD field_A;
  float field_C;
  _DWORD field_10;
  _DWORD m_pAnimBlendAssociation;
};
#pragma pack(pop)

/*  653 */
enum eMenuPage
{
  MENUPAGE_MAP = 0x5,
};

/*  654 */
#pragma pack(push, 1)
struct CEnEx
{
  char m_acInteriorName[8];
  CRect m_rEnterRect;
  float m_fEnterZ;
  float m_fEnterAngle;
  CVector m_vExitPos;
  float m_fExitAngle;
  WORD m_wFlags;
  _BYTE m_bInteriorId;
  _BYTE m_bSkyColor;
  _BYTE m_bTimeOn;
  _BYTE m_bTimeOff;
  _BYTE byte36;
  _BYTE _padding[1];
  CEnEx *m_pAttachedEnex;
};
#pragma pack(pop)

/*  655 */
#pragma pack(push, 1)
struct CShotInfo
{
  int m_dwWeaponType;
  CVector m_vStart;
  CVector m_vOffset;
  float m_fRange;
  int m_pCreator;
  float m_dwDestroyTime;
  char m_bExist;
  char m_bExecuted;
  char _padding[2];
};
#pragma pack(pop)

/*  656 */
#pragma pack(push, 1)
struct GeometryMeshExt
{
  unsigned int m_uiPosRule;
  unsigned __int16 m_usNumVertices;
  __int16 _pad0;
  RwV3D *m_pVertexPos;
  RwTexCoords *m_pTexCoors;
  RwRGBA *m_pVertexColors;
  _WORD m_usNumTriangles;
  __int16 _pad1;
  RpTriangle *m_pTriangles;
  unsigned __int16 *m_pMaterialAssignments;
  unsigned __int16 m_usNumMaterials;
  __int16 _pad2;
  RwTexture **m_pTextures;
  char *m_pTextureNames;
  char *m_pMaskNames;
  RwSurfaceProperties *m_pMaterialProperties;
};
#pragma pack(pop)

/*  657 */
#pragma pack(push, 1)
struct GeometryStream_MorphTargetInfo
{
  RwV3D center;
  float radius;
  int hasPositions;
  int hasNormals;
};
#pragma pack(pop)

/*  658 */
enum eBlipType
{
  BLIP_CAR = 1,
  BLIP_CHAR = 2,
  BLIP_OBJECT = 3,
  BLIP_COORD = 4,
  BLIP_CONTACT_POINT = 5,
};

/*  660 */
enum eBlipDisplay
{
  eBlipDisplay_0 = 0,
};

/*  661 */
#pragma pack(push, 1)
struct IDirect3DBaseTexture9
{
  IDirect3DTexture9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  662 */
#pragma pack(push, 1)
struct IDirect3DTexture9
{
  IDirect3DTexture9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  663 */

/*  664 */
#pragma pack(push, 1)
struct TextureNativeStream
{
  int platformId;
  __int16 filterFlags;
  char wrapU;
  char wrapV;
  char name[32];
  char maskName[32];
};
#pragma pack(pop)

/*  665 */
#pragma pack(push, 1)
struct TextureRasterNativeStream
{
  int rasterFormat;
  int d3d9Format;
  unsigned __int16 width;
  unsigned __int16 height;
  unsigned __int8 stride;
  char mipMapCount;
  unsigned __int8 rasterType;
  char creationFlags;
};
#pragma pack(pop)

/*  666 */
#pragma pack(push, 1)
struct IDirect3DSwapChain9
{
  IDirect3DSwapChain9Vtbl *lpVtbl;
};
#pragma pack(pop)

/*  667 */
#pragma pack(push, 1)
struct RpUVAnimMaterial
{
  RwMatrix *matrices[2];
  RtAnimInterpolator *interpolators[8];
};
#pragma pack(pop)

/*  668 */
#pragma pack(push, 1)
struct SFXMaterial
{
  SFXEnvMapMaterial sEffect[2];
  int dwFlags;
};
#pragma pack(pop)

/*  669 */
#pragma pack(push, 1)
struct SFXEnvMapMaterial
{
  RwFrame *pFrame;
  int pTexture;
  float fCoefficient;
  int dwFrameBufferAlpha;
  int fSize;
  int nEffectType;
};
#pragma pack(pop)

/*  670 */
enum RpMatFXMaterialFlags
{
  rpMATFXEFFECTNULL = 0,
  rpMATFXEFFECTBUMPMAP = 1,
  rpMATFXEFFECTENVMAP = 2,
  rpMATFXEFFECTBUMPENVMAP = 3,
  rpMATFXEFFECTDUAL = 4,
  rpMATFXEFFECTUVTRANSFORM = 5,
  rpMATFXEFFECTDUALUVTRANSFORM = 6,
};

/*  671 */
#pragma pack(push, 1)
struct TextureInfoStream
{
  char textureFilterMode;
  char uvAddressing;
  char hasMipMaps;
  char __pad;
};
#pragma pack(pop)

/*  672 */
#pragma pack(push, 1)
struct RpSkin
{
  int numBones;
  _DWORD numBoneIds;
  char *boneIds;
  RwMatrix *skinToBoneMatrices;
  int maxNumWeightsForVertex;
  unsigned int *vertexBoneIndices;
  RwMatrixWeights *vertexBoneWeights;
  int field_1C;
  int field_20;
  unsigned int boneLimit;
  unsigned int numMeshes;
  unsigned int numRLE;
  void *meshBoneRemapIndices;
  int meshBoneRLECount;
  int meshBoneRLE;
  void *field_3C;
};
#pragma pack(pop)

/*  673 */
#pragma pack(push, 1)
struct RwMatrixWeights
{
  float w0;
  float w1;
  float w2;
  float w3;
};
#pragma pack(pop)

/*  674 */
#pragma pack(push, 1)
struct RpSkinHeader
{
  char numBones;
  char numBoneIds;
  __int16 maxNumWeightsPerVertex;
};
#pragma pack(pop)

/*  675 */
#pragma pack(push, 1)
struct GeometryMeshExtStream
{
  int Always1;
  unsigned __int16 VertexCount;
  __int16 _pad1;
  int pVertices;
  int pTexCoors;
  int pVertexColors;
  unsigned __int16 FaceCount;
  __int16 _pad2;
  int pTriangles;
  int pMaterialAssignments;
  unsigned __int16 MaterialCount;
  __int16 _pad3;
  int pTextures;
  int pTextureNames;
  int pMaskNames;
  int pMaterialProperties;
};
#pragma pack(pop)

/*  676 */
#pragma pack(push, 1)
struct struct_v7_1
{
  _BYTE m_bJustFaces;
  _BYTE byte1;
  _BYTE m_dwSparksOnImpact;
  _BYTE byte3;
  int numObjects;
  int field_8;
  _DWORD dwordC;
  _DWORD pointZ;
  RwV3D normal;
};
#pragma pack(pop)

/*  677 */
enum eAudioEvents
{
  AE_FRONTEND_START = 0x0,
  AE_FRONTEND_SELECT = 0x1,
  AE_FRONTEND_BACK = 0x2,
  AE_FRONTEND_HIGHLIGHT = 0x3,
  AE_FRONTEND_ERROR = 0x4,
  AE_FRONTEND_NOISE_TEST = 0x5,
  AE_FRONTEND_PICKUP_WEAPON = 0x6,
  AE_FRONTEND_PICKUP_MONEY = 0x7,
  AE_FRONTEND_PICKUP_HEALTH = 0x8,
  AE_FRONTEND_PICKUP_ADRENALINE = 0x9,
  AE_FRONTEND_PICKUP_BODY_ARMOUR = 0xA,
  AE_FRONTEND_PICKUP_INFO = 0xB,
  AE_FRONTEND_PICKUP_DRUGS = 0xC,
  AE_FRONTEND_PICKUP_COLLECTABLE1 = 0xD,
  AE_FRONTEND_CAR_NO_CASH = 0xE,
  AE_FRONTEND_CAR_IS_HOT = 0xF,
  AE_FRONTEND_CAR_RESPRAY = 0x10,
  AE_FRONTEND_CAR_ALREADY_RIGGED = 0x11,
  AE_FRONTEND_CAR_FIT_BOMB_TIMED = 0x12,
  AE_FRONTEND_CAR_FIT_BOMB_BOOBY_TRAPPED = 0x13,
  AE_FRONTEND_CAR_FIT_BOMB_REMOTE_CONTROLLED = 0x14,
  AE_FRONTEND_FRENZY_STARTED = 0x15,
  AE_FRONTEND_FRENZY_ONGOING = 0x16,
  AE_FRONTEND_FRENZY_PASSED = 0x17,
  AE_FRONTEND_FRENZY_FAILED = 0x18,
  AE_FRONTEND_FRENZY_REGISTER_KILL_PED = 0x19,
  AE_FRONTEND_FRENZY_REGISTER_KILL_CAR = 0x1A,
  AE_FRONTEND_BULLET_PASS_LEFT_REAR = 0x1B,
  AE_FRONTEND_BULLET_PASS_LEFT_FRONT = 0x1C,
  AE_FRONTEND_BULLET_PASS_RIGHT_REAR = 0x1D,
  AE_FRONTEND_BULLET_PASS_RIGHT_FRONT = 0x1E,
  AE_FRONTEND_WAKEUP_AMPLIFIER = 0x1F,
  AE_FRONTEND_DISPLAY_INFO = 0x20,
  AE_FRONTEND_TIMER_COUNT = 0x21,
  AE_FRONTEND_RADIO_RETUNE_START = 0x22,
  AE_FRONTEND_RADIO_RETUNE_STOP = 0x23,
  AE_FRONTEND_RADIO_RETUNE_STOP_PAUSED = 0x24,
  AE_FRONTEND_RADIO_CLICK_ON = 0x25,
  AE_FRONTEND_RADIO_CLICK_OFF = 0x26,
  AE_FRONTEND_PAGER = 0x27,
  AE_FRONTEND_PURCHASE_WEAPON = 0x28,
  AE_FRONTEND_FIRE_FAIL_SNIPERRIFFLE = 0x29,
  AE_FRONTEND_FIRE_FAIL_ROCKET = 0x2A,
  AE_FRONTEND_PART_MISSION_COMPLETE = 0x2B,
  AE_FRONTEND_RACE_321 = 0x2C,
  AE_FRONTEND_RACE_GO = 0x2D,
  AE_FRONTEND_BUY_CAR_MOD = 0x2E,
  AE_FRONTEND_SCANNER_NOISE_START = 0x2F,
  AE_FRONTEND_SCANNER_NOISE_STOP = 0x30,
  AE_FRONTEND_SCANNER_CLICK = 0x31,
  AE_FRONTEND_LOADING_TUNE_START = 0x32,
  AE_FRONTEND_LOADING_TUNE_STOP = 0x33,
  AE_SPEECH_PED = 0x34,
  AE_SCRIPT_SPEECH_PED = 0x35,
  AE_PED_FOOTSTEP_LEFT = 0x36,
  AE_PED_FOOTSTEP_RIGHT = 0x37,
  AE_PED_SKATE_LEFT = 0x38,
  AE_PED_SKATE_RIGHT = 0x39,
  AE_PED_LAND_ON_FEET_AFTER_FALL = 0x3A,
  AE_PED_COLLAPSE_AFTER_FALL = 0x3B,
  AE_PED_SWING = 0x3C,
  AE_PED_HIT_HIGH = 0x3D,
  AE_PED_HIT_LOW = 0x3E,
  AE_PED_HIT_GROUND = 0x3F,
  AE_PED_HIT_GROUND_KICK = 0x40,
  AE_PED_HIT_HIGH_UNARMED = 0x41,
  AE_PED_HIT_LOW_UNARMED = 0x42,
  AE_PED_HIT_MARTIAL_PUNCH = 0x43,
  AE_PED_HIT_MARTIAL_KICK = 0x44,
  AE_PED_JACKED_CAR_PUNCH = 0x45,
  AE_PED_JACKED_CAR_HEAD_BANG = 0x46,
  AE_PED_JACKED_CAR_KICK = 0x47,
  AE_PED_JACKED_BIKE = 0x48,
  AE_PED_JACKED_DOZER = 0x49,
  AE_PED_SWIM_STROKE_SPLASH = 0x4A,
  AE_PED_SWIM_DIVE_SPLASH = 0x4B,
  AE_PED_SWIM_WAKE = 0x4C,
  AE_GENERAL_VEHICLE_SOUND = 0x4D,
  AE_CAR_BONNET_OPEN = 0x4E,
  AE_CAR_BOOT_OPEN = 0x4F,
  AE_CAR_FRONT_LEFT_DOOR_OPEN = 0x50,
  AE_CAR_FRONT_RIGHT_DOOR_OPEN = 0x51,
  AE_CAR_REAR_LEFT_DOOR_OPEN = 0x52,
  AE_CAR_REAR_RIGHT_DOOR_OPEN = 0x53,
  AE_CAR_BONNET_CLOSE = 0x54,
  AE_CAR_BOOT_CLOSE = 0x55,
  AE_CAR_FRONT_LEFT_DOOR_CLOSE = 0x56,
  AE_CAR_FRONT_RIGHT_DOOR_CLOSE = 0x57,
  AE_CAR_REAR_LEFT_DOOR_CLOSE = 0x58,
  AE_CAR_REAR_RIGHT_DOOR_CLOSE = 0x59,
  AE_TYRE_BURST = 0x5A,
  AE_WINDSCREEN_SHATTER = 0x5B,
  AE_LIGHT_SMASH = 0x5C,
  AE_BONNET_FLUBBER_FLUBBER = 0x5D,
  AE_HELI_BLADE = 0x5E,
  AE_CAR_HORN = 0x5F,
  AE_BIKE_BELL = 0x60,
  AE_SIREN = 0x61,
  AE_FOG_HORN = 0x62,
  AE_BOAT_HIT_WAVE = 0x63,
  AE_TRAIN_CLACK = 0x64,
  AE_MISSILE_LOCK = 0x65,
  AE_NITRO_IGNITION = 0x66,
  AE_START_ENGINE = 0x67,
  AE_CRANE_WINCH_MOVE = 0x68,
  AE_SHIRT_FLAP = 0x69,
  AE_WIND_RUSH = 0x6A,
  AE_SUSPENSION_HYDRAULIC = 0x6B,
  AE_SUSPENSION_BOUNCE = 0x6C,
  AE_SUSPENSION_TRIGGER = 0x6D,
  AE_SUSPENSION_ON = 0x6E,
  AE_SUSPENSION_OFF = 0x6F,
  AE_LANDING_GEAR = 0x70,
  AE_TRAILER_ATTACH = 0x71,
  AE_TRAILER_DETACH = 0x72,
  AE_BODY_HARVEST = 0x73,
  AE_GENERAL_COLLISION = 0x74,
  AE_BULLET_HIT = 0x75,
  AE_WATER_SPLASH = 0x76,
  AE_PED_CRUNCH = 0x77,
  AE_PED_DRIVE_OVER = 0x78,
  AE_PED_KNOCK_DOWN = 0x79,
  AE_PED_BOUNCE = 0x7A,
  AE_GLASS_HIT = 0x7B,
  AE_GLASS_CRACK = 0x7C,
  AE_GLASS_BREAK_SLOW = 0x7D,
  AE_GLASS_BREAK_FAST = 0x7E,
  AE_GLASS_HIT_GROUND = 0x7F,
  AE_GLASS_HIT_GROUND_SLOW = 0x80,
  AE_EXPLOSION = 0x81,
  AE_FIRE = 0x82,
  AE_FIRE_MEDIUM = 0x83,
  AE_FIRE_LARGE = 0x84,
  AE_FIRE_CAR = 0x85,
  AE_FIRE_BIKE = 0x86,
  AE_FIRE_FLAME = 0x87,
  AE_FIRE_MOLOTOV_FLAME = 0x88,
  AE_FIRE_HYDRANT = 0x89,
  AE_SMOKE_FLARE = 0x8A,
  AE_TEARGAS = 0x8B,
  AE_HELI_DUST = 0x8C,
  AE_THUNDER = 0x8D,
  AE_RAIN_COLLISION = 0x8E,
  AE_RAIN = 0x8F,
  AE_CITY_NOISE = 0x90,
  AE_WEAPON_FIRE = 0x91,
  AE_WEAPON_RELOAD_A = 0x92,
  AE_WEAPON_RELOAD_B = 0x93,
  AE_PROJECTILE_FIRE = 0x94,
  AE_WEAPON_FIRE_PLANE = 0x95,
  AE_WEAPON_FIRE_MINIGUN_AMMO = 0x96,
  AE_WEAPON_FIRE_MINIGUN_NO_AMMO = 0x97,
  AE_WEAPON_FIRE_MINIGUN_PLANE = 0x98,
  AE_WEAPON_CHAINSAW_IDLE = 0x99,
  AE_WEAPON_CHAINSAW_ACTIVE = 0x9A,
  AE_WEAPON_CHAINSAW_CUTTING = 0x9B,
  AE_WEAPON_STEALTH_KILL = 0x9C,
  AE_WEAPON_FIRE_MINIGUN_STOP = 0x9D,
  AE_FLAMETHROWER_IDLE = 0x9E,
  AE_GARAGE_DOOR_OPENING = 0x9F,
  AE_GARAGE_DOOR_OPENED = 0xA0,
  AE_GARAGE_DOOR_CLOSING = 0xA1,
  AE_GARAGE_DOOR_CLOSED = 0xA2,
  AE_ENTRY_EXIT_DOOR_MOVING = 0xA3,
  AE_CRIME_COMMITTED = 0xA4,
  AE_DISABLE_HELI_AUDIO = 0xA5,
  AE_ENABLE_HELI_AUDIO = 0xA6,
  AE_CEILING_VENT_LAND = 0xA7,
  AE_WAREHOUSE_DOOR_SLIDE_START = 0xA8,
  AE_WAREHOUSE_DOOR_SLIDE_STOP = 0xA9,
  AE_CLAXON_START = 0xAA,
  AE_CLAXON_STOP = 0xAB,
  AE_BLAST_DOOR_SLIDE_START = 0xAC,
  AE_BLAST_DOOR_SLIDE_STOP = 0xAD,
  AE_BONNET_DENT = 0xAE,
  AE_BASKETBALL_BOUNCE = 0xAF,
  AE_BASKETBALL_HIT_HOOP = 0xB0,
  AE_BASKETBALL_SCORE = 0xB1,
  AE_POOL_BREAK = 0xB2,
  AE_POOL_HIT_WHITE = 0xB3,
  AE_POOL_BALL_HIT_BALL = 0xB4,
  AE_POOL_HIT_CUSHION = 0xB5,
  AE_POOL_BALL_POT = 0xB6,
  AE_POOL_CHALK_CUE = 0xB7,
  AE_CRANE_ENTER = 0xB8,
  AE_CRANE_MOVE_START = 0xB9,
  AE_CRANE_MOVE_STOP = 0xBA,
  AE_CRANE_EXIT = 0xBB,
  AE_CRANE_SMASH_PORTACABIN = 0xBC,
  AE_CONTAINER_COLLISION = 0xBD,
  AE_VIDEO_POKER_PAYOUT = 0xBE,
  AE_VIDEO_POKER_BUTTON = 0xBF,
  AE_WHEEL_OF_FORTUNE_CLACKER = 0xC0,
  AE_KEYPAD_BEEP = 0xC1,
  AE_KEYPAD_PASS = 0xC2,
  AE_KEYPAD_FAIL = 0xC3,
  AE_SHOOTING_RANGE_TARGET_SHATTER = 0xC4,
  AE_SHOOTING_RANGE_TARGET_DROP = 0xC5,
  AE_SHOOTING_RANGE_TARGET_MOVE_START = 0xC6,
  AE_SHOOTING_RANGE_TARGET_MOVE_STOP = 0xC7,
  AE_SHUTTER_DOOR_START = 0xC8,
  AE_SHUTTER_DOOR_STOP = 0xC9,
  AE_FREEFALL_START = 0xCA,
  AE_FREEFALL_STOP = 0xCB,
  AE_PARACHUTE_OPEN = 0xCC,
  AE_PARACHUTE_COLLAPSE = 0xCD,
  AE_DUAL_SHOOT = 0xCE,
  AE_DUAL_THRUST = 0xCF,
  AE_DUAL_EXPLOSION_SHORT = 0xD0,
  AE_DUAL_EXPLOSION_LONG = 0xD1,
  AE_DUAL_MENU_SELECT = 0xD2,
  AE_DUAL_MENU_DESELECT = 0xD3,
  AE_DUAL_GAME_OVER = 0xD4,
  AE_DUAL_PICKUP_LIGHT = 0xD5,
  AE_DUAL_PICKUP_DARK = 0xD6,
  AE_DUAL_TOUCH_DARK = 0xD7,
  AE_DUAL_TOUCH_LIGHT = 0xD8,
  AE_AMMUNATION_BUY_WEAPON = 0xD9,
  AE_AMMUNATION_BUY_WEAPON_DENIED = 0xDA,
  AE_SHOP_BUY = 0xDB,
  AE_SHOP_BUY_DENIED = 0xDC,
  AE_RACE_321 = 0xDD,
  AE_RACE_GO = 0xDE,
  AE_PART_MISSION_COMPLETE = 0xDF,
  AE_GOGO_PLAYER_FIRE = 0xE0,
  AE_GOGO_ENEMY_FIRE = 0xE1,
  AE_GOGO_EXPLOSION = 0xE2,
  AE_GOGO_TRACK_START = 0xE3,
  AE_GOGO_TRACK_STOP = 0xE4,
  AE_GOGO_SELECT = 0xE5,
  AE_GOGO_ACCEPT = 0xE6,
  AE_GOGO_DECLINE = 0xE7,
  AE_GOGO_GAME_OVER = 0xE8,
  AE_DUAL_TRACK_START = 0xE9,
  AE_DUAL_TRACK_STOP = 0xEA,
  AE_BEE_ZAP = 0xEB,
  AE_BEE_PICKUP = 0xEC,
  AE_BEE_DROP = 0xED,
  AE_BEE_SELECT = 0xEE,
  AE_BEE_ACCEPT = 0xEF,
  AE_BEE_DECLINE = 0xF0,
  AE_BEE_TRACK_START = 0xF1,
  AE_BEE_TRACK_STOP = 0xF2,
  AE_BEE_GAME_OVER = 0xF3,
  AE_FREEZER_OPEN = 0xF4,
  AE_FREEZER_CLOSE = 0xF5,
  AE_MEAT_TRACK_START = 0xF6,
  AE_MEAT_TRACK_STOP = 0xF7,
  AE_ROULETTE_ADD_CASH = 0xF8,
  AE_ROULETTE_REMOVE_CASH = 0xF9,
  AE_ROULETTE_NO_CASH = 0xFA,
  AE_ROULETTE_SPIN = 0xFB,
  AE_BANDIT_INSERT_COIN = 0xFC,
  AE_BANDIT_WHEEL_STOP = 0xFD,
  AE_BANDIT_WHEEL_START = 0xFE,
  AE_BANDIT_PAYOUT = 0xFF,
  AE_OFFICE_FIRE_ALARM_START = 0x100,
  AE_OFFICE_FIRE_ALARM_STOP = 0x101,
  AE_OFFICE_FIRE_COUGHING_START = 0x102,
  AE_OFFICE_FIRE_COUGHING_STOP = 0x103,
  AE_BIKE_PACKER_CLUNK = 0x104,
  AE_BIKE_GANG_WHEEL_SPIN = 0x105,
  AE_AWARD_TRACK_START = 0x106,
  AE_AWARD_TRACK_STOP = 0x107,
  AE_MOLOTOV = 0x108,
  AE_MESH_GATE_OPEN_START = 0x109,
  AE_MESH_GATE_OPEN_STOP = 0x10A,
  AE_OGLOC_DOORBELL = 0x10B,
  AE_OGLOC_WINDOW_RATTLE_BANG = 0x10C,
  AE_STINGER_RELOAD = 0x10D,
  AE_HEAVY_DOOR_START = 0x10E,
  AE_HEAVY_DOOR_STOP = 0x10F,
  AE_SHOOT_CONTROLS = 0x110,
  AE_CARGO_PLANE_DOOR_START = 0x111,
  AE_CARGO_PLANE_DOOR_STOP = 0x112,
  AE_DA_NANG_CONTAINER_OPEN = 0x113,
  AE_DA_NANG_HEAVY_DOOR_OPEN = 0x114,
  AE_DA_NANG_MUFFLED_REFUGEES = 0x115,
  AE_GYM_BIKE_START = 0x116,
  AE_GYM_BIKE_STOP = 0x117,
  AE_GYM_BOXING_BELL = 0x118,
  AE_GYM_INCREASE_DIFFICULTY = 0x119,
  AE_GYM_REST_WEIGHTS = 0x11A,
  AE_GYM_RUNNING_MACHINE_START = 0x11B,
  AE_GYM_RUNNING_MACHINE_STOP = 0x11C,
  AE_OTB_BET_ZERO = 0x11D,
  AE_OTB_INCREASE_BET = 0x11E,
  AE_OTB_LOSE = 0x11F,
  AE_OTB_PLACE_BET = 0x120,
  AE_OTB_WIN = 0x121,
  AE_STINGER_FIRE = 0x122,
  AE_HEAVY_GATE_START = 0x123,
  AE_HEAVY_GATE_STOP = 0x124,
  AE_VERTICAL_BIRD_LIFT_START = 0x125,
  AE_VERTICAL_BIRD_LIFT_STOP = 0x126,
  AE_PUNCH_PED = 0x127,
  AE_AMMUNATION_GUN_COLLISION = 0x128,
  AE_CAMERA_SHOT = 0x129,
  AE_BUY_CAR_MOD = 0x12A,
  AE_BUY_CAR_RESPRAY = 0x12B,
  AE_BASEBALL_BAT_HIT_PED = 0x12C,
  AE_STAMP_PED = 0x12D,
  AE_CHECKPOINT_AMBER = 0x12E,
  AE_CHECKPOINT_GREEN = 0x12F,
  AE_CHECKPOINT_RED = 0x130,
  AE_CAR_SMASH_CAR = 0x131,
  AE_CAR_SMASH_GATE = 0x132,
  AE_OTB_TRACK_START = 0x133,
  AE_OTB_TRACK_STOP = 0x134,
  AE_PED_HIT_WATER_SPLASH = 0x135,
  AE_RESTAURANT_TRAY_COLLISION = 0x136,
  AE_PICKUP_CRATE = 0x137,
  AE_SWEETS_HORN = 0x138,
  AE_MAGNET_VEHICLE_COLLISION = 0x139,
  AE_PROPERTY_PURCHASED = 0x13A,
  AE_PICKUP_STANDARD = 0x13B,
  AE_MECHANIC_SLIDE_OUT = 0x13C,
  AE_MECHANIC_ATTACH_CAR_BOMB = 0x13D,
  AE_GARAGE_DOOR_START = 0x13E,
  AE_GARAGE_DOOR_STOP = 0x13F,
  AE_CAT2_SECURITY_ALARM = 0x140,
  AE_CAT2_WOODEN_DOOR_BREACH = 0x141,
  AE_MINITANK_FIRE = 0x142,
  AE_OTB_NO_CASH = 0x143,
  AE_EXPLOSION_2 = 0x144,
  AE_ROULETTE_BALL_BOUNCING = 0x145,
  AE_VERTICAL_BIRD_ALARM_START = 0x146,
  AE_VERTICAL_BIRD_ALARM_STOP = 0x147,
  AE_PED_COLLAPSE = 0x148,
  AE_AIR_HORN = 0x149,
  AE_SHUTTER_DOOR_SLOW_START = 0x14A,
  AE_SHUTTER_DOOR_SLOW_STOP = 0x14B,
  AE_BEE_BUZZ = 0x14C,
  AE_RESTAURANT_CJ_EAT = 0x14D,
  AE_RESTAURANT_CJ_PUKE = 0x14E,
  AE_TEMPEST_PLAYER_SHOOT = 0x14F,
  AE_TEMPEST_ENEMY_SHOOT = 0x150,
  AE_TEMPEST_EXPLOSION = 0x151,
  AE_TEMPEST_PICKUP1 = 0x152,
  AE_TEMPEST_PICKUP2 = 0x153,
  AE_TEMPEST_PICKUP3 = 0x154,
  AE_TEMPEST_WARP = 0x155,
  AE_TEMPEST_SHIELD_GLOW = 0x156,
  AE_TEMPEST_GAME_OVER = 0x157,
  AE_TEMPEST_HIGHLIGHT = 0x158,
  AE_TEMPEST_SELECT = 0x159,
  AE_TEMPEST_TRACK_START = 0x15A,
  AE_TEMPEST_TRACK_STOP = 0x15B,
  AE_DRIVING_AWARD_TRACK_START = 0x15C,
  AE_DRIVING_AWARD_TRACK_STOP = 0x15D,
  AE_BIKE_AWARD_TRACK_START = 0x15E,
  AE_BIKE_AWARD_TRACK_STOP = 0x15F,
  AE_PILOT_AWARD_TRACK_START = 0x160,
  AE_PILOT_AWARD_TRACK_STOP = 0x161,
  AE_PED_DEATH_CRUNCH = 0x162,
  AE_SPANK = 0x163,
  AE_BANK_VIDEO_POKER = 0x164,
  AE_BANK_SHOOTING_RANGE = 0x165,
  AE_BANK_POOL = 0x166,
  AE_BANK_PARACHUTE = 0x167,
  AE_BANK_KEYPAD = 0x168,
  AE_BANK_WAREHOUSE_DOOR = 0x169,
  AE_BANK_GOGO = 0x16A,
  AE_BANK_DUAL = 0x16B,
  AE_BANK_CRANE = 0x16C,
  AE_BANK_BLACK_PROJECT = 0x16D,
  AE_BANK_BEE = 0x16E,
  AE_BANK_BASKETBALL = 0x16F,
  AE_BANK_MEAT_BUSINESS = 0x170,
  AE_BANK_ROULETTE = 0x171,
  AE_BANK_BANDIT = 0x172,
  AE_BANK_OFFICE_FIRE = 0x173,
  AE_BANK_MESH_GATE = 0x174,
  AE_BANK_OGLOC = 0x175,
  AE_BANK_CARGO_PLANE = 0x176,
  AE_BANK_DA_NANG = 0x177,
  AE_BANK_GYM = 0x178,
  AE_BANK_OTB = 0x179,
  AE_BANK_STINGER = 0x17A,
  AE_BANK_UNCLE_SAM = 0x17B,
  AE_BANK_VERTICAL_BIRD = 0x17C,
  AE_BANK_MECHANIC = 0x17D,
  AE_BANK_CAT2_BANK = 0x17E,
  AE_BANK_AIR_HORN = 0x17F,
  AE_BANK_RESTAURANT = 0x180,
  AE_BANK_TEMPEST = 0x181,
  AE_ALDEAMALVADA = 0x182,
  AE_ANGELPINE = 0x183,
  AE_ARCODELOESTE = 0x184,
  AE_AVISPACOUNTRYCLUB = 0x185,
  AE_BACKOBEYOND = 0x186,
  AE_BATTERYPOINT = 0x187,
  AE_BAYSIDE = 0x188,
  AE_BAYSIDEMARINA = 0x189,
  AE_BAYSIDETUNNEL = 0x18A,
  AE_BEACONHILL = 0x18B,
  AE_BLACKFIELD = 0x18C,
  AE_BLACKFIELDCHAPEL = 0x18D,
  AE_BLACKFIELDINTERSECTION = 0x18E,
  AE_BLUBERRYACRES = 0x18F,
  AE_BLUEBERRY = 0x190,
  AE_BONECOUNTY = 0x191,
  AE_CALIGULASPALACE = 0x192,
  AE_CALTONHEIGHTS = 0x193,
  AE_CHINATOWN = 0x194,
  AE_CITYHALL = 0x195,
  AE_COME_A_LOT = 0x196,
  AE_COMMERCE = 0x197,
  AE_CONFERENCECENTRE = 0x198,
  AE_CRANBERRYSTATION = 0x199,
  AE_DILLIMORE = 0x19A,
  AE_DOHERTY = 0x19B,
  AE_DOWNTOWN = 0x19C,
  AE_DOWNTOWNLOSSANTOS = 0x19D,
  AE_EASRLOSSANTOS = 0x19E,
  AE_EASTBEACH = 0x19F,
  AE_EASTERBASIN = 0x1A0,
  AE_EASTERBAYAIRPORT = 0x1A1,
  AE_EASTERBAYBLUFFSCHEMICALPLANT = 0x1A2,
  AE_EASTERTUNNEL = 0x1A3,
  AE_ELCASTILLODELDIABLO = 0x1A4,
  AE_ELCORONA = 0x1A5,
  AE_ELQUEBRADOS = 0x1A6,
  AE_ESPLANADEEAST = 0x1A7,
  AE_ESPLANADENORTH = 0x1A8,
  AE_FALLENTREE = 0x1A9,
  AE_FALLOWBRIDGE = 0x1AA,
  AE_FERNRIDGE = 0x1AB,
  AE_FINANCIAL = 0x1AC,
  AE_FISHERSLAGOON = 0x1AD,
  AE_FLINTCOUNTY = 0x1AE,
  AE_FLINTINTERSECTION = 0x1AF,
  AE_FLINTRANGE = 0x1B0,
  AE_FLINTWATER = 0x1B1,
  AE_FORTCARSON = 0x1B2,
  AE_FOSTERVALLEY = 0x1B3,
  AE_FREDERICKBRIDGE = 0x1B4,
  AE_GANTON = 0x1B5,
  AE_GANTRBRIDGE = 0x1B6,
  AE_GARCIA = 0x1B7,
  AE_GARVERBRIDGE = 0x1B8,
  AE_GLENPARK = 0x1B9,
  AE_GREENGLASSCOLLEGE = 0x1BA,
  AE_GREENPALMS = 0x1BB,
  AE_HAMPTONBARNS = 0x1BC,
  AE_HANKYPANKYPOINT = 0x1BD,
  AE_HARRYGOLDPARKWAY = 0x1BE,
  AE_HASHBERRY = 0x1BF,
  AE_HILLTOPFARM = 0x1C0,
  AE_HUNTERQUARRY = 0x1C1,
  AE_IDLEWOOD = 0x1C2,
  AE_JULIUSTHRUWAYEAST = 0x1C3,
  AE_JULIUSTHRUWAYNORTH = 0x1C4,
  AE_JULIUSTHRUWAYSOUTH = 0x1C5,
  AE_JULIUSTHRUWAYWEST = 0x1C6,
  AE_JUNIPERHILL = 0x1C7,
  AE_JUNIPERHOLLOW = 0x1C8,
  AE_KACCMILITARYFUELS = 0x1C9,
  AE_KINCAIDBRIDEG = 0x1CA,
  AE_KINGS = 0x1CB,
  AE_LASBARRANCAS = 0x1CC,
  AE_LASBRUJAS = 0x1CD,
  AE_LASPAYASADAS = 0x1CE,
  AE_LASTDIMEMOTEL = 0x1CF,
  AE_LASVENTURAS = 0x1D0,
  AE_LEAFYHOLLOW = 0x1D1,
  AE_LILPROBEINN = 0x1D2,
  AE_LINDENSIDE = 0x1D3,
  AE_LINDENSTATION = 0x1D4,
  AE_LITTLEMEXICO = 0x1D5,
  AE_LOSCOLINAS = 0x1D6,
  AE_LOSFLORES = 0x1D7,
  AE_LOSSANTOS = 0x1D8,
  AE_LOSSANTOSINLET = 0x1D9,
  AE_LOSSANTOSINTERNATIONAL = 0x1DA,
  AE_LOSSEPULCROS = 0x1DB,
  AE_LOSVENTURASAIRPORT = 0x1DC,
  AE_LVAFREIGHTDEPOT = 0x1DD,
  AE_MARINA = 0x1DE,
  AE_MARKET = 0x1DF,
  AE_MARKETSTATION = 0x1E0,
  AE_MARTINBRIDGE = 0x1E1,
  AE_MISSIONARYHILL = 0x1E2,
  AE_MONTGOMERY = 0x1E3,
  AE_MONTGOMERYINTERSECTION = 0x1E4,
  AE_MOUNTCHILLIAD = 0x1E5,
  AE_MULHOLLAND = 0x1E6,
  AE_MULLHOLLANDINTERSECTION = 0x1E7,
  AE_NORTHSTARROCK = 0x1E8,
  AE_OCEANDOCKS = 0x1E9,
  AE_OCEANFLATS = 0x1EA,
  AE_OCTANESPRINGS = 0x1EB,
  AE_OLDVENTURASSTRIP = 0x1EC,
  AE_OPENOCEAN = 0x1ED,
  AE_PALLISADES = 0x1EE,
  AE_PALOMINOCREEK = 0x1EF,
  AE_PARADISO = 0x1F0,
  AE_PILGRAMSCREEK = 0x1F1,
  AE_PILSONINTERSECTIION = 0x1F2,
  AE_PLAYADELSEVILLE = 0x1F3,
  AE_PRICKLEPINE = 0x1F4,
  AE_QUEENS = 0x1F5,
  AE_RANDOLPHINDUSTRIALESTATE = 0x1F6,
  AE_REDCOUNTY = 0x1F7,
  AE_REDSANDSEAST = 0x1F8,
  AE_REDSANDSWEST = 0x1F9,
  AE_REGULARTOM = 0x1FA,
  AE_RICHMAN = 0x1FB,
  AE_ROCAESCALANTE = 0x1FC,
  AE_ROCKSHOREEAST = 0x1FD,
  AE_ROCKSHOREWEST = 0x1FE,
  AE_RODEO = 0x1FF,
  AE_ROYALECASINO = 0x200,
  AE_SANANDREASSOUND = 0x201,
  AE_SANFIERRO = 0x202,
  AE_SANFIERROBAY = 0x203,
  AE_SANTAFLORA = 0x204,
  AE_SANTAMARIABEACH = 0x205,
  AE_SHADYCREEKS = 0x206,
  AE_SHERMANRESERVOIR = 0x207,
  AE_SOBELLRAILYARDS = 0x208,
  AE_SPINYBED = 0x209,
  AE_STARFISHCASINO = 0x20A,
  AE_SUNNYSIDE = 0x20B,
  AE_TEMPLE = 0x20C,
  AE_THEBIGEARRADIOTELESCOPE = 0x20D,
  AE_THECAMELSTOE = 0x20E,
  AE_THECLOWNSPOCKET = 0x20F,
  AE_THEEMERALDISLE = 0x210,
  AE_THEFARM = 0x211,
  AE_THEFOURDRAGONSCASINO = 0x212,
  AE_THEHIGHROLLER = 0x213,
  AE_THEMAKOSPAN = 0x214,
  AE_THEPANOPTICON = 0x215,
  AE_THEPINKSWAN = 0x216,
  AE_THEPIRATESINMENSPANTS = 0x217,
  AE_THESHERMANDAM = 0x218,
  AE_THEVISAGE = 0x219,
  AE_TIERRA_ROBADA = 0x21A,
  AE_UNITYSTATION = 0x21B,
  AE_VALLEOCULTADO = 0x21C,
  AE_VERDANTBLUFFS = 0x21D,
  AE_VERDANTMEDOW = 0x21E,
  AE_VERONABEACH = 0x21F,
  AE_VINEWOOD = 0x220,
  AE_WHETSTONE = 0x221,
  AE_WHITEWOODESTATES = 0x222,
  AE_WILLOWFIELD = 0x223,
  AE_YELLOWBELLGOLFCOURSE = 0x224,
  AE_YELLOWBELLSTATION = 0x225,
  AE_BLACK = 0x226,
  AE_BLUE = 0x227,
  AE_BROWN = 0x228,
  AE_COPPER = 0x229,
  AE_CUSTOM = 0x22A,
  AE_CUSTOMISED = 0x22B,
  AE_DARK = 0x22C,
  AE_GOLD = 0x22D,
  AE_GREEN = 0x22E,
  AE_GREY = 0x22F,
  AE_LIGHT = 0x230,
  AE_PINK = 0x231,
  AE_RED = 0x232,
  AE_SILVER = 0x233,
  AE_WHITE = 0x234,
  AE_CENTRAL = 0x235,
  AE_EAST = 0x236,
  AE_NORTH = 0x237,
  AE_SOUTH = 0x238,
  AE_WEST = 0x239,
  AE_HEAD_TO_A_10 = 0x23A,
  AE_IN_A_ = 0x23B,
  AE_IN_WATER = 0x23C,
  AE_ON_A = 0x23D,
  AE_ON_FOOT = 0x23E,
  AE_RESPOND_TO_A_10 = 0x23F,
  AE_SUSPECTINWATER = 0x240,
  AE_SUSPECT_LAST_SEEN = 0x241,
  AE_WEVE_GOT_A_10_ = 0x242,
  AE_17 = 0x243,
  AE_21 = 0x244,
  AE_24 = 0x245,
  AE_28 = 0x246,
  AE_34 = 0x247,
  AE_37 = 0x248,
  AE_7 = 0x249,
  AE_71 = 0x24A,
  AE_81 = 0x24B,
  AE_90 = 0x24C,
  AE_91 = 0x24D,
  AE_A10 = 0x24E,
  AE_A10_2 = 0x24F,
  AE_A10_3 = 0x250,
  AE_2DOOR = 0x251,
  AE_4DOOR = 0x252,
  AE_AMBULANCE = 0x253,
  AE_ARTIC_CAB = 0x254,
  AE_BEACH_BUGGY = 0x255,
  AE_BIKE = 0x256,
  AE_BOAT = 0x257,
  AE_BUGGY = 0x258,
  AE_BULL_DOZER = 0x259,
  AE_BUS = 0x25A,
  AE_CAMPER_VAN = 0x25B,
  AE_COACH = 0x25C,
  AE_COMBINE_HARVESTER = 0x25D,
  AE_COMPACT = 0x25E,
  AE_CONVERTABLE = 0x25F,
  AE_COUPE = 0x260,
  AE_CRUISER = 0x261,
  AE_FIRE_TRUCK = 0x262,
  AE_FORKLIFT = 0x263,
  AE_FREIGHT_TRAIN = 0x264,
  AE_GARBAGE_TRUCK = 0x265,
  AE_GAS_TANKER = 0x266,
  AE_GOLF_CART = 0x267,
  AE_GO_KART = 0x268,
  AE_HEARSE = 0x269,
  AE_HELICOPTER = 0x26A,
  AE_HOVERCRAFT = 0x26B,
  AE_ICE_CREAM_VAN = 0x26C,
  AE_JEEP = 0x26D,
  AE_LAWNMOWER = 0x26E,
  AE_LIMO = 0x26F,
  AE_LOW_RIDER = 0x270,
  AE_MOPED = 0x271,
  AE_MOTORBIKE = 0x272,
  AE_OFF_ROAD = 0x273,
  AE_PEOPLE_CARRIER = 0x274,
  AE_PICK_UP = 0x275,
  AE_PLANE = 0x276,
  AE_POLICE_CAR = 0x277,
  AE_POLICE_VAN = 0x278,
  AE_QUAD_BIKE = 0x279,
  AE_RUBBER_DINGY = 0x27A,
  AE_SAND_BUGGY = 0x27B,
  AE_SEA_PLANE = 0x27C,
  AE_SNOWCAT = 0x27D,
  AE_SPEED_BOAT = 0x27E,
  AE_SPORT = 0x27F,
  AE_SPORTSCAR = 0x280,
  AE_SPORTS_BIKE = 0x281,
  AE_STATION_WAGON = 0x282,
  AE_SUV = 0x283,
  AE_TANK = 0x284,
  AE_TAXI = 0x285,
  AE_TRACTOR = 0x286,
  AE_TRAIN = 0x287,
  AE_TRAM = 0x288,
  AE_TRUCK = 0x289,
  AE_VAN = 0x28A,
  AE__AIR_HORN_L = 0x28B,
  AE__AIR_HORN_R = 0x28C,
  AE_AIRCONDITIONER = 0x28D,
  AE_OFFICE_FIRE_ALARM = 0x28E,
  AE_MOBILE_DIALING = 0x28F,
  AE_VIDEOTAPE_NOISE = 0x290,
  AE_BALLA_1 = 0x291,
  AE_BALLA_2 = 0x292,
  AE__BANDIT_WHEEL_START = 0x293,
  AE__BANDIT_PAYOUT = 0x294,
  AE__BANDIT_WHEEL_STOP = 0x295,
  AE__INSERT_COIN = 0x296,
  AE_HAIRCUT = 0x297,
  AE__BASKETBALL_BOUNCE_1 = 0x298,
  AE__BASKETBALL_BOUNCE_2 = 0x299,
  AE__BASKETBALL_BOUNCE_3 = 0x29A,
  AE__BASKETBALL_HIT_HOOP = 0x29B,
  AE__BASKETBALL_SCORE = 0x29C,
  AE_BBOX_1 = 0x29D,
  AE_BBOX_2 = 0x29E,
  AE_BBOX_3 = 0x29F,
  AE_BBOX_4 = 0x2A0,
  AE_BBOX_5 = 0x2A1,
  AE_BBOX_6 = 0x2A2,
  AE_BBOX_7 = 0x2A3,
  AE_BBOX_8 = 0x2A4,
  AE_BCS5_AA = 0x2A5,
  AE_BCS5_AB = 0x2A6,
  AE_BCS5_AC = 0x2A7,
  AE_BCS5_AD = 0x2A8,
  AE_BCS5_AE = 0x2A9,
  AE_BCS5_AF = 0x2AA,
  AE_BCS5_AG = 0x2AB,
  AE_BCS5_AH = 0x2AC,
  AE_BCS5_BA = 0x2AD,
  AE_BCS5_BB = 0x2AE,
  AE_BCS5_BC = 0x2AF,
  AE_BCS5_BD = 0x2B0,
  AE_BCS5_BE = 0x2B1,
  AE_BCS5_BF = 0x2B2,
  AE_BCS5_BG = 0x2B3,
  AE_BB_GONE_BUZZ = 0x2B4,
  AE_BB_GONE_ACCEPT = 0x2B5,
  AE_BB_GONE_DROP = 0x2B6,
  AE_BB_GONE_GAMEOVER = 0x2B7,
  AE_BB_GONE_PICKUP = 0x2B8,
  AE_BB_GONE_SELECT = 0x2B9,
  AE_BB_GONE_ZAP = 0x2BA,
  AE_B_BET_1 = 0x2BB,
  AE_B_BET_2 = 0x2BC,
  AE_B_LEND1 = 0x2BD,
  AE_B_LEND2 = 0x2BE,
  AE_B_LEND3 = 0x2BF,
  AE_B_NEM_1 = 0x2C0,
  AE_B_NEM_2 = 0x2C1,
  AE_B_NEM_3 = 0x2C2,
  AE_B_NMB_1 = 0x2C3,
  AE_B_NMB_2 = 0x2C4,
  AE_B_NMB_3 = 0x2C5,
  AE_B_NUM10 = 0x2C6,
  AE_B_NUM11 = 0x2C7,
  AE_B_NUM12 = 0x2C8,
  AE_B_NUM13 = 0x2C9,
  AE_B_NUM14 = 0x2CA,
  AE_B_NUM15 = 0x2CB,
  AE_B_NUM16 = 0x2CC,
  AE_B_NUM17 = 0x2CD,
  AE_B_NUM18 = 0x2CE,
  AE_B_NUM19 = 0x2CF,
  AE_B_NUM20 = 0x2D0,
  AE_B_NUM21 = 0x2D1,
  AE_B_NUM22 = 0x2D2,
  AE_B_NUM23 = 0x2D3,
  AE_B_NUM24 = 0x2D4,
  AE_B_NUM25 = 0x2D5,
  AE_B_NUM26 = 0x2D6,
  AE_B_NUM27 = 0x2D7,
  AE_B_NUM28 = 0x2D8,
  AE_B_NUM29 = 0x2D9,
  AE_B_NUM30 = 0x2DA,
  AE_B_NUM31 = 0x2DB,
  AE_B_NUM32 = 0x2DC,
  AE_B_NUM33 = 0x2DD,
  AE_B_NUM34 = 0x2DE,
  AE_B_NUM35 = 0x2DF,
  AE_B_NUM36 = 0x2E0,
  AE_B_NUM_0 = 0x2E1,
  AE_B_NUM_1 = 0x2E2,
  AE_B_NUM_2 = 0x2E3,
  AE_B_NUM_3 = 0x2E4,
  AE_B_NUM_4 = 0x2E5,
  AE_B_NUM_5 = 0x2E6,
  AE_B_NUM_6 = 0x2E7,
  AE_B_NUM_7 = 0x2E8,
  AE_B_NUM_8 = 0x2E9,
  AE_B_NUM_9 = 0x2EA,
  AE_B_PWIN1 = 0x2EB,
  AE_B_PWIN2 = 0x2EC,
  AE_B_PWIN3 = 0x2ED,
  AE_B_REG_1 = 0x2EE,
  AE_B_REG_2 = 0x2EF,
  AE_B_THX_1 = 0x2F0,
  AE_B_THX_2 = 0x2F1,
  AE_B_WEEL1 = 0x2F2,
  AE_B_WEEL2 = 0x2F3,
  AE_B_WEEL3 = 0x2F4,
  AE_B_WEEL4 = 0x2F5,
  AE_B_WEEL5 = 0x2F6,
  AE_B_WEEL6 = 0x2F7,
  AE_B_WEEL7 = 0x2F8,
  AE_B_WINS1 = 0x2F9,
  AE_B_WINS2 = 0x2FA,
  AE_B_WINS3 = 0x2FB,
  AE_BIKE_PACKAGE_THROW = 0x2FC,
  AE_BIKE_PACKAGE_THROW2 = 0x2FD,
  AE_BIKE_PACKAGE_THROW3 = 0x2FE,
  AE_10_OR_20 = 0x2FF,
  AE_2_OR_12 = 0x300,
  AE_3_OR_13 = 0x301,
  AE_4_OR_14 = 0x302,
  AE_5_OR_15 = 0x303,
  AE_6_OR_16 = 0x304,
  AE_7_OR_17 = 0x305,
  AE_8_OR_18 = 0x306,
  AE_9_OR_19 = 0x307,
  AE_J_BET_1 = 0x308,
  AE_J_BET_2 = 0x309,
  AE_J_BJ_1 = 0x30A,
  AE_J_BJ_2 = 0x30B,
  AE_J_BUST1 = 0x30C,
  AE_J_BUST2 = 0x30D,
  AE_J_DRW_1 = 0x30E,
  AE_J_DRW_2 = 0x30F,
  AE_J_DW_1 = 0x310,
  AE_J_DW_2 = 0x311,
  AE_J_DW_3 = 0x312,
  AE_J_LEND1 = 0x313,
  AE_J_LEND2 = 0x314,
  AE_J_LEND3 = 0x315,
  AE_J_NEM_1 = 0x316,
  AE_J_NEM_2 = 0x317,
  AE_J_NEM_3 = 0x318,
  AE_J_NMB_1 = 0x319,
  AE_J_NMB_2 = 0x31A,
  AE_J_NMB_3 = 0x31B,
  AE_J_NUM10 = 0x31C,
  AE_J_NUM11 = 0x31D,
  AE_J_NUM12 = 0x31E,
  AE_J_NUM13 = 0x31F,
  AE_J_NUM14 = 0x320,
  AE_J_NUM15 = 0x321,
  AE_J_NUM16 = 0x322,
  AE_J_NUM17 = 0x323,
  AE_J_NUM18 = 0x324,
  AE_J_NUM19 = 0x325,
  AE_J_NUM20 = 0x326,
  AE_J_NUM21 = 0x327,
  AE_J_NUM_4 = 0x328,
  AE_J_NUM_5 = 0x329,
  AE_J_NUM_6 = 0x32A,
  AE_J_NUM_7 = 0x32B,
  AE_J_NUM_8 = 0x32C,
  AE_J_NUM_9 = 0x32D,
  AE_J_PWIN1 = 0x32E,
  AE_J_PWIN2 = 0x32F,
  AE_J_PWIN3 = 0x330,
  AE_J_REG_1 = 0x331,
  AE_J_REG_2 = 0x332,
  AE_J_THX_1 = 0x333,
  AE_J_THX_2 = 0x334,
  AE_J_WINS1 = 0x335,
  AE_J_WINS2 = 0x336,
  AE_J_WINS3 = 0x337,
  AE__BLAST_DOOR_SLIDE_LOOP_2 = 0x338,
  AE__CLAXON_LOOP = 0x339,
  AE__HEAVY_DOOR = 0x33A,
  AE__SHOOT_CONTROLS = 0x33B,
  AE_GULL_SCREECH = 0x33C,
  AE_OMO_1 = 0x33D,
  AE_OMO_2 = 0x33E,
  AE_OMO_3 = 0x33F,
  AE_OMO_4 = 0x340,
  AE_OMO_5 = 0x341,
  AE_DOOR_BUZZER = 0x342,
  AE_LIFT_PING = 0x343,
  AE_LIGHTS_POWER_DOWN = 0x344,
  AE_ROOF_COLLAPSE = 0x345,
  AE_WALL_COLLAPSE_BELOW = 0x346,
  AE_WALL_COLLAPSE_NEARBY = 0x347,
  AE_WOODEN_DOOR_BREACH = 0x348,
  AE__CARGO_PLANE_DOOR_LOOP = 0x349,
  AE__CARGO_PLANE_DOOR_START = 0x34A,
  AE__CARGO_PLANE_DOOR_STOP = 0x34B,
  AE_CAS1B00 = 0x34C,
  AE_CAS1B01 = 0x34D,
  AE_CAS1B02 = 0x34E,
  AE_CAS1B03 = 0x34F,
  AE_CAS1B04 = 0x350,
  AE_CAS1B05 = 0x351,
  AE_CAS1B06 = 0x352,
  AE_CAS1_AA = 0x353,
  AE_CAS1_AB = 0x354,
  AE_CAS1_AC = 0x355,
  AE_CAS1_AD = 0x356,
  AE_CAS1_AE = 0x357,
  AE_CAS1_BA = 0x358,
  AE_CAS1_BB = 0x359,
  AE_CAS1_BC = 0x35A,
  AE_CAS1_BD = 0x35B,
  AE_CAS1_BE = 0x35C,
  AE_CAS1_CA = 0x35D,
  AE_CAS1_CB = 0x35E,
  AE_CAS1_CC = 0x35F,
  AE_CAS1_CD = 0x360,
  AE_CAS1_CE = 0x361,
  AE_CAS1_DA = 0x362,
  AE_CAS1_DB = 0x363,
  AE_CAS1_DC = 0x364,
  AE_CAS1_DD = 0x365,
  AE_CAS1_DE = 0x366,
  AE_CAS1_EA = 0x367,
  AE_CAS1_EB = 0x368,
  AE_CAS1_EC = 0x369,
  AE_CAS1_ED = 0x36A,
  AE_CAS1_EE = 0x36B,
  AE_CAS1_EF = 0x36C,
  AE_CAS1_EG = 0x36D,
  AE_CAS1_EH = 0x36E,
  AE_CAS1_EI = 0x36F,
  AE_CAS1_EJ = 0x370,
  AE_CAS1_EK = 0x371,
  AE_CAS1_EL = 0x372,
  AE_CAS1_EM = 0x373,
  AE_CAS1_EN = 0x374,
  AE_CAS1_EO = 0x375,
  AE_CAS1_EP = 0x376,
  AE_CAS1_EQ = 0x377,
  AE_CAS1_ES = 0x378,
  AE_CAS1_ET = 0x379,
  AE_CAS1_EU = 0x37A,
  AE_CAS1_EV = 0x37B,
  AE_CAS1_EW = 0x37C,
  AE_CAS1_EX = 0x37D,
  AE_CAS1_EY = 0x37E,
  AE_CAS1_EZ = 0x37F,
  AE_CAS1_FA = 0x380,
  AE_CAS1_FB = 0x381,
  AE_CAS1_FC = 0x382,
  AE_CAS1_GA = 0x383,
  AE_CAS1_GB = 0x384,
  AE_CAS1_GC = 0x385,
  AE_CAS1_GD = 0x386,
  AE_CAS1_GE = 0x387,
  AE_CAS1_HA = 0x388,
  AE_CAS1_HB = 0x389,
  AE_CAS1_HC = 0x38A,
  AE_CAS1_HD = 0x38B,
  AE_CAS1_HE = 0x38C,
  AE_CAS1_JA = 0x38D,
  AE_CAS1_JB = 0x38E,
  AE_CAS11AA = 0x38F,
  AE_CAS11AB = 0x390,
  AE_CAS11AC = 0x391,
  AE_CAS11AD = 0x392,
  AE_CAS11BA = 0x393,
  AE_CAS11BB = 0x394,
  AE_CAS11BC = 0x395,
  AE_CAS11CA = 0x396,
  AE_CAS11DA = 0x397,
  AE_CAS11DB = 0x398,
  AE_CAS11EA = 0x399,
  AE_CAS11EB = 0x39A,
  AE_CAS11EC = 0x39B,
  AE_CAS11ED = 0x39C,
  AE_CAS11EE = 0x39D,
  AE_CAS11EF = 0x39E,
  AE_CAS11EG = 0x39F,
  AE_CAS11FA = 0x3A0,
  AE_CAS11GA = 0x3A1,
  AE_CAS11GB = 0x3A2,
  AE_CAS11GC = 0x3A3,
  AE_CAS11HA = 0x3A4,
  AE_CAS11HB = 0x3A5,
  AE_CAS11HC = 0x3A6,
  AE_CAS11HD = 0x3A7,
  AE_CAS11HE = 0x3A8,
  AE_CAS11HF = 0x3A9,
  AE_CAS11_AA = 0x3AA,
  AE_CAS11_AB = 0x3AB,
  AE_CAS11_BA = 0x3AC,
  AE_CAS11_DB = 0x3AD,
  AE_CAS11_EA = 0x3AE,
  AE_CAS11_EB = 0x3AF,
  AE_CAS11_EC = 0x3B0,
  AE_CAS11_ED = 0x3B1,
  AE_CAS11_EE = 0x3B2,
  AE_CAS11_EF = 0x3B3,
  AE_CAS11_EG = 0x3B4,
  AE_CAS11_GA = 0x3B5,
  AE_CAS11_GB = 0x3B6,
  AE_CAS2_AA = 0x3B7,
  AE_CAS2_AB = 0x3B8,
  AE_CAS2_AC = 0x3B9,
  AE_CAS2_AD = 0x3BA,
  AE_CAS2_AE = 0x3BB,
  AE_CAS2_AF = 0x3BC,
  AE_CAS2_AG = 0x3BD,
  AE_CAS2_AH = 0x3BE,
  AE_CAS2_AI = 0x3BF,
  AE_CAS2_AJ = 0x3C0,
  AE_CAS2_AK = 0x3C1,
  AE_CAS2_AL = 0x3C2,
  AE_CAS2_AM = 0x3C3,
  AE_CAS2_AN = 0x3C4,
  AE_CAS2_AO = 0x3C5,
  AE_CAS2_BA = 0x3C6,
  AE_CAS2_BB = 0x3C7,
  AE_CAS2_BC = 0x3C8,
  AE_CAS2_BD = 0x3C9,
  AE_CAS2_BE = 0x3CA,
  AE_CAS2_CA = 0x3CB,
  AE_CAS2_CB = 0x3CC,
  AE_CAS3_AA = 0x3CD,
  AE_CAS3_AB = 0x3CE,
  AE_CAS3_AC = 0x3CF,
  AE_CAS3_AD = 0x3D0,
  AE_CAS3_BA = 0x3D1,
  AE_CAS3_BB = 0x3D2,
  AE_CAS3_BC = 0x3D3,
  AE_CAS3_BD = 0x3D4,
  AE_CAS3_BE = 0x3D5,
  AE_CAS3_CA = 0x3D6,
  AE_CAS3_CB = 0x3D7,
  AE_CAS3_CC = 0x3D8,
  AE_CAS3_DA = 0x3D9,
  AE_CAS4_BA = 0x3DA,
  AE_CAS4_BB = 0x3DB,
  AE_CAS4_CA = 0x3DC,
  AE_CAS4_CB = 0x3DD,
  AE_CAS4_CC = 0x3DE,
  AE_CAS4_CD = 0x3DF,
  AE_CAS4_CE = 0x3E0,
  AE_CAS4_CF = 0x3E1,
  AE_CAS4_CG = 0x3E2,
  AE_CAS4_CH = 0x3E3,
  AE_CAS4_CJ = 0x3E4,
  AE_CAS4_CK = 0x3E5,
  AE_CAS4_CL = 0x3E6,
  AE_CAS4_DA = 0x3E7,
  AE_CAS4_DB = 0x3E8,
  AE_CAS4_DC = 0x3E9,
  AE_CAS4_DD = 0x3EA,
  AE_CAS4_DE = 0x3EB,
  AE_CAS4_EA = 0x3EC,
  AE_CAS4_EB = 0x3ED,
  AE_CAS4_EC = 0x3EE,
  AE_CAS4_ED = 0x3EF,
  AE_CAS4_EE = 0x3F0,
  AE_CAS4_EF = 0x3F1,
  AE_CAS4_EG = 0x3F2,
  AE_CAS4_EH = 0x3F3,
  AE_CAS4_FA = 0x3F4,
  AE_CAS4_FB = 0x3F5,
  AE_CAS4_FC = 0x3F6,
  AE_CAS4_FD = 0x3F7,
  AE_CAS4_FE = 0x3F8,
  AE_CAS4_FF = 0x3F9,
  AE_CAS4_FG = 0x3FA,
  AE_CAS4_FH = 0x3FB,
  AE_CAS4_FJ = 0x3FC,
  AE_CAS4_FK = 0x3FD,
  AE_CAS4_FL = 0x3FE,
  AE_CAS4_GA = 0x3FF,
  AE_CAS4_GB = 0x400,
  AE_CAS4_HA = 0x401,
  AE_CAS4_HB = 0x402,
  AE_CAS4_HC = 0x403,
  AE_CAS4_HD = 0x404,
  AE_CAS4_JA = 0x405,
  AE_CAS4_JB = 0x406,
  AE_CAS4_JC = 0x407,
  AE_CAS4_JD = 0x408,
  AE_CAS4_KA = 0x409,
  AE_CAS4_KB = 0x40A,
  AE_CAS4_KC = 0x40B,
  AE_CAS4_KD = 0x40C,
  AE_CAS4_KE = 0x40D,
  AE_CAS4_KF = 0x40E,
  AE_CAS4_KG = 0x40F,
  AE_CAS4_KH = 0x410,
  AE_CAS4_KJ = 0x411,
  AE_CAS4_LA = 0x412,
  AE_CAS4_LB = 0x413,
  AE_CAS4_LC = 0x414,
  AE_CAS4_LD = 0x415,
  AE_CAS4_LE = 0x416,
  AE_CAS4_MA = 0x417,
  AE_CAS4_NA = 0x418,
  AE_CAS4_NB = 0x419,
  AE_CAS4_NC = 0x41A,
  AE_CAS4_ND = 0x41B,
  AE_CAS4_NE = 0x41C,
  AE_CAS4_NF = 0x41D,
  AE_CAS4_NG = 0x41E,
  AE_CAS4_NH = 0x41F,
  AE_CAS4_NJ = 0x420,
  AE_CAS4_OA = 0x421,
  AE_CAS4_OB = 0x422,
  AE_CAS4_OC = 0x423,
  AE_CAS4_OD = 0x424,
  AE_CAS4_OE = 0x425,
  AE_CAS4_OF = 0x426,
  AE_CAS4_OG = 0x427,
  AE_CAS4_OH = 0x428,
  AE_CAS4_OJ = 0x429,
  AE_CAS4_OK = 0x42A,
  AE_CAS4_OL = 0x42B,
  AE_CAS4_OM = 0x42C,
  AE_CAS4_PA = 0x42D,
  AE_CAS4_PB = 0x42E,
  AE_CAS4_PD = 0x42F,
  AE_CAS4_PE = 0x430,
  AE_CAS4_PF = 0x431,
  AE_CAS4_PG = 0x432,
  AE_CAS4_PH = 0x433,
  AE_CAS4_PJ = 0x434,
  AE_CAS4_PK = 0x435,
  AE_CAS4_QA = 0x436,
  AE_CAS4_QB = 0x437,
  AE_CAS4_RA = 0x438,
  AE_CAS4_RB = 0x439,
  AE_CAS4_RD = 0x43A,
  AE_CAS4_RE = 0x43B,
  AE_CAS4_SA = 0x43C,
  AE_CAS4_SB = 0x43D,
  AE_CAS4_TA = 0x43E,
  AE_CAS4_TB = 0x43F,
  AE_CAS4_TC = 0x440,
  AE_CAS5_AA = 0x441,
  AE_CAS5_AB = 0x442,
  AE_CAS5_BA = 0x443,
  AE_CAS5_BB = 0x444,
  AE_CAS5_BC = 0x445,
  AE_CAS5_BD = 0x446,
  AE_CAS5_BE = 0x447,
  AE_CAS5_CA = 0x448,
  AE_CAS5_CB = 0x449,
  AE_CAS5_CC = 0x44A,
  AE_CAS5_CD = 0x44B,
  AE_CAS5_CE = 0x44C,
  AE_CAS5_CF = 0x44D,
  AE_CAS5_CG = 0x44E,
  AE_CAS5_DA = 0x44F,
  AE_CAS5_DB = 0x450,
  AE_CAS5_EA = 0x451,
  AE_CAS5_EB = 0x452,
  AE_CAS6_AA = 0x453,
  AE_CAS6_AB = 0x454,
  AE_CAS6_AC = 0x455,
  AE_CAS6_AD = 0x456,
  AE_CAS6_AE = 0x457,
  AE_CAS6_AF = 0x458,
  AE_CAS6_BA = 0x459,
  AE_CAS6_BB = 0x45A,
  AE_CAS6_BC = 0x45B,
  AE_CAS6_BD = 0x45C,
  AE_CAS6_BE = 0x45D,
  AE_CAS6_BF = 0x45E,
  AE_CAS6_BH = 0x45F,
  AE_CAS6_BK = 0x460,
  AE_CAS6_BL = 0x461,
  AE_CAS6_BM = 0x462,
  AE_CAS6_BN = 0x463,
  AE_CAS6_CA = 0x464,
  AE_CAS6_CB = 0x465,
  AE_CAS6_DA = 0x466,
  AE_CAS6_DB = 0x467,
  AE_CAS6_EA = 0x468,
  AE_CAS6_EB = 0x469,
  AE_CAS6_EC = 0x46A,
  AE_CAS6_ED = 0x46B,
  AE_CAS6_EE = 0x46C,
  AE_CAS6_EF = 0x46D,
  AE_CAS6_EG = 0x46E,
  AE_CAS6_EH = 0x46F,
  AE_CAS6_EJ = 0x470,
  AE_CAS6_EK = 0x471,
  AE_CAS6_EL = 0x472,
  AE_CAS6_EM = 0x473,
  AE_CAS6_EN = 0x474,
  AE_CAS6_EO = 0x475,
  AE_CAS6_EP = 0x476,
  AE_CAS6_EQ = 0x477,
  AE_CAS6_ER = 0x478,
  AE_CAS6_ES = 0x479,
  AE_CAS6_ET = 0x47A,
  AE_CAS6_EU = 0x47B,
  AE_CAS6_FA = 0x47C,
  AE_CAS6_FC = 0x47D,
  AE_CAS6_FF = 0x47E,
  AE_CAS6_FK = 0x47F,
  AE_CAS6_FM = 0x480,
  AE_CAS6_FN = 0x481,
  AE_CAS6_FO = 0x482,
  AE_CAS6_FP = 0x483,
  AE_CAS6_GB = 0x484,
  AE_CAS6_GH = 0x485,
  AE_CAS6_GJ = 0x486,
  AE_CAS6_GK = 0x487,
  AE_CAS6_HA = 0x488,
  AE_CAS6_HB = 0x489,
  AE_CAS6_HC = 0x48A,
  AE_CAS6_HD = 0x48B,
  AE_CAS6_JA = 0x48C,
  AE_CAS6_JB = 0x48D,
  AE_CAS6_JC = 0x48E,
  AE_CAS6_JD = 0x48F,
  AE_CAS6_JE = 0x490,
  AE_CAS6_JF = 0x491,
  AE_CAS6_JG = 0x492,
  AE_CAS6_JJ = 0x493,
  AE_CAS6_JK = 0x494,
  AE_CAS6_JL = 0x495,
  AE_CAS6_JM = 0x496,
  AE_CAS6_JN = 0x497,
  AE_CAS6_JO = 0x498,
  AE_CAS6_KA = 0x499,
  AE_CAS6_KB = 0x49A,
  AE_CAS6_KC = 0x49B,
  AE_CAS6_KD = 0x49C,
  AE_CAS6_KE = 0x49D,
  AE_CAS6_LA = 0x49E,
  AE_CAS6_LB = 0x49F,
  AE_CAS6_LC = 0x4A0,
  AE_CAS6_LD = 0x4A1,
  AE_CAS9_AA = 0x4A2,
  AE_CAS9_AB = 0x4A3,
  AE_CAS9_AC = 0x4A4,
  AE_CAS9_AD = 0x4A5,
  AE_CAS9_BA = 0x4A6,
  AE_CAS9_BB = 0x4A7,
  AE_CAS9_BC = 0x4A8,
  AE_CAS9_BD = 0x4A9,
  AE_CAS9_CA = 0x4AA,
  AE_CAS9_CB = 0x4AB,
  AE_CAS9_CC = 0x4AC,
  AE_CAS9_CD = 0x4AD,
  AE_CAS9_DA = 0x4AE,
  AE_CAT_AA = 0x4AF,
  AE_CAT_AB = 0x4B0,
  AE_CAT_AC = 0x4B1,
  AE_CAT_AD = 0x4B2,
  AE_CAT_BA = 0x4B3,
  AE_CAT_BB = 0x4B4,
  AE_CAT_BC = 0x4B5,
  AE_CAT_BD = 0x4B6,
  AE_CAT_BE = 0x4B7,
  AE_CAT_BF = 0x4B8,
  AE_CAT_BG = 0x4B9,
  AE_CAT_BH = 0x4BA,
  AE_CAT_BI = 0x4BB,
  AE_CAT_BJ = 0x4BC,
  AE_CAT_BK = 0x4BD,
  AE_CAT_CA = 0x4BE,
  AE_CAT_CB = 0x4BF,
  AE_CAT_CC = 0x4C0,
  AE_CAT_CD = 0x4C1,
  AE_CAT_CE = 0x4C2,
  AE_CAT_CF = 0x4C3,
  AE_CAT_CG = 0x4C4,
  AE_CAT_CH = 0x4C5,
  AE_CAT_CI = 0x4C6,
  AE_CAT_CJ = 0x4C7,
  AE_CAT_CK = 0x4C8,
  AE_CAT_DA = 0x4C9,
  AE_CAT_DB = 0x4CA,
  AE_CAT_DC = 0x4CB,
  AE_CAT_DD = 0x4CC,
  AE_CAT_DE = 0x4CD,
  AE_CAT_DF = 0x4CE,
  AE_CAT_DG = 0x4CF,
  AE_CAT_DH = 0x4D0,
  AE_CAT_DI = 0x4D1,
  AE_CAT_DJ = 0x4D2,
  AE_CAT_DK = 0x4D3,
  AE_CAT_DL = 0x4D4,
  AE_CAT_DM = 0x4D5,
  AE_CAT_DN = 0x4D6,
  AE_CAT_DO = 0x4D7,
  AE_CAT_DP = 0x4D8,
  AE_CAT_EA = 0x4D9,
  AE_CAT_EB = 0x4DA,
  AE_CAT_EC = 0x4DB,
  AE_CAT_ED = 0x4DC,
  AE_CAT_EE = 0x4DD,
  AE_CAT_EF = 0x4DE,
  AE_CAT_EG = 0x4DF,
  AE_CAT_EH = 0x4E0,
  AE_CAT_EI = 0x4E1,
  AE_CAT_EJ = 0x4E2,
  AE_CAT_EK = 0x4E3,
  AE_CAT_EL = 0x4E4,
  AE_CAT_EM = 0x4E5,
  AE_CAT_EN = 0x4E6,
  AE_CAT_EO = 0x4E7,
  AE_CAT_FA = 0x4E8,
  AE_CAT_FB = 0x4E9,
  AE_CAT_FC = 0x4EA,
  AE_CAT_FD = 0x4EB,
  AE_CAT_FE = 0x4EC,
  AE_CAT_FF = 0x4ED,
  AE_CAT_FG = 0x4EE,
  AE_CAT_FH = 0x4EF,
  AE_CAT_FI = 0x4F0,
  AE_CAT_FJ = 0x4F1,
  AE_CAT_FK = 0x4F2,
  AE_CAT_FL = 0x4F3,
  AE_CAT_FM = 0x4F4,
  AE_CAT_FN = 0x4F5,
  AE_CAT_FO = 0x4F6,
  AE_CAT_GA = 0x4F7,
  AE_CAT_GB = 0x4F8,
  AE_CAT_GC = 0x4F9,
  AE_CAT_GD = 0x4FA,
  AE_CAT_GE = 0x4FB,
  AE_CAT_GF = 0x4FC,
  AE_CAT_GG = 0x4FD,
  AE_CAT_GH = 0x4FE,
  AE_CAT_GI = 0x4FF,
  AE_CAT_GJ = 0x500,
  AE_CAT_GK = 0x501,
  AE_CAT_GL = 0x502,
  AE_CAT_GM = 0x503,
  AE_CAT_GN = 0x504,
  AE_CAT_HA = 0x505,
  AE_CAT_HB = 0x506,
  AE_CAT_HC = 0x507,
  AE_CAT_HD = 0x508,
  AE_CAT_HE = 0x509,
  AE_CAT_HF = 0x50A,
  AE_CAT_KA = 0x50B,
  AE_CAT_KB = 0x50C,
  AE_CAT_KC = 0x50D,
  AE_CAT_KD = 0x50E,
  AE_CAT_KE = 0x50F,
  AE_CAT_KF = 0x510,
  AE_CAT_KG = 0x511,
  AE_CAT_KH = 0x512,
  AE_CAT_KI = 0x513,
  AE_CAT_KJ = 0x514,
  AE_CAT_KK = 0x515,
  AE_CAT_KL = 0x516,
  AE_CAT_KM = 0x517,
  AE_CAT_KN = 0x518,
  AE_CAT_KO = 0x519,
  AE_CAT_KP = 0x51A,
  AE_CAT_KQ = 0x51B,
  AE_CAT_KR = 0x51C,
  AE_CAT_KS = 0x51D,
  AE_CAT_KT = 0x51E,
  AE_CAT_LA = 0x51F,
  AE_CAT_LB = 0x520,
  AE_CAT_MA = 0x521,
  AE_CAT_MB = 0x522,
  AE_CAT_MC = 0x523,
  AE_CAT_NA = 0x524,
  AE_CAT_NB = 0x525,
  AE_CAT_NC = 0x526,
  AE_CAT_ND = 0x527,
  AE_CAT_NE = 0x528,
  AE_CAT_NF = 0x529,
  AE_CAT_NG = 0x52A,
  AE_CAT_NH = 0x52B,
  AE_CAT_OA = 0x52C,
  AE_CAT_OB = 0x52D,
  AE_CAT_OC = 0x52E,
  AE_CAT_OD = 0x52F,
  AE_CAT_OE = 0x530,
  AE_CAT_OF = 0x531,
  AE_CAT_OG = 0x532,
  AE_CAT_OH = 0x533,
  AE_CAT_PA = 0x534,
  AE_CAT_PB = 0x535,
  AE_CAT_PC = 0x536,
  AE_CAT_PD = 0x537,
  AE_CAT_PE = 0x538,
  AE_CAT_PF = 0x539,
  AE_CAT1_AA = 0x53A,
  AE_CAT1_AB = 0x53B,
  AE_CAT1_AC = 0x53C,
  AE_CAT1_AD = 0x53D,
  AE_CAT1_AE = 0x53E,
  AE_CAT1_AF = 0x53F,
  AE_CAT1_AG = 0x540,
  AE_CAT1_AH = 0x541,
  AE_CAT1_BA = 0x542,
  AE_CAT1_BB = 0x543,
  AE_CAT1_BC = 0x544,
  AE_CAT1_CA = 0x545,
  AE_CAT1_CB = 0x546,
  AE_CAT1_CC = 0x547,
  AE_CAT1_CD = 0x548,
  AE_CAT1_CE = 0x549,
  AE_CAT1_DA = 0x54A,
  AE_CAT1_DB = 0x54B,
  AE_CAT1_DC = 0x54C,
  AE_CAT1_DD = 0x54D,
  AE_CAT1_EA = 0x54E,
  AE_CAT1_EB = 0x54F,
  AE_CAT1_EC = 0x550,
  AE_CAT1_ED = 0x551,
  AE_CAT1_FA = 0x552,
  AE_CAT1_FB = 0x553,
  AE_CAT1_GA = 0x554,
  AE_CAT1_GB = 0x555,
  AE_CAT1_GC = 0x556,
  AE_CAT1_GD = 0x557,
  AE_CAT1_HA = 0x558,
  AE_CAT1_HB = 0x559,
  AE_CAT1_HC = 0x55A,
  AE_CAT1_HD = 0x55B,
  AE_CAT1_HE = 0x55C,
  AE_CAT1_IA = 0x55D,
  AE_CAT1_IB = 0x55E,
  AE_CAT1_IC = 0x55F,
  AE_CAT1_IE = 0x560,
  AE_CAT1_IF = 0x561,
  AE_CAT1_IG = 0x562,
  AE_CAT2_AA = 0x563,
  AE_CAT2_AB = 0x564,
  AE_CAT2_AC = 0x565,
  AE_CAT2_AF = 0x566,
  AE_CAT2_AG = 0x567,
  AE_CAT2_AH = 0x568,
  AE_CAT2_AI = 0x569,
  AE_CAT2_CA = 0x56A,
  AE_CAT2_CB = 0x56B,
  AE_CAT2_CC = 0x56C,
  AE_CAT2_DA = 0x56D,
  AE_CAT2_DB = 0x56E,
  AE_CAT2_DC = 0x56F,
  AE_CAT2_EA = 0x570,
  AE_CAT2_EB = 0x571,
  AE_CAT2_EC = 0x572,
  AE_CAT2_FA = 0x573,
  AE_CAT2_FB = 0x574,
  AE_CAT2_FC = 0x575,
  AE_CAT2_GA = 0x576,
  AE_CAT2_GB = 0x577,
  AE_CAT2_GC = 0x578,
  AE_CAT2_HA = 0x579,
  AE_CAT2_HB = 0x57A,
  AE_CAT2_HC = 0x57B,
  AE_CAT2_HE = 0x57C,
  AE_CAT2_HF = 0x57D,
  AE_CAT2_HG = 0x57E,
  AE_CAT2_HH = 0x57F,
  AE_CAT2_HI = 0x580,
  AE_CAT2_HJ = 0x581,
  AE_CAT2_JA = 0x582,
  AE__CAT2_SECURITY_ALARM = 0x583,
  AE__CAT2_WOODEN_DOOR_BREACH = 0x584,
  AE_CAT3_AA = 0x585,
  AE_CAT3_AB = 0x586,
  AE_CAT3_AC = 0x587,
  AE_CAT3_AD = 0x588,
  AE_CAT3_AE = 0x589,
  AE_CAT3_AF = 0x58A,
  AE_CAT3_AG = 0x58B,
  AE_CAT3_BA = 0x58C,
  AE_CAT3_BB = 0x58D,
  AE_CAT3_BC = 0x58E,
  AE_CAT3_BD = 0x58F,
  AE_CAT3_CA = 0x590,
  AE_CAT3_CB = 0x591,
  AE_CAT3_CC = 0x592,
  AE_CAT3_CD = 0x593,
  AE_CAT3_DA = 0x594,
  AE_CAT3_DB = 0x595,
  AE_CAT3_DC = 0x596,
  AE_CAT3_DD = 0x597,
  AE_CAT3_EA = 0x598,
  AE_CAT3_EB = 0x599,
  AE_CAT3_EC = 0x59A,
  AE_CAT3_ED = 0x59B,
  AE_CAT3_EE = 0x59C,
  AE_CAT3_EF = 0x59D,
  AE_CAT3_EG = 0x59E,
  AE_CAT3_FA = 0x59F,
  AE_CAT3_FB = 0x5A0,
  AE_CAT3_FC = 0x5A1,
  AE_CAT3_FD = 0x5A2,
  AE_CAT3_FE = 0x5A3,
  AE_CAT3_FF = 0x5A4,
  AE_CAT3_GA = 0x5A5,
  AE_CAT3_GB = 0x5A6,
  AE_CAT3_GC = 0x5A7,
  AE_CAT3_GD = 0x5A8,
  AE_CAT3_GE = 0x5A9,
  AE_CAT3_GF = 0x5AA,
  AE_CAT3_GG = 0x5AB,
  AE_CAT3_HA = 0x5AC,
  AE_CAT3_HB = 0x5AD,
  AE_CAT3_HC = 0x5AE,
  AE_CAT3_JA = 0x5AF,
  AE_CAT3_JB = 0x5B0,
  AE_CAT3_JC = 0x5B1,
  AE_CAT3_JD = 0x5B2,
  AE_CAT3_JE = 0x5B3,
  AE_CAT3_JF = 0x5B4,
  AE_CAT3_JG = 0x5B5,
  AE_CAT3_JH = 0x5B6,
  AE_CAT3_JJ = 0x5B7,
  AE_CAT3_JK = 0x5B8,
  AE_CAT4_AA = 0x5B9,
  AE_CAT4_AB = 0x5BA,
  AE_CAT4_AC = 0x5BB,
  AE_CAT4_AD = 0x5BC,
  AE_CAT4_AE = 0x5BD,
  AE_CAT4_AF = 0x5BE,
  AE_CAT4_AG = 0x5BF,
  AE_CAT4_AH = 0x5C0,
  AE_CAT4_AI = 0x5C1,
  AE_CAT4_AJ = 0x5C2,
  AE_CAT4_BA = 0x5C3,
  AE_CAT4_BB = 0x5C4,
  AE_CAT4_BC = 0x5C5,
  AE_CAT4_BD = 0x5C6,
  AE_CAT4_BE = 0x5C7,
  AE_CAT4_BF = 0x5C8,
  AE_CAT4_BG = 0x5C9,
  AE_CAT4_BH = 0x5CA,
  AE_CAT4_BI = 0x5CB,
  AE_CAT4_BJ = 0x5CC,
  AE_CAT4_BK = 0x5CD,
  AE_CAT4_CA = 0x5CE,
  AE_CAT4_CB = 0x5CF,
  AE_CAT4_CC = 0x5D0,
  AE_CAT4_CD = 0x5D1,
  AE_CAT4_CE = 0x5D2,
  AE_CAT4_CF = 0x5D3,
  AE_CAT4_CG = 0x5D4,
  AE_CAT4_CH = 0x5D5,
  AE_CAT4_DA = 0x5D6,
  AE_CAT4_DB = 0x5D7,
  AE_CAT4_DC = 0x5D8,
  AE_CAT4_DD = 0x5D9,
  AE_CAT4_DE = 0x5DA,
  AE_CAT4_DF = 0x5DB,
  AE_CAT4_DG = 0x5DC,
  AE_CAT4_DH = 0x5DD,
  AE_CAT4_DI = 0x5DE,
  AE_CAT4_DJ = 0x5DF,
  AE_CAT4_DK = 0x5E0,
  AE_CAT4_DL = 0x5E1,
  AE_CAT4_DM = 0x5E2,
  AE_CAT4_EA = 0x5E3,
  AE_CAT4_EB = 0x5E4,
  AE_CAT4_EC = 0x5E5,
  AE_CAT4_ED = 0x5E6,
  AE_CAT4_FA = 0x5E7,
  AE_CAT4_FB = 0x5E8,
  AE_CAT4_FC = 0x5E9,
  AE_CAT4_FD = 0x5EA,
  AE_CAT4_GA = 0x5EB,
  AE_CAT4_GB = 0x5EC,
  AE_CAT4_HA = 0x5ED,
  AE_CAT4_HB = 0x5EE,
  AE_CAT4_HC = 0x5EF,
  AE_CAT4_HD = 0x5F0,
  AE_CAT4_HE = 0x5F1,
  AE_CAT4_HF = 0x5F2,
  AE_CAT4_HG = 0x5F3,
  AE_CAT4_HH = 0x5F4,
  AE_CAT4_HI = 0x5F5,
  AE_CAT4_HJ = 0x5F6,
  AE_CAT4_JA = 0x5F7,
  AE_CAT4_JB = 0x5F8,
  AE_CAT4_KA = 0x5F9,
  AE_CAT4_KB = 0x5FA,
  AE_CAT4_KC = 0x5FB,
  AE_CAT4_KD = 0x5FC,
  AE_CAT4_KE = 0x5FD,
  AE_CAT4_KF = 0x5FE,
  AE_CAT4_KG = 0x5FF,
  AE_CAT4_LA = 0x600,
  AE_CAT4_LB = 0x601,
  AE_CAT4_LC = 0x602,
  AE_CAT4_LD = 0x603,
  AE_CAT4_LE = 0x604,
  AE_CAT4_LF = 0x605,
  AE_CATX_AA = 0x606,
  AE_CATX_AB = 0x607,
  AE_CATX_AC = 0x608,
  AE_CATX_AD = 0x609,
  AE_CATX_AE = 0x60A,
  AE_CATX_AF = 0x60B,
  AE_CATX_AG = 0x60C,
  AE_CATX_AH = 0x60D,
  AE_CATX_BA = 0x60E,
  AE_CATX_BB = 0x60F,
  AE_CATX_BC = 0x610,
  AE_CATX_BD = 0x611,
  AE_CATX_BE = 0x612,
  AE_CATX_BF = 0x613,
  AE_CATX_CA = 0x614,
  AE_CATX_CB = 0x615,
  AE_CATX_CC = 0x616,
  AE_CATX_CD = 0x617,
  AE_CATX_CE = 0x618,
  AE_CATX_CF = 0x619,
  AE_CATX_DA = 0x61A,
  AE_CATX_DB = 0x61B,
  AE_CATX_DC = 0x61C,
  AE_CATX_DD = 0x61D,
  AE_CATX_DE = 0x61E,
  AE_CATX_DF = 0x61F,
  AE_CATX_JA = 0x620,
  AE_CATX_JB = 0x621,
  AE_CATX_JC = 0x622,
  AE_CATX_JD = 0x623,
  AE_CATX_JE = 0x624,
  AE_CATX_JF = 0x625,
  AE_CATX_JG = 0x626,
  AE_CATX_JH = 0x627,
  AE_CATX_KA = 0x628,
  AE_CATX_KB = 0x629,
  AE_CATX_KC = 0x62A,
  AE_CATX_KD = 0x62B,
  AE_CATX_LA = 0x62C,
  AE_CATX_LB = 0x62D,
  AE_CATX_LC = 0x62E,
  AE_CATX_LD = 0x62F,
  AE_CATX_MA = 0x630,
  AE_CATX_MB = 0x631,
  AE_CATX_MC = 0x632,
  AE_CATX_MD = 0x633,
  AE_CATX_ME = 0x634,
  AE_CATX_NA = 0x635,
  AE_CATX_NB = 0x636,
  AE_CATX_NC = 0x637,
  AE_CATX_OA = 0x638,
  AE_CATX_OB = 0x639,
  AE_CATX_OC = 0x63A,
  AE_CATX_OD = 0x63B,
  AE_CATX_PA = 0x63C,
  AE_CATX_PB = 0x63D,
  AE_CATX_QA = 0x63E,
  AE_CATX_QB = 0x63F,
  AE_CATX_RA = 0x640,
  AE_CATX_RB = 0x641,
  AE_CATX_RC = 0x642,
  AE_CATX_SA = 0x643,
  AE_CATX_SB = 0x644,
  AE_CATX_SC = 0x645,
  AE_CATX_SD = 0x646,
  AE_CATX_SE = 0x647,
  AE_CATX_SF = 0x648,
  AE_CATX_SG = 0x649,
  AE_CATX_SH = 0x64A,
  AE_CATX_TA = 0x64B,
  AE_CATX_TB = 0x64C,
  AE_CATX_TC = 0x64D,
  AE_CATX_TD = 0x64E,
  AE_CATX_TE = 0x64F,
  AE_CATX_TF = 0x650,
  AE_CATX_TG = 0x651,
  AE_CATX_TH = 0x652,
  AE_CATX_TJ = 0x653,
  AE_CATX_TK = 0x654,
  AE_CATX_TL = 0x655,
  AE_CATX_TM = 0x656,
  AE_CATX_TN = 0x657,
  AE_CATX_TO = 0x658,
  AE_CATX_TP = 0x659,
  AE_CATX_TQ = 0x65A,
  AE_CATX_TR = 0x65B,
  AE_CATX_TS = 0x65C,
  AE_CATX_TT = 0x65D,
  AE_CATX_TU = 0x65E,
  AE_CATX_UA = 0x65F,
  AE_CATX_UB = 0x660,
  AE_CATX_UC = 0x661,
  AE_CATX_UD = 0x662,
  AE_CATX_UE = 0x663,
  AE_CATX_UF = 0x664,
  AE_CATX_UG = 0x665,
  AE_CATX_UH = 0x666,
  AE_CATX_UJ = 0x667,
  AE_CATX_UK = 0x668,
  AE_CATX_VA = 0x669,
  AE_CATX_VB = 0x66A,
  AE_CATX_VC = 0x66B,
  AE_CATX_VD = 0x66C,
  AE_CATX_VE = 0x66D,
  AE_CATX_VF = 0x66E,
  AE_CATX_VG = 0x66F,
  AE_CATX_VH = 0x670,
  AE_CATX_VJ = 0x671,
  AE_CATX_VK = 0x672,
  AE_CATX_VL = 0x673,
  AE_CATX_VM = 0x674,
  AE_CATX_VN = 0x675,
  AE_CATX_VO = 0x676,
  AE_CATX_VP = 0x677,
  AE_CATX_VQ = 0x678,
  AE_CES1_AA = 0x679,
  AE_CES1_AB = 0x67A,
  AE_CES1_AC = 0x67B,
  AE_CES1_AD = 0x67C,
  AE_CES1_BA = 0x67D,
  AE_CES1_BB = 0x67E,
  AE_CES1_BC = 0x67F,
  AE_CES1_BD = 0x680,
  AE_CES1_CA = 0x681,
  AE_CES1_CB = 0x682,
  AE_CES1_CC = 0x683,
  AE_CES1_CD = 0x684,
  AE_CES1_CE = 0x685,
  AE_CES1_CF = 0x686,
  AE_CES1_DA = 0x687,
  AE_CES1_DB = 0x688,
  AE_CES2_AA = 0x689,
  AE_CES2_AB = 0x68A,
  AE_CES2_AC = 0x68B,
  AE_CES2_AD = 0x68C,
  AE_CES2_AE = 0x68D,
  AE_CES2_AF = 0x68E,
  AE_CES2_AG = 0x68F,
  AE_CES2_ZA = 0x690,
  AE_CES2_ZB = 0x691,
  AE_CES2_ZC = 0x692,
  AE_CES2_ZD = 0x693,
  AE_CES2_ZE = 0x694,
  AE_CES2_ZF = 0x695,
  AE_CES2_ZG = 0x696,
  AE_CES2_ZH = 0x697,
  AE_CESX_AA = 0x698,
  AE_CESX_AB = 0x699,
  AE_CESX_AC = 0x69A,
  AE_CESX_AD = 0x69B,
  AE_CESX_AE = 0x69C,
  AE_CESX_AF = 0x69D,
  AE_CESX_BA = 0x69E,
  AE_CESX_BB = 0x69F,
  AE_CESX_BC = 0x6A0,
  AE_CESX_BD = 0x6A1,
  AE_CRA1_AA = 0x6A2,
  AE_CRA1_AB = 0x6A3,
  AE_CRA1_AC = 0x6A4,
  AE_CRA1_AD = 0x6A5,
  AE_CRA1_AE = 0x6A6,
  AE_CRA1_AF = 0x6A7,
  AE_CRA1_AG = 0x6A8,
  AE_CRA1_AH = 0x6A9,
  AE_CRA1_AI = 0x6AA,
  AE_CRA1_AJ = 0x6AB,
  AE_CRA1_BA = 0x6AC,
  AE_CRA1_BB = 0x6AD,
  AE_CRA1_BC = 0x6AE,
  AE_CRA1_BD = 0x6AF,
  AE_CRA1_BE = 0x6B0,
  AE_CRA1_BF = 0x6B1,
  AE_CRA1_BG = 0x6B2,
  AE_CRA1_BH = 0x6B3,
  AE_CRA1_BJ = 0x6B4,
  AE_CRA1_BK = 0x6B5,
  AE_CRA1_CA = 0x6B6,
  AE_CRA1_CB = 0x6B7,
  AE_CRA1_DA = 0x6B8,
  AE_CRA1_DB = 0x6B9,
  AE_CRA1_DC = 0x6BA,
  AE_CRA1_DD = 0x6BB,
  AE_CRA1_EA = 0x6BC,
  AE_CRA1_EB = 0x6BD,
  AE_CRA1_EC = 0x6BE,
  AE_CRA1_ED = 0x6BF,
  AE_CRA1_FA = 0x6C0,
  AE_CRA1_FB = 0x6C1,
  AE_CRA1_GA = 0x6C2,
  AE_CRA1_GB = 0x6C3,
  AE_CRA1_GC = 0x6C4,
  AE_CRA1_HA = 0x6C5,
  AE_CRA1_HB = 0x6C6,
  AE_CRA1_HC = 0x6C7,
  AE_CRA1_HD = 0x6C8,
  AE_CRA1_HE = 0x6C9,
  AE_CRA1_HF = 0x6CA,
  AE_CRA1_HG = 0x6CB,
  AE_CRA1_HH = 0x6CC,
  AE_CRA1_HJ = 0x6CD,
  AE_CRA1_HK = 0x6CE,
  AE_CRA1_HL = 0x6CF,
  AE_CRA1_JA = 0x6D0,
  AE_CRA1_JB = 0x6D1,
  AE_CRA1_JC = 0x6D2,
  AE_CRA1_JD = 0x6D3,
  AE_CRA1_KA = 0x6D4,
  AE_CRA1_KB = 0x6D5,
  AE_CRA1_KC = 0x6D6,
  AE_CRA1_KD = 0x6D7,
  AE_CRA1_KE = 0x6D8,
  AE_CRA1_KF = 0x6D9,
  AE_CRA1_KG = 0x6DA,
  AE_CRA1_KH = 0x6DB,
  AE_CRA1_KJ = 0x6DC,
  AE_CRA1_LA = 0x6DD,
  AE_CRA1_MA = 0x6DE,
  AE_CRA1_MB = 0x6DF,
  AE_CRA1_MC = 0x6E0,
  AE_CRA1_MD = 0x6E1,
  AE_CRA2_CA = 0x6E2,
  AE_CRA2_CB = 0x6E3,
  AE_CRA2_CC = 0x6E4,
  AE_CRA2_CD = 0x6E5,
  AE_CRA2_CE = 0x6E6,
  AE_CRA2_CF = 0x6E7,
  AE_CRA2_CG = 0x6E8,
  AE_CRA2_CH = 0x6E9,
  AE_CRA2_CI = 0x6EA,
  AE_CRA2_CJ = 0x6EB,
  AE_CRA2_CK = 0x6EC,
  AE_CRA2_CL = 0x6ED,
  AE_CRA2_CM = 0x6EE,
  AE_CRA2_CN = 0x6EF,
  AE_CRA2_CO = 0x6F0,
  AE_CRA2_DA = 0x6F1,
  AE_CRA2_DB = 0x6F2,
  AE_CRA2_DC = 0x6F3,
  AE_CRA2_DD = 0x6F4,
  AE_CRA2_DE = 0x6F5,
  AE_CRA2_DF = 0x6F6,
  AE_CRA2_DG = 0x6F7,
  AE_CRA2_DH = 0x6F8,
  AE_CRA2_DI = 0x6F9,
  AE_CRA2_DJ = 0x6FA,
  AE_CRA2_DK = 0x6FB,
  AE_CRA2_DL = 0x6FC,
  AE_CRA2_DM = 0x6FD,
  AE_CRA2_DN = 0x6FE,
  AE_CRA2_DO = 0x6FF,
  AE_CRA2_ZA = 0x700,
  AE_CRA2_ZB = 0x701,
  AE_CRA2_ZC = 0x702,
  AE_CRA3_BA = 0x703,
  AE_CRA3_CA = 0x704,
  AE_CRA3_CB = 0x705,
  AE_CRA3_DA = 0x706,
  AE_CRA3_DB = 0x707,
  AE_CRA3_DC = 0x708,
  AE_CRA3_DD = 0x709,
  AE_CRA3_DE = 0x70A,
  AE_CRA3_EA = 0x70B,
  AE_CRA3_EB = 0x70C,
  AE_CRA3_EC = 0x70D,
  AE_HATCH_LOCK = 0x70E,
  AE_DANCE_HIGH_01 = 0x70F,
  AE_DANCE_HIGH_02 = 0x710,
  AE_DANCE_HIGH_03 = 0x711,
  AE_DANCE_HIGH_04 = 0x712,
  AE_DANCE_HIGH_05 = 0x713,
  AE_DANCE_HIGH_06 = 0x714,
  AE_DANCE_HIGH_07 = 0x715,
  AE_DANCE_HIGH_08 = 0x716,
  AE_DANCE_HIGH_09 = 0x717,
  AE_DANCE_HIGH_10 = 0x718,
  AE_DANCE_HIGH_11 = 0x719,
  AE_DANCE_HIGH_12 = 0x71A,
  AE_DANCE_HIGH_13 = 0x71B,
  AE_DANCE_HIGH_14 = 0x71C,
  AE_DANCE_HIGH_15 = 0x71D,
  AE_DANCE_HIGH_16 = 0x71E,
  AE_DANCE_HIGH_17 = 0x71F,
  AE_DANCE_HIGH_18 = 0x720,
  AE_DANCE_HIGH_19 = 0x721,
  AE_DANCE_HIGH_20 = 0x722,
  AE_DANCE_HIGH_21 = 0x723,
  AE_DANCE_HIGH_22 = 0x724,
  AE_DANCE_HIGH_23 = 0x725,
  AE_DANCE_HIGH_24 = 0x726,
  AE_DANCE_HIGH_25 = 0x727,
  AE_DANCE_HIGH_26 = 0x728,
  AE_DANCE_HIGH_27 = 0x729,
  AE_DANCE_HIGH_28 = 0x72A,
  AE_DANCE_HIGH_29 = 0x72B,
  AE_DANCE_HIGH_30 = 0x72C,
  AE_DANCE_HIGH_31 = 0x72D,
  AE_DANCE_HIGH_32 = 0x72E,
  AE_DANCE_HIGH_33 = 0x72F,
  AE_DANCE_HIGH_34 = 0x730,
  AE_DANCE_HIGH_35 = 0x731,
  AE_DANCE_HIGH_36 = 0x732,
  AE_DANCE_HIGH_37 = 0x733,
  AE_DANCE_HIGH_38 = 0x734,
  AE_DANCE_HIGH_39 = 0x735,
  AE_DANCE_HIGH_40 = 0x736,
  AE_DANCE_HIGH_41 = 0x737,
  AE_DANCE_HIGH_42 = 0x738,
  AE_DANCE_HIGH_43 = 0x739,
  AE_DANCE_HIGH_44 = 0x73A,
  AE_DANCE_HIGH_45 = 0x73B,
  AE_DANCE_HIGH_46 = 0x73C,
  AE_DANCE_HIGH_47 = 0x73D,
  AE_DANCE_HIGH_48 = 0x73E,
  AE_DANCE_HIGH_49 = 0x73F,
  AE_DANCE_HIGH_50 = 0x740,
  AE_DANCE_HIGH_51 = 0x741,
  AE_DANCE_HIGH_52 = 0x742,
  AE_DANCE_HIGH_53 = 0x743,
  AE_DANCE_HIGH_54 = 0x744,
  AE_DANCE_HIGH_55 = 0x745,
  AE_DANCE_HIGH_56 = 0x746,
  AE_DANCE_LOW_01 = 0x747,
  AE_DANCE_LOW_02 = 0x748,
  AE_DANCE_LOW_03 = 0x749,
  AE_DANCE_LOW_04 = 0x74A,
  AE_DANCE_LOW_05 = 0x74B,
  AE_DANCE_LOW_06 = 0x74C,
  AE_DANCE_LOW_07 = 0x74D,
  AE_DANCE_LOW_08 = 0x74E,
  AE_DANCE_LOW_09 = 0x74F,
  AE_DANCE_LOW_10 = 0x750,
  AE_DANCE_LOW_11 = 0x751,
  AE_DANCE_LOW_12 = 0x752,
  AE_DANCE_LOW_13 = 0x753,
  AE_DANCE_LOW_14 = 0x754,
  AE_DANCE_LOW_15 = 0x755,
  AE_DANCE_LOW_16 = 0x756,
  AE_DANCE_LOW_17 = 0x757,
  AE_DANCE_LOW_18 = 0x758,
  AE_DANCE_LOW_19 = 0x759,
  AE_DANCE_LOW_20 = 0x75A,
  AE_DANCE_LOW_21 = 0x75B,
  AE_DANCE_LOW_22 = 0x75C,
  AE_DANCE_LOW_23 = 0x75D,
  AE_DANCE_LOW_24 = 0x75E,
  AE_DANCE_LOW_25 = 0x75F,
  AE_DANCE_LOW_26 = 0x760,
  AE_DANCE_LOW_27 = 0x761,
  AE_DANCE_LOW_28 = 0x762,
  AE_DANCE_LOW_29 = 0x763,
  AE_DANCE_LOW_30 = 0x764,
  AE_DANCE_LOW_31 = 0x765,
  AE_DANCE_LOW_32 = 0x766,
  AE_DANCE_LOW_33 = 0x767,
  AE_DANCE_LOW_34 = 0x768,
  AE_DANCE_LOW_35 = 0x769,
  AE_DANCE_LOW_36 = 0x76A,
  AE_DANCE_LOW_37 = 0x76B,
  AE_DANCE_LOW_38 = 0x76C,
  AE_DANCE_LOW_39 = 0x76D,
  AE_DANCE_LOW_40 = 0x76E,
  AE_DANCE_LOW_41 = 0x76F,
  AE_DANCE_LOW_42 = 0x770,
  AE_DANCE_LOW_43 = 0x771,
  AE_DANCE_LOW_44 = 0x772,
  AE_DANCE_LOW_45 = 0x773,
  AE_DANCE_LOW_46 = 0x774,
  AE_DANCE_LOW_47 = 0x775,
  AE_DANCE_LOW_48 = 0x776,
  AE_DANCE_LOW_49 = 0x777,
  AE_DANCE_LOW_50 = 0x778,
  AE_DANCE_LOW_51 = 0x779,
  AE_DANCE_LOW_52 = 0x77A,
  AE_DANCE_LOW_53 = 0x77B,
  AE_DANCE_LOW_54 = 0x77C,
  AE_DANCE_LOW_55 = 0x77D,
  AE_DANCE_LOW_56 = 0x77E,
  AE_DANCE_MED_01 = 0x77F,
  AE_DANCE_MED_02 = 0x780,
  AE_DANCE_MED_03 = 0x781,
  AE_DANCE_MED_04 = 0x782,
  AE_DANCE_MED_05 = 0x783,
  AE_DANCE_MED_06 = 0x784,
  AE_DANCE_MED_07 = 0x785,
  AE_DANCE_MED_08 = 0x786,
  AE_DANCE_MED_09 = 0x787,
  AE_DANCE_MED_10 = 0x788,
  AE_DANCE_MED_11 = 0x789,
  AE_DANCE_MED_12 = 0x78A,
  AE_DANCE_MED_13 = 0x78B,
  AE_DANCE_MED_14 = 0x78C,
  AE_DANCE_MED_15 = 0x78D,
  AE_DANCE_MED_16 = 0x78E,
  AE_DANCE_MED_17 = 0x78F,
  AE_DANCE_MED_18 = 0x790,
  AE_DANCE_MED_19 = 0x791,
  AE_DANCE_MED_20 = 0x792,
  AE_DANCE_MED_21 = 0x793,
  AE_DANCE_MED_22 = 0x794,
  AE_DANCE_MED_23 = 0x795,
  AE_DANCE_MED_24 = 0x796,
  AE_DANCE_MED_25 = 0x797,
  AE_DANCE_MED_26 = 0x798,
  AE_DANCE_MED_27 = 0x799,
  AE_DANCE_MED_28 = 0x79A,
  AE_DANCE_MED_29 = 0x79B,
  AE_DANCE_MED_30 = 0x79C,
  AE_DANCE_MED_31 = 0x79D,
  AE_DANCE_MED_32 = 0x79E,
  AE_DANCE_MED_33 = 0x79F,
  AE_DANCE_MED_34 = 0x7A0,
  AE_DANCE_MED_35 = 0x7A1,
  AE_DANCE_MED_36 = 0x7A2,
  AE_DANCE_MED_37 = 0x7A3,
  AE_DANCE_MED_38 = 0x7A4,
  AE_DANCE_MED_39 = 0x7A5,
  AE_DANCE_MED_40 = 0x7A6,
  AE_DANCE_MED_41 = 0x7A7,
  AE_DANCE_MED_42 = 0x7A8,
  AE_DANCE_MED_43 = 0x7A9,
  AE_DANCE_MED_44 = 0x7AA,
  AE_DANCE_MED_45 = 0x7AB,
  AE_DANCE_MED_46 = 0x7AC,
  AE_DANCE_MED_47 = 0x7AD,
  AE_DANCE_MED_48 = 0x7AE,
  AE_DANCE_MED_49 = 0x7AF,
  AE_DANCE_MED_50 = 0x7B0,
  AE_DANCE_MED_51 = 0x7B1,
  AE_DANCE_MED_52 = 0x7B2,
  AE_DANCE_MED_53 = 0x7B3,
  AE_DANCE_MED_54 = 0x7B4,
  AE_DANCE_MED_55 = 0x7B5,
  AE_DANCE_MED_56 = 0x7B6,
  AE_DANCE_NOT_01 = 0x7B7,
  AE_DANCE_NOT_02 = 0x7B8,
  AE_DANCE_NOT_03 = 0x7B9,
  AE_DANCE_NOT_04 = 0x7BA,
  AE_DANCE_NOT_05 = 0x7BB,
  AE_DANCE_NOT_06 = 0x7BC,
  AE_DANCE_NOT_07 = 0x7BD,
  AE_DANCE_NOT_08 = 0x7BE,
  AE_DANCE_NOT_09 = 0x7BF,
  AE_DANCE_NOT_10 = 0x7C0,
  AE_DANCE_NOT_11 = 0x7C1,
  AE_DANCE_NOT_12 = 0x7C2,
  AE_DANCE_NOT_13 = 0x7C3,
  AE_DANCE_NOT_14 = 0x7C4,
  AE_DANCE_NOT_15 = 0x7C5,
  AE_DANCE_NOT_16 = 0x7C6,
  AE_DANCE_NOT_17 = 0x7C7,
  AE_DANCE_NOT_18 = 0x7C8,
  AE_DANCE_NOT_19 = 0x7C9,
  AE_DANCE_NOT_20 = 0x7CA,
  AE_DANCE_NOT_21 = 0x7CB,
  AE_DANCE_NOT_22 = 0x7CC,
  AE_DANCE_NOT_23 = 0x7CD,
  AE_DANCE_NOT_24 = 0x7CE,
  AE_DANCE_NOT_25 = 0x7CF,
  AE_DANCE_NOT_26 = 0x7D0,
  AE_DANCE_NOT_27 = 0x7D1,
  AE_DANCE_NOT_28 = 0x7D2,
  AE_DANCE_NOT_29 = 0x7D3,
  AE_DANCE_NOT_30 = 0x7D4,
  AE_DANCE_NOT_31 = 0x7D5,
  AE_DANCE_NOT_32 = 0x7D6,
  AE_DANCE_NOT_33 = 0x7D7,
  AE_DANCE_NOT_34 = 0x7D8,
  AE_DANCE_NOT_35 = 0x7D9,
  AE_DANCE_NOT_36 = 0x7DA,
  AE_DANCE_NOT_37 = 0x7DB,
  AE_DANCE_NOT_38 = 0x7DC,
  AE_DANCE_NOT_39 = 0x7DD,
  AE_DANCE_NOT_40 = 0x7DE,
  AE_DANCE_NOT_41 = 0x7DF,
  AE_DANCE_NOT_42 = 0x7E0,
  AE_DANCE_NOT_43 = 0x7E1,
  AE_DANCE_NOT_44 = 0x7E2,
  AE_DANCE_NOT_45 = 0x7E3,
  AE_DANCE_NOT_46 = 0x7E4,
  AE_DANCE_NOT_47 = 0x7E5,
  AE_DANCE_NOT_48 = 0x7E6,
  AE_DANCE_NOT_49 = 0x7E7,
  AE_DANCE_NOT_50 = 0x7E8,
  AE_DANCE_NOT_51 = 0x7E9,
  AE_DANCE_NOT_52 = 0x7EA,
  AE_DANCE_NOT_53 = 0x7EB,
  AE_DANCE_NOT_54 = 0x7EC,
  AE_DANCE_NOT_55 = 0x7ED,
  AE_DANCE_NOT_56 = 0x7EE,
  AE__DA_NANG_CONTAINER_OPEN = 0x7EF,
  AE__DA_NANG_HEAVY_DOOR_OPEN = 0x7F0,
  AE_DC2_AA = 0x7F1,
  AE_DC2_AB = 0x7F2,
  AE_DC2_AC = 0x7F3,
  AE_DC2_AD = 0x7F4,
  AE_DC2_AE = 0x7F5,
  AE_DC2_AF = 0x7F6,
  AE_DC2_AG = 0x7F7,
  AE_DC2_AH = 0x7F8,
  AE_DC2_AI = 0x7F9,
  AE_DC2_AJ = 0x7FA,
  AE_DC2_AK = 0x7FB,
  AE_DC2_AL = 0x7FC,
  AE_CEMENT_POUR = 0x7FD,
  AE_SMASH_PORTACABIN = 0x7FE,
  AE_SMASH_PORTACABIN2 = 0x7FF,
  AE_SMASH_PORTACABIN3 = 0x800,
  AE_SMASH_PORTACABIN4 = 0x801,
  AE_TOILET_FLUSH = 0x802,
  AE_DES1_AA = 0x803,
  AE_DES1_AB = 0x804,
  AE_DES1_AC = 0x805,
  AE_DES1_AD = 0x806,
  AE_DES1_AE = 0x807,
  AE_DES1_AF = 0x808,
  AE_DES1_AG = 0x809,
  AE_DES1_AH = 0x80A,
  AE_DES1_AJ = 0x80B,
  AE_DES1_AK = 0x80C,
  AE_DES1_AL = 0x80D,
  AE_DES1_AM = 0x80E,
  AE_DES1_AN = 0x80F,
  AE_DES1_AO = 0x810,
  AE_DES1_AP = 0x811,
  AE_DES1_AQ = 0x812,
  AE_DES1_AR = 0x813,
  AE_DES1_BA = 0x814,
  AE_DES1_BB = 0x815,
  AE_DES1_BC = 0x816,
  AE_DES1_BD = 0x817,
  AE_DES1_BE = 0x818,
  AE_DES1_BF = 0x819,
  AE_DES1_BG = 0x81A,
  AE_DES1_BH = 0x81B,
  AE_DES1_BJ = 0x81C,
  AE_DES1_CA = 0x81D,
  AE_DES1_CB = 0x81E,
  AE_DES1_CC = 0x81F,
  AE_DES1_CD = 0x820,
  AE_DES1_CE = 0x821,
  AE_DES1_CF = 0x822,
  AE_DES1_CG = 0x823,
  AE_DES2_AA = 0x824,
  AE_DES2_AB = 0x825,
  AE_DES2_AC = 0x826,
  AE_DES2_AD = 0x827,
  AE_DES2_AE = 0x828,
  AE_DES2_AF = 0x829,
  AE_DES2_BA = 0x82A,
  AE_DES2_BB = 0x82B,
  AE_DES2_BC = 0x82C,
  AE_DES2_CA = 0x82D,
  AE_DES2_CB = 0x82E,
  AE_DES2_CC = 0x82F,
  AE_DES2_DA = 0x830,
  AE_DES2_DB = 0x831,
  AE_DES2_DC = 0x832,
  AE_DES2_EA = 0x833,
  AE_DES2_EB = 0x834,
  AE_DES2_EC = 0x835,
  AE_DES2_ED = 0x836,
  AE_DES2_EE = 0x837,
  AE_DES2_EF = 0x838,
  AE_DES2_FA = 0x839,
  AE_DES2_FB = 0x83A,
  AE_DES2_FC = 0x83B,
  AE_DES2_GA = 0x83C,
  AE_DES2_GB = 0x83D,
  AE_DES2_GC = 0x83E,
  AE_DES2_HA = 0x83F,
  AE_DES2_HB = 0x840,
  AE_DES2_HC = 0x841,
  AE_DES2_JA = 0x842,
  AE_DES2_JB = 0x843,
  AE_DES2_JC = 0x844,
  AE_DES2_KA = 0x845,
  AE_DES2_KB = 0x846,
  AE_DES2_KC = 0x847,
  AE_DES2_KD = 0x848,
  AE_DES2_KE = 0x849,
  AE_DES2_LA = 0x84A,
  AE_DES3_AA = 0x84B,
  AE_DES3_AB = 0x84C,
  AE_DES3_AC = 0x84D,
  AE_DES3_AD = 0x84E,
  AE_DES3_AE = 0x84F,
  AE_DES3_BA = 0x850,
  AE_DES3_BB = 0x851,
  AE_DES3_BC = 0x852,
  AE_DES3_BD = 0x853,
  AE_DES3_BE = 0x854,
  AE_DES3_BF = 0x855,
  AE_DES3_BG = 0x856,
  AE_DES3_BH = 0x857,
  AE_DES3_CA = 0x858,
  AE_DES3_CB = 0x859,
  AE_DES3_CC = 0x85A,
  AE_DES3_CD = 0x85B,
  AE_DES6_AA = 0x85C,
  AE_DES6_AB = 0x85D,
  AE_DES6_AD = 0x85E,
  AE_DES6_AE = 0x85F,
  AE_DES6_AF = 0x860,
  AE_DES6_AG = 0x861,
  AE_DES6_AH = 0x862,
  AE_DES6_AJ = 0x863,
  AE_DES6_AK = 0x864,
  AE_DES6_AM = 0x865,
  AE_DES6_AN = 0x866,
  AE_DES6_BA = 0x867,
  AE_DES6_BB = 0x868,
  AE_DES6_BC = 0x869,
  AE_DES6_BD = 0x86A,
  AE_DES6_CA = 0x86B,
  AE_DES6_CB = 0x86C,
  AE_DES6_CC = 0x86D,
  AE_DES6_CD = 0x86E,
  AE_DES6_DA = 0x86F,
  AE_DES8_AA = 0x870,
  AE_DES8_BA = 0x871,
  AE_DES8_BB = 0x872,
  AE_DES8_BC = 0x873,
  AE_DES8_BD = 0x874,
  AE_DES8_CA = 0x875,
  AE_DES8_CB = 0x876,
  AE_DES8_CC = 0x877,
  AE_DES8_CD = 0x878,
  AE_DES8_DA = 0x879,
  AE_DES8_DB = 0x87A,
  AE_DES8_DC = 0x87B,
  AE_DES8_DD = 0x87C,
  AE_DES8_EA = 0x87D,
  AE_DES8_EB = 0x87E,
  AE_DES8_EC = 0x87F,
  AE_DES8_ED = 0x880,
  AE_DES8_EE = 0x881,
  AE_DES8_EF = 0x882,
  AE_DES8_FA = 0x883,
  AE_DES8_FB = 0x884,
  AE_DES8_FC = 0x885,
  AE_DES8_GA = 0x886,
  AE_DES8_GB = 0x887,
  AE_DES8_GC = 0x888,
  AE_DES8_GD = 0x889,
  AE_DES8_GE = 0x88A,
  AE_DES8_GF = 0x88B,
  AE_DES8_GG = 0x88C,
  AE_DES8_GH = 0x88D,
  AE_DES8_GI = 0x88E,
  AE_DES8_GJ = 0x88F,
  AE_DES8_GK = 0x890,
  AE_DES8_GL = 0x891,
  AE_DES8_GM = 0x892,
  AE_DES8_GN = 0x893,
  AE_DES8_HA = 0x894,
  AE_DES8_HB = 0x895,
  AE_DES8_JA = 0x896,
  AE_DES8_JB = 0x897,
  AE_DES8_JC = 0x898,
  AE_DES8_KA = 0x899,
  AE_DES8_LA = 0x89A,
  AE_DES8_LC = 0x89B,
  AE_DES8_MB = 0x89C,
  AE_DES8_MD = 0x89D,
  AE_DES8_ME = 0x89E,
  AE_DES9_AA = 0x89F,
  AE_DES9_AB = 0x8A0,
  AE_DES9_BA = 0x8A1,
  AE_DES9_BB = 0x8A2,
  AE_DOGG_AA = 0x8A3,
  AE_DOGG_AB = 0x8A4,
  AE_DOGG_AC = 0x8A5,
  AE_DOGG_AD = 0x8A6,
  AE_DOGG_AE = 0x8A7,
  AE_DOGG_AF = 0x8A8,
  AE_DOGG_AG = 0x8A9,
  AE_DOGG_AH = 0x8AA,
  AE_DOGG_AI = 0x8AB,
  AE_DOGG_AJ = 0x8AC,
  AE_DOGG_BA = 0x8AD,
  AE_DOGG_BB = 0x8AE,
  AE_DOGG_BC = 0x8AF,
  AE_DOGG_CA = 0x8B0,
  AE_DOGG_CB = 0x8B1,
  AE_DOGG_CC = 0x8B2,
  AE_DOGG_CD = 0x8B3,
  AE_DOGG_CE = 0x8B4,
  AE_DOGG_CF = 0x8B5,
  AE_DOGG_DA = 0x8B6,
  AE_DOGG_DB = 0x8B7,
  AE_DOGG_DC = 0x8B8,
  AE_DOGG_DD = 0x8B9,
  AE_DOGG_DE = 0x8BA,
  AE_DOGG_DF = 0x8BB,
  AE_DOGG_DG = 0x8BC,
  AE_DOGG_DH = 0x8BD,
  AE_DOGG_DI = 0x8BE,
  AE_DOGG_DJ = 0x8BF,
  AE_DOGG_EA = 0x8C0,
  AE_DOGG_EB = 0x8C1,
  AE_DOGG_EC = 0x8C2,
  AE_DOGG_FA = 0x8C3,
  AE_DOGG_FB = 0x8C4,
  AE_DOGG_FC = 0x8C5,
  AE_DOGG_FD = 0x8C6,
  AE_DOGG_FE = 0x8C7,
  AE_DOGG_FF = 0x8C8,
  AE_DOGG_FG = 0x8C9,
  AE_DOGG_GA = 0x8CA,
  AE_DOGG_GB = 0x8CB,
  AE_DOGG_GC = 0x8CC,
  AE_PISSING = 0x8CD,
  AE_THRUST = 0x8CE,
  AE_EXPLODE_LONG = 0x8CF,
  AE_EXPLODE_SHORT = 0x8D0,
  AE_GAME_OVER = 0x8D1,
  AE_MENU_DESELECT = 0x8D2,
  AE_MENU_SELECT = 0x8D3,
  AE_PICKUP_DARK = 0x8D4,
  AE_PICKUP_LIGHT = 0x8D5,
  AE_SHOOT = 0x8D6,
  AE_TOUCH_DARK = 0x8D7,
  AE_TOUCH_LIGHT = 0x8D8,
  AE_SWAT_WALL_BREAK = 0x8D9,
  AE_DETONATION_SIREN = 0x8DA,
  AE_FAR2_AA = 0x8DB,
  AE_FAR2_AB = 0x8DC,
  AE_FAR2_AC = 0x8DD,
  AE_FAR2_AD = 0x8DE,
  AE_FAR2_AE = 0x8DF,
  AE_FAR2_AF = 0x8E0,
  AE_FAR2_AG = 0x8E1,
  AE_FAR2_AH = 0x8E2,
  AE_FAR2_AI = 0x8E3,
  AE_FAR2_BA = 0x8E4,
  AE_FAR2_BB = 0x8E5,
  AE_FAR2_BC = 0x8E6,
  AE_FAR2_BD = 0x8E7,
  AE_FAR2_BE = 0x8E8,
  AE_FAR2_BF = 0x8E9,
  AE_FAR2_BG = 0x8EA,
  AE_FAR2_BH = 0x8EB,
  AE_FAR2_CA = 0x8EC,
  AE_FAR2_CB = 0x8ED,
  AE_FAR2_CC = 0x8EE,
  AE_FAR2_CD = 0x8EF,
  AE_FAR2_CE = 0x8F0,
  AE_FAR2_CF = 0x8F1,
  AE_FAR2_CG = 0x8F2,
  AE_FAR2_CH = 0x8F3,
  AE_FAR2_CI = 0x8F4,
  AE_FAR2_ZA = 0x8F5,
  AE_FAR2_ZB = 0x8F6,
  AE_FAR2_ZC = 0x8F7,
  AE_FAR3_CA = 0x8F8,
  AE_FAR3_CB = 0x8F9,
  AE_FAR3_CC = 0x8FA,
  AE_FAR3_CD = 0x8FB,
  AE_FAR3_CE = 0x8FC,
  AE_FAR3_CF = 0x8FD,
  AE_FAR3_CG = 0x8FE,
  AE_FAR3_CH = 0x8FF,
  AE_FAR3_CJ = 0x900,
  AE_FAR3_CK = 0x901,
  AE_FAR3_DA = 0x902,
  AE_FAR3_DB = 0x903,
  AE_FAR3_DC = 0x904,
  AE_FAR3_DD = 0x905,
  AE_FAR3_DE = 0x906,
  AE_FAR3_EA = 0x907,
  AE_FAR3_EB = 0x908,
  AE_FAR3_EC = 0x909,
  AE_FAR3_FA = 0x90A,
  AE_FAR3_FB = 0x90B,
  AE_FAR3_FC = 0x90C,
  AE_FAR3_FD = 0x90D,
  AE_FAR3_GA = 0x90E,
  AE_FAR3_GB = 0x90F,
  AE_FAR3_GC = 0x910,
  AE_FAR3_HA = 0x911,
  AE_FAR3_HB = 0x912,
  AE_FAR3_HC = 0x913,
  AE_FAR3_JA = 0x914,
  AE_FAR3_JB = 0x915,
  AE_FAR3_JC = 0x916,
  AE_FAR3_JD = 0x917,
  AE_FAR3_JE = 0x918,
  AE_FAR3_JF = 0x919,
  AE_FAR3_JG = 0x91A,
  AE_FAR3_KA = 0x91B,
  AE_FAR3_KB = 0x91C,
  AE_FAR3_KC = 0x91D,
  AE_FAR3_KD = 0x91E,
  AE_FAR3_LA = 0x91F,
  AE_FAR3_LB = 0x920,
  AE_FAR3_LC = 0x921,
  AE_FAR3_MA = 0x922,
  AE_FAR3_MB = 0x923,
  AE_FAR3_MC = 0x924,
  AE_FAR3_MD = 0x925,
  AE_FAR3_ME = 0x926,
  AE_FAR3_MF = 0x927,
  AE_FAR3_MG = 0x928,
  AE_FAR3_MH = 0x929,
  AE_FAR3_MJ = 0x92A,
  AE_FAR3_MK = 0x92B,
  AE_FAR3_ML = 0x92C,
  AE_FAR3_MM = 0x92D,
  AE_FAR3_MN = 0x92E,
  AE_FAR3_MO = 0x92F,
  AE_FAR3_MP = 0x930,
  AE_FAR3_NA = 0x931,
  AE_FAR3_NB = 0x932,
  AE_FAR4_AA = 0x933,
  AE_FAR4_AB = 0x934,
  AE_FAR4_AC = 0x935,
  AE_FAR4_AD = 0x936,
  AE_FAR4_AE = 0x937,
  AE_FAR4_AF = 0x938,
  AE_FAR4_AG = 0x939,
  AE_FAR4_AH = 0x93A,
  AE_FAR4_AJ = 0x93B,
  AE_FAR5_AA = 0x93C,
  AE_FAR5_AB = 0x93D,
  AE_FAR5_BA = 0x93E,
  AE_FAR5_BB = 0x93F,
  AE_FIN1_AA = 0x940,
  AE_FIN1_AC = 0x941,
  AE_FIN1_AD = 0x942,
  AE_FIN1_AE = 0x943,
  AE_FIN1_AH = 0x944,
  AE_FIN1_AS = 0x945,
  AE_FIN1_BC = 0x946,
  AE_FIN1_BD = 0x947,
  AE_FIN1_BE = 0x948,
  AE_FIN1_BK = 0x949,
  AE_FIN1_BL = 0x94A,
  AE_FIN1_BY = 0x94B,
  AE_FIN1_CB = 0x94C,
  AE_FIN1_CC = 0x94D,
  AE_FIN1_CD = 0x94E,
  AE_FIN1_CE = 0x94F,
  AE_FIN1_CI = 0x950,
  AE_FIN1_CJ = 0x951,
  AE_FIN1_CK = 0x952,
  AE_FIN1_CL = 0x953,
  AE_FIN1_CO = 0x954,
  AE_FIN1_DA = 0x955,
  AE_FIN1_DB = 0x956,
  AE_FIN1_DC = 0x957,
  AE_FIN1_EA = 0x958,
  AE_FIN1_EB = 0x959,
  AE_FIN1_GA = 0x95A,
  AE_FIN1_GB = 0x95B,
  AE_FIN1_GC = 0x95C,
  AE_FIN1_GD = 0x95D,
  AE_FIN1_GE = 0x95E,
  AE_FIN1_GF = 0x95F,
  AE_FIN1_GG = 0x960,
  AE_FIN1_GH = 0x961,
  AE_FIN1_GI = 0x962,
  AE_FIN1_GJ = 0x963,
  AE_FIN1_GK = 0x964,
  AE_FIN1_GL = 0x965,
  AE_FIN1_GM = 0x966,
  AE_FIN1_GN = 0x967,
  AE_FIN1_GO = 0x968,
  AE_FIN1_GP = 0x969,
  AE_FIN1_GQ = 0x96A,
  AE_FIN1_GR = 0x96B,
  AE_FIN1_GS = 0x96C,
  AE_FIN1_GT = 0x96D,
  AE_FIN1_GV = 0x96E,
  AE_FIN1_GW = 0x96F,
  AE_FIN1_HA = 0x970,
  AE_FIN1_HB = 0x971,
  AE_FIN1_HC = 0x972,
  AE_FIN1_HD = 0x973,
  AE_FIN1_HE = 0x974,
  AE_FIN1_HF = 0x975,
  AE_FIN1_HG = 0x976,
  AE_FIN1_HH = 0x977,
  AE_FIN1_HI = 0x978,
  AE_FIN1_HJ = 0x979,
  AE_FIN1_HK = 0x97A,
  AE_FIN1_HL = 0x97B,
  AE_FIN1_HM = 0x97C,
  AE_FIN1_JA = 0x97D,
  AE_FIN1_JB = 0x97E,
  AE_FIN1_JC = 0x97F,
  AE_FIN1_JD = 0x980,
  AE_FIN1_JE = 0x981,
  AE_FIN1_JF = 0x982,
  AE_FIN1_JG = 0x983,
  AE_FIN1_JH = 0x984,
  AE_FIN1_JI = 0x985,
  AE_FIN1_JJ = 0x986,
  AE_FIN1_JK = 0x987,
  AE_FIN1_JL = 0x988,
  AE_FIN1_JM = 0x989,
  AE_FIN1_JN = 0x98A,
  AE_FIN1_JO = 0x98B,
  AE_FIN1_KA = 0x98C,
  AE_FIN1_KB = 0x98D,
  AE_FIN1_KC = 0x98E,
  AE_FIN1_KE = 0x98F,
  AE_FIN1_KF = 0x990,
  AE_FIN1_KG = 0x991,
  AE_FIN1_KH = 0x992,
  AE_FIN1_KI = 0x993,
  AE_FIN1_KJ = 0x994,
  AE_FIN1_KK = 0x995,
  AE_FIN1_KL = 0x996,
  AE_FIN1_KM = 0x997,
  AE_FIN1_KO = 0x998,
  AE_FIN1_KP = 0x999,
  AE_FIN1_KQ = 0x99A,
  AE_FIN1_KR = 0x99B,
  AE_FIN1_KS = 0x99C,
  AE_FIN1_KT = 0x99D,
  AE_FIN1_KU = 0x99E,
  AE_FIN1_KV = 0x99F,
  AE_FIN1_KW = 0x9A0,
  AE_FIN1_KX = 0x9A1,
  AE_FIN1_KY = 0x9A2,
  AE_FIN1_LA = 0x9A3,
  AE_FIN1_LB = 0x9A4,
  AE_FIN1_LC = 0x9A5,
  AE_FIN1_LD = 0x9A6,
  AE_FIN1_LE = 0x9A7,
  AE_FIN1_LF = 0x9A8,
  AE_FIN1_LG = 0x9A9,
  AE_FIN1_LH = 0x9AA,
  AE_FIN1_LI = 0x9AB,
  AE_FIN1_LJ = 0x9AC,
  AE_FIN1_LK = 0x9AD,
  AE_FIN1_LL = 0x9AE,
  AE_FIN1_LM = 0x9AF,
  AE_FIN1_LN = 0x9B0,
  AE_FIN1_LO = 0x9B1,
  AE_FIN1_LP = 0x9B2,
  AE_FIN1_LQ = 0x9B3,
  AE_FIN1_LR = 0x9B4,
  AE_FIN1_LS = 0x9B5,
  AE_FIN1_LT = 0x9B6,
  AE_FIN1_LU = 0x9B7,
  AE_FIN1_LV = 0x9B8,
  AE_FIN1_LW = 0x9B9,
  AE_FIN1_LX = 0x9BA,
  AE_FIN1_MA = 0x9BB,
  AE_FIN1_MB = 0x9BC,
  AE_FIN1_MC = 0x9BD,
  AE_FIN1_MD = 0x9BE,
  AE_FIN1_ME = 0x9BF,
  AE_FIN1_MF = 0x9C0,
  AE_FIN1_MG = 0x9C1,
  AE_FIN1_MH = 0x9C2,
  AE_FIN1_MI = 0x9C3,
  AE_FIN1_MJ = 0x9C4,
  AE_FIN1_MK = 0x9C5,
  AE_FIN1_ML = 0x9C6,
  AE_FIN1_MM = 0x9C7,
  AE_FIN1_MN = 0x9C8,
  AE_FIN1_MO = 0x9C9,
  AE_FIN1_MP = 0x9CA,
  AE_FIN1_MQ = 0x9CB,
  AE_FIN1_MR = 0x9CC,
  AE_FIN1_MS = 0x9CD,
  AE_FIN1_MT = 0x9CE,
  AE_FIN1_MU = 0x9CF,
  AE_FIN1_MV = 0x9D0,
  AE_FIN1_MW = 0x9D1,
  AE_FIN1_MX = 0x9D2,
  AE_FIN1_ZA = 0x9D3,
  AE_FIN1_ZB = 0x9D4,
  AE_FIN1_ZC = 0x9D5,
  AE_FIN1_ZD = 0x9D6,
  AE_FIN2_AA = 0x9D7,
  AE_FIN2_AB = 0x9D8,
  AE_FIN2_AC = 0x9D9,
  AE_FIN2_AD = 0x9DA,
  AE_FIN2_AE = 0x9DB,
  AE_FIN2_AF = 0x9DC,
  AE_FIN2_BA = 0x9DD,
  AE_FIN2_BB = 0x9DE,
  AE_FIN2_BC = 0x9DF,
  AE_FIN2_BD = 0x9E0,
  AE_FIN2_BE = 0x9E1,
  AE_FIN2_BF = 0x9E2,
  AE_FIN2_BG = 0x9E3,
  AE_FIN2_BH = 0x9E4,
  AE_FIN2_BJ = 0x9E5,
  AE_FIN2_CA = 0x9E6,
  AE_FIN2_CB = 0x9E7,
  AE_FIN2_CC = 0x9E8,
  AE_FIN2_CD = 0x9E9,
  AE_PLANE_DOOR_KICK = 0x9EA,
  AE_GAR1_AA = 0x9EB,
  AE_GAR1_AB = 0x9EC,
  AE_GAR1_AC = 0x9ED,
  AE_GAR1_AD = 0x9EE,
  AE_GAR1_AE = 0x9EF,
  AE_GAR1_AF = 0x9F0,
  AE_GAR1_AG = 0x9F1,
  AE_GAR1_AH = 0x9F2,
  AE_GAR1_AJ = 0x9F3,
  AE_GAR1_BA = 0x9F4,
  AE_GAR1_BB = 0x9F5,
  AE_GAR1_BC = 0x9F6,
  AE_GAR1_BD = 0x9F7,
  AE_GAR1_BE = 0x9F8,
  AE_GAR1_BF = 0x9F9,
  AE_GAR1_BG = 0x9FA,
  AE_GAR1_BH = 0x9FB,
  AE_GAR1_CA = 0x9FC,
  AE_GAR1_CB = 0x9FD,
  AE_GAR1_CC = 0x9FE,
  AE_GAR1_DA = 0x9FF,
  AE_GAR1_DB = 0xA00,
  AE_GAR1_DC = 0xA01,
  AE_GAR1_DD = 0xA02,
  AE_GAR1_DE = 0xA03,
  AE_GAR1_DF = 0xA04,
  AE_GAR1_EA = 0xA05,
  AE_GAR1_EB = 0xA06,
  AE_GAR1_EC = 0xA07,
  AE_GAR1_ED = 0xA08,
  AE_GAR1_EE = 0xA09,
  AE_GAR1_FA = 0xA0A,
  AE_GAR1_FB = 0xA0B,
  AE_GAR1_FC = 0xA0C,
  AE_GAR1_FD = 0xA0D,
  AE_GAR1_FE = 0xA0E,
  AE_GAR1_FF = 0xA0F,
  AE_GAR1_FG = 0xA10,
  AE_GAR1_GA = 0xA11,
  AE_GAR1_GB = 0xA12,
  AE_GAR1_GC = 0xA13,
  AE_GAR1_GD = 0xA14,
  AE_GAR1_GE = 0xA15,
  AE_GAR1_GF = 0xA16,
  AE_GAR1_GG = 0xA17,
  AE_GAR1_GH = 0xA18,
  AE_GAR1_GI = 0xA19,
  AE_GAR1_GJ = 0xA1A,
  AE_GAR1_HA = 0xA1B,
  AE_GAR1_HB = 0xA1C,
  AE_GAR1_HC = 0xA1D,
  AE_GAR1_HD = 0xA1E,
  AE_GAR1_HE = 0xA1F,
  AE_GAR1_HF = 0xA20,
  AE_GAR1_HG = 0xA21,
  AE_GAR1_JA = 0xA22,
  AE_GAR1_JB = 0xA23,
  AE_GAR1_JC = 0xA24,
  AE_GAR1_JD = 0xA25,
  AE_GAR1_JE = 0xA26,
  AE_GAR1_JF = 0xA27,
  AE_GAR1_JG = 0xA28,
  AE_GAR1_JH = 0xA29,
  AE_GAR1_JJ = 0xA2A,
  AE_GAR1_KA = 0xA2B,
  AE_GAR1_KB = 0xA2C,
  AE_GAR1_KC = 0xA2D,
  AE_GAR1_KD = 0xA2E,
  AE_GAR1_KE = 0xA2F,
  AE_GAR1_LA = 0xA30,
  AE_GAR1_LB = 0xA31,
  AE_GAR1_LC = 0xA32,
  AE_GAR1_LD = 0xA33,
  AE_GAR1_MA = 0xA34,
  AE_GAR1_MB = 0xA35,
  AE_GAR1_MC = 0xA36,
  AE_GAR1_MD = 0xA37,
  AE_GAR1_ME = 0xA38,
  AE_GAR1_MF = 0xA39,
  AE_GAR1_MG = 0xA3A,
  AE_GAR1_NA = 0xA3B,
  AE_GAR1_NB = 0xA3C,
  AE_GAR1_NC = 0xA3D,
  AE_GAR1_ND = 0xA3E,
  AE_GAR1_NE = 0xA3F,
  AE_GAR1_NF = 0xA40,
  AE_GAR1_NG = 0xA41,
  AE_GAR1_NH = 0xA42,
  AE_GAR1_NJ = 0xA43,
  AE_GAR1_NK = 0xA44,
  AE_GAR1_OA = 0xA45,
  AE_GAR1_OB = 0xA46,
  AE_GAR1_OC = 0xA47,
  AE_GAR1_OD = 0xA48,
  AE_GAR1_OE = 0xA49,
  AE_GAR1_OF = 0xA4A,
  AE_GAR1_PA = 0xA4B,
  AE_GAR1_PB = 0xA4C,
  AE_GAR1_PC = 0xA4D,
  AE_GAR1_PD = 0xA4E,
  AE_GAR1_PE = 0xA4F,
  AE_GAR1_PF = 0xA50,
  AE_GAR1_PG = 0xA51,
  AE_GAR1_PH = 0xA52,
  AE_GAR1_PJ = 0xA53,
  AE_GAR2_AA = 0xA54,
  AE_GAR2_AB = 0xA55,
  AE_GAR2_AC = 0xA56,
  AE_GAR2_AD = 0xA57,
  AE_GAR2_AE = 0xA58,
  AE_GAR2_AF = 0xA59,
  AE_GAR2_AG = 0xA5A,
  AE_GAR2_AH = 0xA5B,
  AE_GAR2_AJ = 0xA5C,
  AE_GAR2_AK = 0xA5D,
  AE_GAR2_AL = 0xA5E,
  AE_GAR2_AM = 0xA5F,
  AE_GAR2_BA = 0xA60,
  AE_GAR2_BB = 0xA61,
  AE_GAR2_BC = 0xA62,
  AE_G_CLOS1 = 0xA63,
  AE_G_CLOS2 = 0xA64,
  AE_G_OPEN1 = 0xA65,
  AE_G_OPEN2 = 0xA66,
  AE__ACCEPT = 0xA67,
  AE__DECLINE = 0xA68,
  AE__ENEMYFIRE = 0xA69,
  AE__EXPLODE = 0xA6A,
  AE__GAMEOVER = 0xA6B,
  AE__PLAYERFIRE = 0xA6C,
  AE__SELECT = 0xA6D,
  AE_HEAVY_CRATE_LAND = 0xA6E,
  AE_GRO1_AA = 0xA6F,
  AE_GRO1_AB = 0xA70,
  AE_GRO1_AC = 0xA71,
  AE_GRO1_AD = 0xA72,
  AE_GRO1_AE = 0xA73,
  AE_GRO1_BA = 0xA74,
  AE_GRO1_BB = 0xA75,
  AE_GRO1_BC = 0xA76,
  AE_GRO1_BD = 0xA77,
  AE_GRO1_BE = 0xA78,
  AE_GRO1_CA = 0xA79,
  AE_GRO1_CB = 0xA7A,
  AE_GRO1_CC = 0xA7B,
  AE_GRO1_CD = 0xA7C,
  AE_GRO1_CE = 0xA7D,
  AE_GRO1_CF = 0xA7E,
  AE_GRO1_CG = 0xA7F,
  AE_GRO1_CH = 0xA80,
  AE_GRO1_CJ = 0xA81,
  AE_GRO1_CK = 0xA82,
  AE_GRO1_CL = 0xA83,
  AE_GRO1_CM = 0xA84,
  AE_GRO1_CN = 0xA85,
  AE_GRO1_CO = 0xA86,
  AE_GRO1_CP = 0xA87,
  AE_GRO1_CQ = 0xA88,
  AE_GRO1_CR = 0xA89,
  AE_GRO1_CS = 0xA8A,
  AE_GRO1_DA = 0xA8B,
  AE_GRO1_DB = 0xA8C,
  AE_GRO1_EA = 0xA8D,
  AE_GRO1_EB = 0xA8E,
  AE_GRO1_FA = 0xA8F,
  AE_GRO1_FB = 0xA90,
  AE_GRO1_FC = 0xA91,
  AE_GRO1_FD = 0xA92,
  AE_GRO1_FE = 0xA93,
  AE_GRO1_FF = 0xA94,
  AE_GRO1_FG = 0xA95,
  AE_GRO1_FH = 0xA96,
  AE_GRO1_FJ = 0xA97,
  AE_GRO1_GA = 0xA98,
  AE_GRO1_GB = 0xA99,
  AE_GRO1_HA = 0xA9A,
  AE_GRO1_HB = 0xA9B,
  AE_GRO1_JA = 0xA9C,
  AE_GRO1_JB = 0xA9D,
  AE_GRO1_JC = 0xA9E,
  AE_GRO1_JD = 0xA9F,
  AE_GRO1_JE = 0xAA0,
  AE_GRO1_KA = 0xAA1,
  AE_GRO1_KB = 0xAA2,
  AE_GRO1_LA = 0xAA3,
  AE_GRO1_LB = 0xAA4,
  AE_GRO1_LC = 0xAA5,
  AE_GRO1_LD = 0xAA6,
  AE_GRO2_AA = 0xAA7,
  AE_GRO2_AB = 0xAA8,
  AE_GRO2_AC = 0xAA9,
  AE_GRO2_AD = 0xAAA,
  AE_GRO2_BA = 0xAAB,
  AE_GRO2_BB = 0xAAC,
  AE_GRO2_BC = 0xAAD,
  AE_GRO2_CA = 0xAAE,
  AE_GRO2_CB = 0xAAF,
  AE_GRO2_CC = 0xAB0,
  AE_GRO2_CE = 0xAB1,
  AE_GRO2_DA = 0xAB2,
  AE_GRO2_DB = 0xAB3,
  AE_GRO2_DC = 0xAB4,
  AE_GRO2_DD = 0xAB5,
  AE_GRO2_EA = 0xAB6,
  AE_GRO2_EB = 0xAB7,
  AE_GRO2_FA = 0xAB8,
  AE_GRO2_GA = 0xAB9,
  AE_GRO2_GB = 0xABA,
  AE_GRO2_GC = 0xABB,
  AE_GRO2_GD = 0xABC,
  AE_GRO2_GE = 0xABD,
  AE__GYM_BIKE_LOOP = 0xABE,
  AE__RUNNING_MACHINE_LOOP = 0xABF,
  AE__GYM_BOXING_BELL = 0xAC0,
  AE__GYM_INCREASE_DIFFICULTY = 0xAC1,
  AE__GYM_PUNCH_BAG_1 = 0xAC2,
  AE__GYM_PUNCH_BAG_2 = 0xAC3,
  AE__GYM_PUNCH_BAG_3 = 0xAC4,
  AE__GYM_REST_WEIGHTS = 0xAC5,
  AE_HE1_AA = 0xAC6,
  AE_HE1_AB = 0xAC7,
  AE_HE1_AC = 0xAC8,
  AE_HE1_AD = 0xAC9,
  AE_HE1_AE = 0xACA,
  AE_HE1_AF = 0xACB,
  AE_HE1_AG = 0xACC,
  AE_HE1_AH = 0xACD,
  AE_HE1_AI = 0xACE,
  AE_HE1_AJ = 0xACF,
  AE_HE1_AK = 0xAD0,
  AE_HE1_AL = 0xAD1,
  AE_HE1_XA = 0xAD2,
  AE_HE1_XB = 0xAD3,
  AE_HE1_ZA = 0xAD4,
  AE_HE1_ZB = 0xAD5,
  AE_HE1_ZC = 0xAD6,
  AE_HE1_ZD = 0xAD7,
  AE_HE1_ZE = 0xAD8,
  AE_HE1_ZF = 0xAD9,
  AE_HE1_ZG = 0xADA,
  AE_HE1_ZH = 0xADB,
  AE_HE1_ZJ = 0xADC,
  AE_HE1_ZK = 0xADD,
  AE_HE1_ZL = 0xADE,
  AE_HE1_ZM = 0xADF,
  AE_HE2_AA = 0xAE0,
  AE_HE2_AB = 0xAE1,
  AE_HE2_AC = 0xAE2,
  AE_HE2_AD = 0xAE3,
  AE_HE2_AE = 0xAE4,
  AE_HE2_AF = 0xAE5,
  AE_HE2_AG = 0xAE6,
  AE_HE2_AH = 0xAE7,
  AE_HE2_AJ = 0xAE8,
  AE_HE2_AK = 0xAE9,
  AE_HE2_AL = 0xAEA,
  AE_HE2_BA = 0xAEB,
  AE_HE2_BB = 0xAEC,
  AE_HE2_CA = 0xAED,
  AE_HE2_CB = 0xAEE,
  AE_HE2_DA = 0xAEF,
  AE_HE2_DB = 0xAF0,
  AE_HE3_AA = 0xAF1,
  AE_HE3_AB = 0xAF2,
  AE_HE3_BA = 0xAF3,
  AE_HE3_BB = 0xAF4,
  AE_HE3_CA = 0xAF5,
  AE_HE3_CB = 0xAF6,
  AE_HE3_CC = 0xAF7,
  AE_HE3_CD = 0xAF8,
  AE_HE3_CE = 0xAF9,
  AE_HE3_CF = 0xAFA,
  AE_HE3_CG = 0xAFB,
  AE_HE3_CH = 0xAFC,
  AE_HE3_DA = 0xAFD,
  AE_HE3_DB = 0xAFE,
  AE_HE3_DC = 0xAFF,
  AE_HE3_DD = 0xB00,
  AE_HE3_DE = 0xB01,
  AE_HE3_DF = 0xB02,
  AE_HE3_DG = 0xB03,
  AE_HE3_EA = 0xB04,
  AE_HE3_EB = 0xB05,
  AE_HE3_EC = 0xB06,
  AE_HE3_FA = 0xB07,
  AE_HE3_FB = 0xB08,
  AE_HE3_FC = 0xB09,
  AE_HE3_FD = 0xB0A,
  AE_HE3_FE = 0xB0B,
  AE_HE3_FF = 0xB0C,
  AE_HE3_FG = 0xB0D,
  AE_HE3_GA = 0xB0E,
  AE_HE3_GB = 0xB0F,
  AE_HE3_GC = 0xB10,
  AE_HE3_GD = 0xB11,
  AE_HE3_GE = 0xB12,
  AE_HE3_HA = 0xB13,
  AE_HE4_AA = 0xB14,
  AE_HE4_AB = 0xB15,
  AE_HE4_AC = 0xB16,
  AE_HE4_BA = 0xB17,
  AE_HE4_BB = 0xB18,
  AE_HE4_BC = 0xB19,
  AE_HE4_BD = 0xB1A,
  AE_HE4_BE = 0xB1B,
  AE_HE4_BF = 0xB1C,
  AE_HE4_BG = 0xB1D,
  AE_HE4_BH = 0xB1E,
  AE_HE4_BJ = 0xB1F,
  AE_HE4_BK = 0xB20,
  AE_HE4_BL = 0xB21,
  AE_HE4_BM = 0xB22,
  AE_HE4_CA = 0xB23,
  AE_HE4_CB = 0xB24,
  AE_HE5_AA = 0xB25,
  AE_HE5_AB = 0xB26,
  AE_HE5_AC = 0xB27,
  AE_HE5_AD = 0xB28,
  AE_HE5_BA = 0xB29,
  AE_HE5_BB = 0xB2A,
  AE_HE5_BC = 0xB2B,
  AE_HE5_BD = 0xB2C,
  AE_HE8_AA = 0xB2D,
  AE_HE8_AB = 0xB2E,
  AE_HE8_AC = 0xB2F,
  AE_HE8_AD = 0xB30,
  AE_HE8_BA = 0xB31,
  AE_HE8_BB = 0xB32,
  AE_HE8_BC = 0xB33,
  AE_HE8_BD = 0xB34,
  AE_HE8_BE = 0xB35,
  AE_HE8_BF = 0xB36,
  AE_HE8_CA = 0xB37,
  AE_HE8_CB = 0xB38,
  AE_HE8_CC = 0xB39,
  AE_HE8_CD = 0xB3A,
  AE_HE8_CE = 0xB3B,
  AE_HE8_CF = 0xB3C,
  AE_HE8_DA = 0xB3D,
  AE_HE8_DB = 0xB3E,
  AE_HE8_DC = 0xB3F,
  AE_HE8_DD = 0xB40,
  AE_HE8_EA = 0xB41,
  AE_HE8_EB = 0xB42,
  AE_HE8_EC = 0xB43,
  AE_HE8_ED = 0xB44,
  AE_HE8_FA = 0xB45,
  AE_HE8_FB = 0xB46,
  AE_HE8_FC = 0xB47,
  AE_HE8_FD = 0xB48,
  AE_HE8_FE = 0xB49,
  AE_HE8_GA = 0xB4A,
  AE_HE8_GB = 0xB4B,
  AE_HE8_GC = 0xB4C,
  AE_HE8_GD = 0xB4D,
  AE_HE8_GE = 0xB4E,
  AE_HE8_GF = 0xB4F,
  AE_HE8_GG = 0xB50,
  AE_HE8_GH = 0xB51,
  AE_HE8_GJ = 0xB52,
  AE_HE8_HB = 0xB53,
  AE_HE8_JA = 0xB54,
  AE_HE8_JB = 0xB55,
  AE_HE8_JC = 0xB56,
  AE_HE8_KA = 0xB57,
  AE_HE8_KB = 0xB58,
  AE_HE8_KC = 0xB59,
  AE_HE8_KD = 0xB5A,
  AE_HE8_KE = 0xB5B,
  AE_HE8_KF = 0xB5C,
  AE_HE8_KG = 0xB5D,
  AE_HE8_KH = 0xB5E,
  AE_HE8_LA = 0xB5F,
  AE_HE8_LB = 0xB60,
  AE_HE8_LC = 0xB61,
  AE_HE8_LD = 0xB62,
  AE_HE8_LE = 0xB63,
  AE_HE8_LF = 0xB64,
  AE_HE8_MA = 0xB65,
  AE_HE8_MB = 0xB66,
  AE_HE8_MC = 0xB67,
  AE_HE8_NA = 0xB68,
  AE_HE8_NB = 0xB69,
  AE_HE8_NC = 0xB6A,
  AE_HE8_ND = 0xB6B,
  AE_HE8_NE = 0xB6C,
  AE_HE8_OA = 0xB6D,
  AE_HE8_OB = 0xB6E,
  AE_HE8_OC = 0xB6F,
  AE_HE8_OD = 0xB70,
  AE_HE8_OE = 0xB71,
  AE_HE8_OF = 0xB72,
  AE_HE8_OG = 0xB73,
  AE_HE8_OH = 0xB74,
  AE_HE8_OJ = 0xB75,
  AE_HE8_OK = 0xB76,
  AE_HE8_PA = 0xB77,
  AE_HE8_PB = 0xB78,
  AE_HE8_PC = 0xB79,
  AE_HE8_PD = 0xB7A,
  AE_HE8_PE = 0xB7B,
  AE_HE8_PF = 0xB7C,
  AE_HE8_PG = 0xB7D,
  AE_HE8_PH = 0xB7E,
  AE_HE8_PJ = 0xB7F,
  AE_HE8_QA = 0xB80,
  AE_HE8_QB = 0xB81,
  AE_HE8_QC = 0xB82,
  AE_HE8_RA = 0xB83,
  AE_HE8_RB = 0xB84,
  AE_HE8_RC = 0xB85,
  AE_HE8_RD = 0xB86,
  AE_HE8_RE = 0xB87,
  AE_HE8_SA = 0xB88,
  AE_HE8_SB = 0xB89,
  AE_HE8_TA = 0xB8A,
  AE_HE8_TB = 0xB8B,
  AE_HE8_TC = 0xB8C,
  AE_HE8_TE = 0xB8D,
  AE_HE8_TF = 0xB8E,
  AE_HE8_TG = 0xB8F,
  AE_HE8_TH = 0xB90,
  AE_HE8_TJ = 0xB91,
  AE_HE8_TK = 0xB92,
  AE_HE8_TL = 0xB93,
  AE_HE8_TM = 0xB94,
  AE_HE8_UA = 0xB95,
  AE_HE8_UB = 0xB96,
  AE_HE8_UC = 0xB97,
  AE_HE8_UD = 0xB98,
  AE_HE8_UE = 0xB99,
  AE_HE8_UF = 0xB9A,
  AE_HE8_UG = 0xB9B,
  AE_HE8_UH = 0xB9C,
  AE_HE8_VA = 0xB9D,
  AE_HE8_VB = 0xB9E,
  AE_HE8_VC = 0xB9F,
  AE_HE8_VD = 0xBA0,
  AE_HE8_WA = 0xBA1,
  AE_HE8_WB = 0xBA2,
  AE_HE8_WC = 0xBA3,
  AE_HE8_WD = 0xBA4,
  AE_HE8_WE = 0xBA5,
  AE_HE8_WF = 0xBA6,
  AE_HE8_XA = 0xBA7,
  AE_HE8_XB = 0xBA8,
  AE_HE8_XC = 0xBA9,
  AE_HE8_YA = 0xBAA,
  AE_HE8_YB = 0xBAB,
  AE_HE8_YC = 0xBAC,
  AE_HE8_ZA = 0xBAD,
  AE_HE8_ZB = 0xBAE,
  AE_HE8_ZD = 0xBAF,
  AE_HE8_ZE = 0xBB0,
  AE_HE8_ZF = 0xBB1,
  AE_HE8_ZG = 0xBB2,
  AE_HE8_ZH = 0xBB3,
  AE_HE8_ZJ = 0xBB4,
  AE_HEIQ1 = 0xBB5,
  AE_HEIQ1N = 0xBB6,
  AE_HEIQ1Y = 0xBB7,
  AE_HEIQ2 = 0xBB8,
  AE_HEIQ2N = 0xBB9,
  AE_HEIQ2Y = 0xBBA,
  AE_HEIQ2YB = 0xBBB,
  AE_HEIQ4 = 0xBBC,
  AE_HEIQ4B = 0xBBD,
  AE_HEIQ4C = 0xBBE,
  AE_HEIQ5 = 0xBBF,
  AE_HEIQ5B = 0xBC0,
  AE_HEIQ5C = 0xBC1,
  AE_HEIX1 = 0xBC2,
  AE_HEIX1B = 0xBC3,
  AE_HEIX2 = 0xBC4,
  AE_HEIX2B = 0xBC5,
  AE_HEIX2N = 0xBC6,
  AE_HEIX2Y = 0xBC7,
  AE_HEIX3 = 0xBC8,
  AE_TRUCK_SMASH_VEHICLE = 0xBC9,
  AE_TRUCK_SMASH_VEHICLE_2 = 0xBCA,
  AE_TRUCK_SMASH_VEHICLE_3 = 0xBCB,
  AE_TRUCK_SMASH_VEHICLE_4 = 0xBCC,
  AE_ALARM_CLOCK = 0xBCD,
  AE_SNORE = 0xBCE,
  AE_SNORE2 = 0xBCF,
  AE_SNORE3 = 0xBD0,
  AE_SNORE4 = 0xBD1,
  AE_HOUSE_PARTY_BASS_LOOP = 0xBD2,
  AE_INT1_AA = 0xBD3,
  AE_INT1_AB = 0xBD4,
  AE_INT1_AC = 0xBD5,
  AE_INT1_AD = 0xBD6,
  AE_INT1_AE = 0xBD7,
  AE_INT1_AF = 0xBD8,
  AE_INT1_AG = 0xBD9,
  AE_INT1_AH = 0xBDA,
  AE_INT1_AI = 0xBDB,
  AE_INT1_AJ = 0xBDC,
  AE_INT1_AK = 0xBDD,
  AE_INT1_AM = 0xBDE,
  AE_INT1_AN = 0xBDF,
  AE_INT1_AO = 0xBE0,
  AE_INT1_AP = 0xBE1,
  AE_INT1_AQ = 0xBE2,
  AE_INT1_AR = 0xBE3,
  AE_INT1_BA = 0xBE4,
  AE_INT1_BB = 0xBE5,
  AE_INT1_BC = 0xBE6,
  AE_INT1_BD = 0xBE7,
  AE_INT1_BE = 0xBE8,
  AE_INT1_BF = 0xBE9,
  AE_INT1_BG = 0xBEA,
  AE_INT1_BH = 0xBEB,
  AE_INT1_BI = 0xBEC,
  AE_INT1_BJ = 0xBED,
  AE_INT1_BK = 0xBEE,
  AE_INT1_CA = 0xBEF,
  AE_INT1_CB = 0xBF0,
  AE_INT1_CC = 0xBF1,
  AE_INT1_DA = 0xBF2,
  AE_INT1_DB = 0xBF3,
  AE_INT1_DC = 0xBF4,
  AE_INT1_DD = 0xBF5,
  AE_INT1_DE = 0xBF6,
  AE_INT1_DF = 0xBF7,
  AE_INT1_DG = 0xBF8,
  AE_INT1_DH = 0xBF9,
  AE_INT1_DI = 0xBFA,
  AE_INT1_EA = 0xBFB,
  AE_INT1_EB = 0xBFC,
  AE_INT1_EC = 0xBFD,
  AE_INT1_ED = 0xBFE,
  AE_INT1_EE = 0xBFF,
  AE_INT1_EF = 0xC00,
  AE_INT1_EG = 0xC01,
  AE_INT1_EH = 0xC02,
  AE_INT1_EI = 0xC03,
  AE_INT1_EJ = 0xC04,
  AE_INT1_FA = 0xC05,
  AE_INT1_FB = 0xC06,
  AE_INT1_FC = 0xC07,
  AE_INT1_FD = 0xC08,
  AE_INT1_FE = 0xC09,
  AE_INT1_FF = 0xC0A,
  AE_INT1_FG = 0xC0B,
  AE_INT1_FH = 0xC0C,
  AE_INT1_FI = 0xC0D,
  AE_INT1_GA = 0xC0E,
  AE_INT1_GB = 0xC0F,
  AE_INT1_GC = 0xC10,
  AE_INT1_GD = 0xC11,
  AE_INT1_GE = 0xC12,
  AE_INT1_GF = 0xC13,
  AE_INT1_GG = 0xC14,
  AE_INT1_GH = 0xC15,
  AE_INT1_GI = 0xC16,
  AE_INT1_GJ = 0xC17,
  AE_INT1_GK = 0xC18,
  AE_INT1_GL = 0xC19,
  AE_INT1_GM = 0xC1A,
  AE_INT1_GN = 0xC1B,
  AE_INT2_AA = 0xC1C,
  AE_INT2_BA = 0xC1D,
  AE_INT2_BB = 0xC1E,
  AE_INT2_BC = 0xC1F,
  AE_INT2_BD = 0xC20,
  AE_INT2_BE = 0xC21,
  AE_INT2_BF = 0xC22,
  AE_INT2_BG = 0xC23,
  AE_INT2_BH = 0xC24,
  AE_INT2_BJ = 0xC25,
  AE_INT2_BK = 0xC26,
  AE_INT2_CA = 0xC27,
  AE_INT2_CB = 0xC28,
  AE_INT2_CC = 0xC29,
  AE_INT2_CD = 0xC2A,
  AE_INT2_CE = 0xC2B,
  AE_INT2_CF = 0xC2C,
  AE_INT2_CG = 0xC2D,
  AE_INT2_DA = 0xC2E,
  AE_INT2_DB = 0xC2F,
  AE_INT2_DC = 0xC30,
  AE_INT2_EA = 0xC31,
  AE_INT2_FA = 0xC32,
  AE_INT2_FB = 0xC33,
  AE_INT2_FC = 0xC34,
  AE_INT2_FD = 0xC35,
  AE_INT2_GA = 0xC36,
  AE_INT2_GB = 0xC37,
  AE_INT2_GC = 0xC38,
  AE_INT2_GD = 0xC39,
  AE_INT2_GE = 0xC3A,
  AE_INT2_GF = 0xC3B,
  AE_INT2_HA = 0xC3C,
  AE_INT2_HB = 0xC3D,
  AE_INT2_IA = 0xC3E,
  AE_INT2_IB = 0xC3F,
  AE_INT2_JA = 0xC40,
  AE_INT2_JB = 0xC41,
  AE_INT2_KA = 0xC42,
  AE_INT2_KB = 0xC43,
  AE_INT2_LA = 0xC44,
  AE_INT2_LB = 0xC45,
  AE_INT2_LC = 0xC46,
  AE_INT2_MA = 0xC47,
  AE_INT2_MB = 0xC48,
  AE_INT2_NA = 0xC49,
  AE_INT2_NB = 0xC4A,
  AE_INT2_NC = 0xC4B,
  AE_INT2_ND = 0xC4C,
  AE_JIZX_AA = 0xC4D,
  AE_JIZX_AB = 0xC4E,
  AE_JIZX_AC = 0xC4F,
  AE_JIZX_AD = 0xC50,
  AE_JIZX_AE = 0xC51,
  AE_JIZX_AF = 0xC52,
  AE_JIZX_AG = 0xC53,
  AE_JIZX_AH = 0xC54,
  AE_JIZX_AI = 0xC55,
  AE_JIZX_AJ = 0xC56,
  AE_JIZX_AK = 0xC57,
  AE_JIZX_AL = 0xC58,
  AE_JIZX_AM = 0xC59,
  AE_JIZX_AN = 0xC5A,
  AE_JIZX_AO = 0xC5B,
  AE_JIZX_AP = 0xC5C,
  AE_JIZX_BA = 0xC5D,
  AE_JIZX_BB = 0xC5E,
  AE_JIZX_BC = 0xC5F,
  AE_JIZX_BD = 0xC60,
  AE_JIZX_BE = 0xC61,
  AE_JIZX_BF = 0xC62,
  AE_JIZX_BG = 0xC63,
  AE_JIZX_BH = 0xC64,
  AE_JIZX_BI = 0xC65,
  AE_CAR_PHONE_RING = 0xC66,
  AE_CLOTHES_DRESSING_WARDROBE = 0xC67,
  AE_DOORBELL = 0xC68,
  AE_DRESSING = 0xC69,
  AE_GIMP_SUIT = 0xC6A,
  AE_PED_MOBRING = 0xC6B,
  AE__KEYPAD_BEEP = 0xC6C,
  AE__KEYPAD_FAIL = 0xC6D,
  AE__KEYPAD_PASS = 0xC6E,
  AE_KUNG_1 = 0xC6F,
  AE_KUNG_2 = 0xC70,
  AE_KUNG_3 = 0xC71,
  AE_KUNG_4 = 0xC72,
  AE_KUNG_5 = 0xC73,
  AE_KUNG_6 = 0xC74,
  AE_KUNG_7 = 0xC75,
  AE_KUNG_8 = 0xC76,
  AE_BEXIT1 = 0xC77,
  AE_BEXIT2 = 0xC78,
  AE_DNCEF1 = 0xC79,
  AE_DNCEF2 = 0xC7A,
  AE_DOFFE1 = 0xC7B,
  AE_DOFFE1N = 0xC7C,
  AE_DOFFE1Y = 0xC7D,
  AE_DOFFE2 = 0xC7E,
  AE_DOFFE2N = 0xC7F,
  AE_DOFFE2Y = 0xC80,
  AE_DOFFE3 = 0xC81,
  AE_DOFFE3N = 0xC82,
  AE_DOFFE3Y = 0xC83,
  AE_DOFFE4 = 0xC84,
  AE_DOFFE4N = 0xC85,
  AE_DOFFE4Y = 0xC86,
  AE_DSTAR1 = 0xC87,
  AE_DSTAR2 = 0xC88,
  AE_GEXIT1 = 0xC89,
  AE_GEXIT2 = 0xC8A,
  AE_HI1 = 0xC8B,
  AE_HI1N = 0xC8C,
  AE_HI1Y = 0xC8D,
  AE_HI2 = 0xC8E,
  AE_HI2N = 0xC8F,
  AE_HI2Y = 0xC90,
  AE_HI3 = 0xC91,
  AE_HI3N = 0xC92,
  AE_HI3Y = 0xC93,
  AE_HI4 = 0xC94,
  AE_HI4N = 0xC95,
  AE_HI4Y = 0xC96,
  AE_HI5 = 0xC97,
  AE_HI5N = 0xC98,
  AE_HI5Y = 0xC99,
  AE_HI6 = 0xC9A,
  AE_HI6N = 0xC9B,
  AE_HI6Y = 0xC9C,
  AE_HI7N = 0xC9D,
  AE_HI7Y = 0xC9E,
  AE_HI8N = 0xC9F,
  AE_HI8Y = 0xCA0,
  AE_VLATE = 0xCA1,
  AE_VOFFE1 = 0xCA2,
  AE_VOFFE1N = 0xCA3,
  AE_VOFFE1Y = 0xCA4,
  AE_VOFFE2 = 0xCA5,
  AE_VOFFE2N = 0xCA6,
  AE_VOFFE2Y = 0xCA7,
  AE_VSURE1 = 0xCA8,
  AE_VSURE1N = 0xCA9,
  AE_VSURE1Y = 0xCAA,
  AE_VSURE2 = 0xCAB,
  AE_VSURE2N = 0xCAC,
  AE_VSURE2Y = 0xCAD,
  AE_VYES1 = 0xCAE,
  AE_VYES2 = 0xCAF,
  AE_LOC1_BA = 0xCB0,
  AE_LOC1_BB = 0xCB1,
  AE_LOC1_BC = 0xCB2,
  AE_LOC1_BD = 0xCB3,
  AE_LOC1_BE = 0xCB4,
  AE_LOC1_BF = 0xCB5,
  AE_LOC1_BG = 0xCB6,
  AE_LOC1_BH = 0xCB7,
  AE_LOC1_BJ = 0xCB8,
  AE_LOC1_BK = 0xCB9,
  AE_LOC1_BL = 0xCBA,
  AE_LOC1_BM = 0xCBB,
  AE_LOC1_BN = 0xCBC,
  AE_LOC1_BO = 0xCBD,
  AE_LOC1_BP = 0xCBE,
  AE_LOC1_BQ = 0xCBF,
  AE_LOC1_BR = 0xCC0,
  AE_LOC1_BS = 0xCC1,
  AE_LOC1_BT = 0xCC2,
  AE_LOC1_BU = 0xCC3,
  AE_LOC1_BV = 0xCC4,
  AE_LOC1_CA = 0xCC5,
  AE_LOC1_CB = 0xCC6,
  AE_LOC1_CC = 0xCC7,
  AE_LOC1_CD = 0xCC8,
  AE_LOC1_CE = 0xCC9,
  AE_LOC1_CF = 0xCCA,
  AE_LOC1_CG = 0xCCB,
  AE_LOC1_CH = 0xCCC,
  AE_LOC1_CJ = 0xCCD,
  AE_LOC1_CK = 0xCCE,
  AE_LOC1_CL = 0xCCF,
  AE_LOC1_CM = 0xCD0,
  AE_LOC1_CN = 0xCD1,
  AE_LOC1_CO = 0xCD2,
  AE_LOC1_CP = 0xCD3,
  AE_LOC1_CQ = 0xCD4,
  AE_LOC1_CR = 0xCD5,
  AE_LOC1_CS = 0xCD6,
  AE_LOC1_CT = 0xCD7,
  AE_LOC1_CU = 0xCD8,
  AE_LOC1_CV = 0xCD9,
  AE_LOC1_YA = 0xCDA,
  AE_LOC1_YB = 0xCDB,
  AE_LOC1_YC = 0xCDC,
  AE_LOC1_YD = 0xCDD,
  AE_LOC1_YE = 0xCDE,
  AE_LOC1_YG = 0xCDF,
  AE_LOC1_YH = 0xCE0,
  AE_LOC1_YJ = 0xCE1,
  AE_LOC1_YK = 0xCE2,
  AE_LOC1_YO = 0xCE3,
  AE_LOC1_YP = 0xCE4,
  AE_LOC1_YQ = 0xCE5,
  AE_LOC1_YR = 0xCE6,
  AE_LOC1_YS = 0xCE7,
  AE_LOC1_YT = 0xCE8,
  AE_LOC1_ZE = 0xCE9,
  AE_LOC1_ZF = 0xCEA,
  AE_LOC1_ZG = 0xCEB,
  AE_LOC1_ZH = 0xCEC,
  AE_LOC1_ZN = 0xCED,
  AE_LOC1_ZO = 0xCEE,
  AE_LOC1_ZP = 0xCEF,
  AE_LOC1_ZQ = 0xCF0,
  AE_LOC1_ZT = 0xCF1,
  AE_LOC1_ZU = 0xCF2,
  AE_LOC2_AA = 0xCF3,
  AE_LOC2_AB = 0xCF4,
  AE_LOC2_AC = 0xCF5,
  AE_LOC2_BA = 0xCF6,
  AE_LOC2_BB = 0xCF7,
  AE_LOC2_CA = 0xCF8,
  AE_LOC2_CB = 0xCF9,
  AE_LOC2_CC = 0xCFA,
  AE_LOC2_DC = 0xCFB,
  AE_LOC3_AA = 0xCFC,
  AE_LOC3_BA = 0xCFD,
  AE_LOC3_BB = 0xCFE,
  AE_LOC3_BC = 0xCFF,
  AE_LOC3_BD = 0xD00,
  AE_LOC3_BE = 0xD01,
  AE_LOC3_CA = 0xD02,
  AE_LOC3_CB = 0xD03,
  AE_LOC3_DA = 0xD04,
  AE_LOC3_DB = 0xD05,
  AE_LOC3_DC = 0xD06,
  AE_LOC3_DD = 0xD07,
  AE_LOC3_EA = 0xD08,
  AE_LOC3_EB = 0xD09,
  AE_LOC3_EC = 0xD0A,
  AE_LOC3_ED = 0xD0B,
  AE_LOC3_EE = 0xD0C,
  AE_LOC3_EF = 0xD0D,
  AE_LOC3_EG = 0xD0E,
  AE_LOC3_EH = 0xD0F,
  AE_LOC3_EJ = 0xD10,
  AE_LOC3_EK = 0xD11,
  AE_LOC3_EL = 0xD12,
  AE_LOC3_EM = 0xD13,
  AE_LOC3_EN = 0xD14,
  AE_LOC3_EO = 0xD15,
  AE_LOC3_FA = 0xD16,
  AE_LOC3_FB = 0xD17,
  AE_LOC3_FC = 0xD18,
  AE_LOC3_FD = 0xD19,
  AE_LOC3_FE = 0xD1A,
  AE_LOC3_FF = 0xD1B,
  AE_LOC3_GA = 0xD1C,
  AE_LOC3_GB = 0xD1D,
  AE_LOC3_GC = 0xD1E,
  AE_LOC3_GD = 0xD1F,
  AE_LOC3_HA = 0xD20,
  AE_LOC3_HB = 0xD21,
  AE_LOC3_JA = 0xD22,
  AE_LOC3_JB = 0xD23,
  AE_LOC4_AA = 0xD24,
  AE_LOC4_AB = 0xD25,
  AE_LOC4_AC = 0xD26,
  AE_LOC4_AD = 0xD27,
  AE_LOC4_AE = 0xD28,
  AE_LOC4_AF = 0xD29,
  AE_LOC4_AG = 0xD2A,
  AE_LOC4_AH = 0xD2B,
  AE_LOC4_BA = 0xD2C,
  AE_LOC4_BB = 0xD2D,
  AE_LOC4_BC = 0xD2E,
  AE_LOC4_BD = 0xD2F,
  AE_LOC4_BE = 0xD30,
  AE_LOC4_BF = 0xD31,
  AE_LOC4_BG = 0xD32,
  AE_LOC4_CA = 0xD33,
  AE_LOC4_CB = 0xD34,
  AE_LOC4_CC = 0xD35,
  AE_LOCX_AA = 0xD36,
  AE_LOCX_AB = 0xD37,
  AE_LOCX_AC = 0xD38,
  AE_LOCX_AD = 0xD39,
  AE_LOCX_AE = 0xD3A,
  AE_LOCX_AF = 0xD3B,
  AE_LOCX_AG = 0xD3C,
  AE_MOURNERS = 0xD3D,
  AE_LOWR_AA = 0xD3E,
  AE_LOWR_AB = 0xD3F,
  AE_LOWR_AD = 0xD40,
  AE_LOWR_AE = 0xD41,
  AE_LOWR_AG = 0xD42,
  AE_LOWR_AH = 0xD43,
  AE_LOWR_AK = 0xD44,
  AE_LOWR_AL = 0xD45,
  AE_LOWR_BA = 0xD46,
  AE_LOWR_BB = 0xD47,
  AE_LOWR_BC = 0xD48,
  AE_LOWR_CA = 0xD49,
  AE_LOWR_CB = 0xD4A,
  AE_LOWR_DA = 0xD4B,
  AE_LOWR_DB = 0xD4C,
  AE_LOWR_EA = 0xD4D,
  AE_LOWR_EB = 0xD4E,
  AE_LOWR_EC = 0xD4F,
  AE_LOWR_ED = 0xD50,
  AE_LOWR_EE = 0xD51,
  AE_LOWR_EF = 0xD52,
  AE_LOWR_FA = 0xD53,
  AE_LOWR_FB = 0xD54,
  AE_LOWR_FC = 0xD55,
  AE_LOWR_FD = 0xD56,
  AE_LOWR_FE = 0xD57,
  AE_LOWR_FF = 0xD58,
  AE_LOWR_GA = 0xD59,
  AE_LOWR_GB = 0xD5A,
  AE_LOWR_HA = 0xD5B,
  AE_LOWR_HB = 0xD5C,
  AE_LOWR_HC = 0xD5D,
  AE_LOWR_HD = 0xD5E,
  AE_LOWR_KA = 0xD5F,
  AE_LOWR_KB = 0xD60,
  AE_LOWR_KC = 0xD61,
  AE_LOWR_KD = 0xD62,
  AE_LOWR_KE = 0xD63,
  AE_LOWR_KF = 0xD64,
  AE_LOWR_KG = 0xD65,
  AE_MOBRING = 0xD66,
  AE_MACX_AA = 0xD67,
  AE_MACX_AB = 0xD68,
  AE_MACX_AC = 0xD69,
  AE_MACX_AD = 0xD6A,
  AE_MACX_AE = 0xD6B,
  AE_MACX_AF = 0xD6C,
  AE_MACX_AG = 0xD6D,
  AE_MACX_AH = 0xD6E,
  AE_MACX_AI = 0xD6F,
  AE_MACX_AJ = 0xD70,
  AE_CRATE_LANDING = 0xD71,
  AE_VIDEO_GAME_LOOP = 0xD72,
  AE_MAN1_AA = 0xD73,
  AE_MAN1_AB = 0xD74,
  AE_MAN1_AC = 0xD75,
  AE_MAN1_AD = 0xD76,
  AE_MAN1_BA = 0xD77,
  AE_MAN1_BB = 0xD78,
  AE_MAN1_BC = 0xD79,
  AE_MAN1_BD = 0xD7A,
  AE_MAN1_CA = 0xD7B,
  AE_MAN1_CB = 0xD7C,
  AE_MAN1_CC = 0xD7D,
  AE_MAN1_DA = 0xD7E,
  AE_MAN1_DB = 0xD7F,
  AE_MAN1_DC = 0xD80,
  AE_MAN1_DD = 0xD81,
  AE_MAN1_DE = 0xD82,
  AE_MAN1_DF = 0xD83,
  AE_MAN1_DG = 0xD84,
  AE_MAN1_DH = 0xD85,
  AE_MAN1_DJ = 0xD86,
  AE_MAN1_EA = 0xD87,
  AE_MAN1_EB = 0xD88,
  AE_MAN1_FA = 0xD89,
  AE_MAN1_FB = 0xD8A,
  AE_MAN1_FC = 0xD8B,
  AE_MAN1_FD = 0xD8C,
  AE_MAN1_FE = 0xD8D,
  AE_MAN1_FF = 0xD8E,
  AE_MAN1_FG = 0xD8F,
  AE_MAN1_FH = 0xD90,
  AE_MAN1_FJ = 0xD91,
  AE_MAN1_FK = 0xD92,
  AE_MAN1_FL = 0xD93,
  AE_MAN1_FM = 0xD94,
  AE_MAN1_FN = 0xD95,
  AE_MAN1_FO = 0xD96,
  AE_MAN2_AA = 0xD97,
  AE_MAN2_AB = 0xD98,
  AE_MAN2_AC = 0xD99,
  AE_MAN2_AD = 0xD9A,
  AE_MAN2_BA = 0xD9B,
  AE_MAN2_BB = 0xD9C,
  AE_MAN2_BC = 0xD9D,
  AE_MAN2_BD = 0xD9E,
  AE_MAN2_BE = 0xD9F,
  AE_MAN2_BF = 0xDA0,
  AE_MAN2_BG = 0xDA1,
  AE_MAN2_BH = 0xDA2,
  AE_MAN2_BJ = 0xDA3,
  AE_MAN2_BK = 0xDA4,
  AE_MAN2_BL = 0xDA5,
  AE_MAN2_BM = 0xDA6,
  AE_MAN2_BN = 0xDA7,
  AE_MAN2_CA = 0xDA8,
  AE_MAN2_DA = 0xDA9,
  AE_MAN2_DB = 0xDAA,
  AE_MAN2_DC = 0xDAB,
  AE_MAN2_DD = 0xDAC,
  AE_MAN2_EA = 0xDAD,
  AE_MAN2_EB = 0xDAE,
  AE_MAN2_EC = 0xDAF,
  AE_MAN2_EE = 0xDB0,
  AE_MAN2_EF = 0xDB1,
  AE_MAN2_EG = 0xDB2,
  AE_MAN2_EH = 0xDB3,
  AE_MAN2_EJ = 0xDB4,
  AE_MAN2_FA = 0xDB5,
  AE_MAN2_FB = 0xDB6,
  AE_MAN2_FC = 0xDB7,
  AE_MAN2_FD = 0xDB8,
  AE_MAN2_FE = 0xDB9,
  AE_MAN2_FF = 0xDBA,
  AE_MAN2_FG = 0xDBB,
  AE_MAN2_FK = 0xDBC,
  AE_MAN2_FL = 0xDBD,
  AE_MAN2_GA = 0xDBE,
  AE_MAN2_GB = 0xDBF,
  AE_MAN2_GC = 0xDC0,
  AE_MAN2_GD = 0xDC1,
  AE_MAN2_GE = 0xDC2,
  AE_MAN2_GF = 0xDC3,
  AE_MAN2_GG = 0xDC4,
  AE_MAN2_GH = 0xDC5,
  AE_MAN2_HA = 0xDC6,
  AE_MAN2_HB = 0xDC7,
  AE_MAN2_HC = 0xDC8,
  AE_MAN2_HD = 0xDC9,
  AE_MAN2_HE = 0xDCA,
  AE_MAN2_HF = 0xDCB,
  AE_MAN2_JA = 0xDCC,
  AE_MAN2_JC = 0xDCD,
  AE_MAN2_JD = 0xDCE,
  AE_MAN2_JE = 0xDCF,
  AE_MAN2_JF = 0xDD0,
  AE_MAN2_KA = 0xDD1,
  AE_MAN2_KB = 0xDD2,
  AE_MAN2_KC = 0xDD3,
  AE_MAN2_KD = 0xDD4,
  AE_MAN2_KE = 0xDD5,
  AE_MAN2_KF = 0xDD6,
  AE_MAN3_AA = 0xDD7,
  AE_MAN3_AB = 0xDD8,
  AE_MAN3_AC = 0xDD9,
  AE_MAN3_AD = 0xDDA,
  AE_MAN3_BA = 0xDDB,
  AE_MAN3_BB = 0xDDC,
  AE_MAN3_BC = 0xDDD,
  AE_MAN3_BD = 0xDDE,
  AE_MAN3_BE = 0xDDF,
  AE_MAN3_CA = 0xDE0,
  AE_MAN3_CB = 0xDE1,
  AE_MAN3_CC = 0xDE2,
  AE_MAN3_CD = 0xDE3,
  AE_MAN3_CE = 0xDE4,
  AE_MAN3_CF = 0xDE5,
  AE_MAN3_CG = 0xDE6,
  AE_MAN3_CH = 0xDE7,
  AE_MAN3_CI = 0xDE8,
  AE_MAN3_CJ = 0xDE9,
  AE_MAN3_CK = 0xDEA,
  AE_MAN5_AA = 0xDEB,
  AE_MAN5_AB = 0xDEC,
  AE_MAN5_AC = 0xDED,
  AE_MAN5_BA = 0xDEE,
  AE_MAN5_BB = 0xDEF,
  AE_MAN5_BC = 0xDF0,
  AE_MAN5_BD = 0xDF1,
  AE_MAN5_BE = 0xDF2,
  AE_MAN5_BF = 0xDF3,
  AE_MAN5_BG = 0xDF4,
  AE_MAN5_BH = 0xDF5,
  AE_MAN5_BJ = 0xDF6,
  AE_MAN5_BK = 0xDF7,
  AE_MAN5_BL = 0xDF8,
  AE_MAN5_BM = 0xDF9,
  AE_MAN5_BN = 0xDFA,
  AE_MAN5_BO = 0xDFB,
  AE_MAN5_CA = 0xDFC,
  AE_MAN5_CB = 0xDFD,
  AE_MAN5_DA = 0xDFE,
  AE_MAN5_DB = 0xDFF,
  AE_MAN5_DC = 0xE00,
  AE_MAN5_DD = 0xE01,
  AE_MAN5_EA = 0xE02,
  AE_MAN5_EB = 0xE03,
  AE_MAN5_FA = 0xE04,
  AE_MAN5_FB = 0xE05,
  AE_MAN5_FC = 0xE06,
  AE_MAN5_FD = 0xE07,
  AE_MAN5_FE = 0xE08,
  AE_MAN5_FF = 0xE09,
  AE_MAN5_FG = 0xE0A,
  AE_MAN5_FH = 0xE0B,
  AE_MAN5_FJ = 0xE0C,
  AE_LOCK_CAR_DOORS = 0xE0D,
  AE_MBARB1A = 0xE0E,
  AE_MBARB1B = 0xE0F,
  AE_MBARB1C = 0xE10,
  AE_MBARB1D = 0xE11,
  AE_MBARB1E = 0xE12,
  AE_MBARB1F = 0xE13,
  AE_MBARB1G = 0xE14,
  AE_MBARB1H = 0xE15,
  AE_MBARB1J = 0xE16,
  AE_MBARB1K = 0xE17,
  AE_MBARB1L = 0xE18,
  AE_MBARB1M = 0xE19,
  AE_MBARB1N = 0xE1A,
  AE_MBARB1O = 0xE1B,
  AE_MBARB1P = 0xE1C,
  AE_MBARB1Q = 0xE1D,
  AE_MBARB1R = 0xE1E,
  AE_MBARB2A = 0xE1F,
  AE_MBARB2D = 0xE20,
  AE_MBARB3A = 0xE21,
  AE_MBARB3B = 0xE22,
  AE_MBARB4A = 0xE23,
  AE_MBARB4D = 0xE24,
  AE_MBARB5A = 0xE25,
  AE_MBARB5D = 0xE26,
  AE_MBARB6A = 0xE27,
  AE_MBARB6B = 0xE28,
  AE_MBARB7D = 0xE29,
  AE_MBARB8D = 0xE2A,
  AE_MBARB9D = 0xE2B,
  AE_MCAT01A = 0xE2C,
  AE_MCAT01B = 0xE2D,
  AE_MCAT01C = 0xE2E,
  AE_MCAT01D = 0xE2F,
  AE_MCAT01E = 0xE30,
  AE_MCAT01F = 0xE31,
  AE_MCAT01G = 0xE32,
  AE_MCAT01H = 0xE33,
  AE_MCAT02A = 0xE34,
  AE_MCAT02B = 0xE35,
  AE_MCAT02C = 0xE36,
  AE_MCAT02D = 0xE37,
  AE_MCAT02E = 0xE38,
  AE_MCAT02F = 0xE39,
  AE_MCAT02G = 0xE3A,
  AE_MCAT02H = 0xE3B,
  AE_MCAT03A = 0xE3C,
  AE_MCAT03B = 0xE3D,
  AE_MCAT04A = 0xE3E,
  AE_MCAT04B = 0xE3F,
  AE_MCAT04C = 0xE40,
  AE_MCAT04D = 0xE41,
  AE_MCAT04E = 0xE42,
  AE_MCAT04F = 0xE43,
  AE_MCAT05A = 0xE44,
  AE_MCAT05B = 0xE45,
  AE_MCAT05C = 0xE46,
  AE_MCAT05D = 0xE47,
  AE_MCAT05E = 0xE48,
  AE_MCAT05F = 0xE49,
  AE_MCAT05G = 0xE4A,
  AE_MCAT06A = 0xE4B,
  AE_MCAT06B = 0xE4C,
  AE_MCAT06C = 0xE4D,
  AE_MCAT06D = 0xE4E,
  AE_MCAT06E = 0xE4F,
  AE_MCAT06F = 0xE50,
  AE_MCAT06G = 0xE51,
  AE_MCAT06H = 0xE52,
  AE_MCAT06J = 0xE53,
  AE_MCAT06K = 0xE54,
  AE_MCAT07A = 0xE55,
  AE_MCAT07B = 0xE56,
  AE_MCAT07C = 0xE57,
  AE_MCAT07D = 0xE58,
  AE_MCAT07E = 0xE59,
  AE_MCAT07F = 0xE5A,
  AE_MCAT07G = 0xE5B,
  AE_MCES01A = 0xE5C,
  AE_MCES01B = 0xE5D,
  AE_MCES01C = 0xE5E,
  AE_MCES01D = 0xE5F,
  AE_MCES01E = 0xE60,
  AE_MCES01F = 0xE61,
  AE_MCES01G = 0xE62,
  AE_MCES01H = 0xE63,
  AE_MCES01K = 0xE64,
  AE_MCES01L = 0xE65,
  AE_MCES01M = 0xE66,
  AE_MCES01N = 0xE67,
  AE_MCES01O = 0xE68,
  AE_MCES01P = 0xE69,
  AE_MCES02A = 0xE6A,
  AE_MCES02B = 0xE6B,
  AE_MCES02C = 0xE6C,
  AE_MCES02D = 0xE6D,
  AE_MCES02E = 0xE6E,
  AE_MCES02F = 0xE6F,
  AE_MCES02G = 0xE70,
  AE_MCES02H = 0xE71,
  AE_MCES02K = 0xE72,
  AE_MCES02L = 0xE73,
  AE_MCES02M = 0xE74,
  AE_MCES02N = 0xE75,
  AE_MCES02O = 0xE76,
  AE_MCES03A = 0xE77,
  AE_MCES03B = 0xE78,
  AE_MCES03C = 0xE79,
  AE_MCES03D = 0xE7A,
  AE_MCES03E = 0xE7B,
  AE_MCES03F = 0xE7C,
  AE_MCES03G = 0xE7D,
  AE_MCES03H = 0xE7E,
  AE_MCES03J = 0xE7F,
  AE_MCES03K = 0xE80,
  AE_MCES03L = 0xE81,
  AE_MCES03M = 0xE82,
  AE_MCES03N = 0xE83,
  AE_MCES04A = 0xE84,
  AE_MCES04B = 0xE85,
  AE_MCES04C = 0xE86,
  AE_MCES04D = 0xE87,
  AE_MCES04E = 0xE88,
  AE_MCES04F = 0xE89,
  AE_MCES04G = 0xE8A,
  AE_MCES04H = 0xE8B,
  AE_MCES04J = 0xE8C,
  AE_MCES04L = 0xE8D,
  AE_MCES04M = 0xE8E,
  AE_MCES04N = 0xE8F,
  AE_MCES04O = 0xE90,
  AE_MCES04P = 0xE91,
  AE_MCES04Q = 0xE92,
  AE_MCES04R = 0xE93,
  AE_MCES05A = 0xE94,
  AE_MCES05B = 0xE95,
  AE_MCES05C = 0xE96,
  AE_MCES05D = 0xE97,
  AE_MCES05E = 0xE98,
  AE_MCES05F = 0xE99,
  AE_MCES05G = 0xE9A,
  AE_MCES05H = 0xE9B,
  AE_MCES05J = 0xE9C,
  AE_MCES05K = 0xE9D,
  AE_MCES05L = 0xE9E,
  AE_MCES05M = 0xE9F,
  AE_MCES05N = 0xEA0,
  AE_MCES05O = 0xEA1,
  AE_MCES05P = 0xEA2,
  AE_MCES05Q = 0xEA3,
  AE_MCES05R = 0xEA4,
  AE_MCES06A = 0xEA5,
  AE_MCES06B = 0xEA6,
  AE_MCES06C = 0xEA7,
  AE_MCES06D = 0xEA8,
  AE_MCES06E = 0xEA9,
  AE_MCES06F = 0xEAA,
  AE_MCES06G = 0xEAB,
  AE_MCES07A = 0xEAC,
  AE_MCES07B = 0xEAD,
  AE_MCES07C = 0xEAE,
  AE_MCES07D = 0xEAF,
  AE_MCES08 = 0xEB0,
  AE_MCES08A = 0xEB1,
  AE_MCES08B = 0xEB2,
  AE_MCES08C = 0xEB3,
  AE_MCES08D = 0xEB4,
  AE_MCES08E = 0xEB5,
  AE_MCES09A = 0xEB6,
  AE_MCES09B = 0xEB7,
  AE_MCES09C = 0xEB8,
  AE_MCES09D = 0xEB9,
  AE_MCES09E = 0xEBA,
  AE_MCES09F = 0xEBB,
  AE_MCES09G = 0xEBC,
  AE_MCES09H = 0xEBD,
  AE_MCES09K = 0xEBE,
  AE_MCES09L = 0xEBF,
  AE_MCES09M = 0xEC0,
  AE_MCES09N = 0xEC1,
  AE_MCES09O = 0xEC2,
  AE_MCES09P = 0xEC3,
  AE_MCES10A = 0xEC4,
  AE_MCES10B = 0xEC5,
  AE_MCES10C = 0xEC6,
  AE_MCES10D = 0xEC7,
  AE_MCES10E = 0xEC8,
  AE_MCES10F = 0xEC9,
  AE_MCES10G = 0xECA,
  AE_MCES10H = 0xECB,
  AE_MCES10J = 0xECC,
  AE_MCES10K = 0xECD,
  AE_MCES11A = 0xECE,
  AE_MCES11B = 0xECF,
  AE_MCES11C = 0xED0,
  AE_MCES11D = 0xED1,
  AE_MCES11E = 0xED2,
  AE_MCES11F = 0xED3,
  AE_MDEN_1A = 0xED4,
  AE_MDEN_1B = 0xED5,
  AE_MDEN_1C = 0xED6,
  AE_MDEN_1D = 0xED7,
  AE_MDEN_1E = 0xED8,
  AE_MDEN_1F = 0xED9,
  AE_MDEN_1G = 0xEDA,
  AE_MDEN_1H = 0xEDB,
  AE_MDEN_1J = 0xEDC,
  AE_MDEN_1K = 0xEDD,
  AE_MDEN_1L = 0xEDE,
  AE_MDEN_2A = 0xEDF,
  AE_MDEN_2D = 0xEE0,
  AE_MDEN_3A = 0xEE1,
  AE_MDEN_3B = 0xEE2,
  AE_MDEN_4A = 0xEE3,
  AE_MDEN_4D = 0xEE4,
  AE_MDEN_5A = 0xEE5,
  AE_MDEN_5B = 0xEE6,
  AE_MDEN_6A = 0xEE7,
  AE_MDEN_6D = 0xEE8,
  AE_MDEN_7D = 0xEE9,
  AE_MDEN_8D = 0xEEA,
  AE_MDEN_9D = 0xEEB,
  AE__MEAT_TRACK_LOOP = 0xEEC,
  AE__FREEZER_CLOSE = 0xEED,
  AE__FREEZER_OPEN = 0xEEE,
  AE__MEAT_TRACK_START = 0xEEF,
  AE__MEAT_TRACK_STOP = 0xEF0,
  AE__MECHANIC_ATTACH_CAR_BOMB = 0xEF1,
  AE__MECHANIC_SLIDE_OUT = 0xEF2,
  AE_MEC_B1 = 0xEF3,
  AE_MEC_B2 = 0xEF4,
  AE_MEC_D1 = 0xEF5,
  AE_MEC_D2 = 0xEF6,
  AE_MEC_D3 = 0xEF7,
  AE_MEC_D4 = 0xEF8,
  AE_MEC_D5 = 0xEF9,
  AE_MEC_HI = 0xEFA,
  AE_MEC_N = 0xEFB,
  AE_MEC_Y = 0xEFC,
  AE_MHELD7D = 0xEFD,
  AE_MHELD8D = 0xEFE,
  AE_MHELD9D = 0xEFF,
  AE_MHEL_1A = 0xF00,
  AE_MHEL_1B = 0xF01,
  AE_MHEL_1C = 0xF02,
  AE_MHEL_1D = 0xF03,
  AE_MHEL_1E = 0xF04,
  AE_MHEL_1F = 0xF05,
  AE_MHEL_1G = 0xF06,
  AE_MHEL_1H = 0xF07,
  AE_MHEL_1J = 0xF08,
  AE_MHEL_1K = 0xF09,
  AE_MHEL_1L = 0xF0A,
  AE_MHEL_2A = 0xF0B,
  AE_MHEL_2B = 0xF0C,
  AE_MHEL_3A = 0xF0D,
  AE_MHEL_3B = 0xF0E,
  AE_MHEL_4A = 0xF0F,
  AE_MHEL_4B = 0xF10,
  AE_MHEL_5A = 0xF11,
  AE_MHEL_5B = 0xF12,
  AE_MHEL_6A = 0xF13,
  AE_MHEL_6B = 0xF14,
  AE_MHRZ01A = 0xF15,
  AE_MHRZ01B = 0xF16,
  AE_MHRZ01C = 0xF17,
  AE_MHRZ01D = 0xF18,
  AE_MHRZ01E = 0xF19,
  AE_MHRZ01F = 0xF1A,
  AE_MHRZ01G = 0xF1B,
  AE_MHRZ01H = 0xF1C,
  AE_MHRZ01J = 0xF1D,
  AE_MHRZ01K = 0xF1E,
  AE_MHRZ01L = 0xF1F,
  AE_MHRZ01M = 0xF20,
  AE_MHRZ01N = 0xF21,
  AE_MJET_1A = 0xF22,
  AE_MJET_1B = 0xF23,
  AE_MJET_1C = 0xF24,
  AE_MJET_1D = 0xF25,
  AE_MJET_1E = 0xF26,
  AE_MJET_1F = 0xF27,
  AE_MJET_1G = 0xF28,
  AE_MJET_1H = 0xF29,
  AE_MJET_1J = 0xF2A,
  AE_MJET_1K = 0xF2B,
  AE_MJET_1L = 0xF2C,
  AE_MJET_1M = 0xF2D,
  AE_MJET_1N = 0xF2E,
  AE_MJET_1O = 0xF2F,
  AE_MJET_1P = 0xF30,
  AE_MJET_2A = 0xF31,
  AE_MJET_2B = 0xF32,
  AE_MJET_2C = 0xF33,
  AE_MJET_2D = 0xF34,
  AE_MJET_2E = 0xF35,
  AE_MJET_2F = 0xF36,
  AE_MJET_2G = 0xF37,
  AE_MJET_2H = 0xF38,
  AE_MJET_2J = 0xF39,
  AE_MJET_2K = 0xF3A,
  AE_MJET_2L = 0xF3B,
  AE_MJET_3A = 0xF3C,
  AE_MJET_3B = 0xF3D,
  AE_MJET_3C = 0xF3E,
  AE_MJET_3D = 0xF3F,
  AE_MJET_3E = 0xF40,
  AE_MJET_3F = 0xF41,
  AE_MJET_3G = 0xF42,
  AE_MJET_3H = 0xF43,
  AE_MJIZ01A = 0xF44,
  AE_MJIZ01B = 0xF45,
  AE_MJIZ01C = 0xF46,
  AE_MJIZ01D = 0xF47,
  AE_MJIZ01E = 0xF48,
  AE_MJIZ01F = 0xF49,
  AE_MJIZ01G = 0xF4A,
  AE_MJIZ01H = 0xF4B,
  AE_MJIZ02A = 0xF4C,
  AE_MJIZ02B = 0xF4D,
  AE_MJIZ02C = 0xF4E,
  AE_MJIZ02D = 0xF4F,
  AE_MKND01A = 0xF50,
  AE_MKND01B = 0xF51,
  AE_MKND01C = 0xF52,
  AE_MKND01D = 0xF53,
  AE_MKND01E = 0xF54,
  AE_MKND01F = 0xF55,
  AE_MKND01G = 0xF56,
  AE_MKND01H = 0xF57,
  AE_MKND01J = 0xF58,
  AE_MKND02A = 0xF59,
  AE_MKND02B = 0xF5A,
  AE_MKND02C = 0xF5B,
  AE_MKND02D = 0xF5C,
  AE_MKND02E = 0xF5D,
  AE_MKND02F = 0xF5E,
  AE_MKND02G = 0xF5F,
  AE_MKND02H = 0xF60,
  AE_MKND02J = 0xF61,
  AE_MKND02K = 0xF62,
  AE_MKP01A = 0xF63,
  AE_MKP01B = 0xF64,
  AE_MKP01C = 0xF65,
  AE_MKP01D = 0xF66,
  AE_MKP01E = 0xF67,
  AE_MKP01F = 0xF68,
  AE_MLOC01B = 0xF69,
  AE_MLOC01F = 0xF6A,
  AE_MLOC02A = 0xF6B,
  AE_MLOC02B = 0xF6C,
  AE_MLOC02C = 0xF6D,
  AE_MLOC02D = 0xF6E,
  AE_MLOC02E = 0xF6F,
  AE_MLOC02F = 0xF70,
  AE_MLOC02G = 0xF71,
  AE_MLOC02H = 0xF72,
  AE_MLOC02J = 0xF73,
  AE_MLOC02K = 0xF74,
  AE_MLOC03A = 0xF75,
  AE_MLOC03B = 0xF76,
  AE_MLOC03C = 0xF77,
  AE_MLOC03D = 0xF78,
  AE_MLOC03E = 0xF79,
  AE_MLOC03F = 0xF7A,
  AE_MLOC03H = 0xF7B,
  AE_MLOC04A = 0xF7C,
  AE_MLOC04B = 0xF7D,
  AE_MLOC04C = 0xF7E,
  AE_MLOC04D = 0xF7F,
  AE_MMICH1A = 0xF80,
  AE_MMICH1B = 0xF81,
  AE_MMICH1C = 0xF82,
  AE_MMICH1D = 0xF83,
  AE_MMICH1E = 0xF84,
  AE_MMICH1F = 0xF85,
  AE_MMICH1G = 0xF86,
  AE_MMICH1H = 0xF87,
  AE_MMICH1J = 0xF88,
  AE_MMICH2A = 0xF89,
  AE_MMICH2B = 0xF8A,
  AE_MMICH3A = 0xF8B,
  AE_MMICH3D = 0xF8C,
  AE_MMICH4A = 0xF8D,
  AE_MMICH4B = 0xF8E,
  AE_MMICH5A = 0xF8F,
  AE_MMICH5D = 0xF90,
  AE_MMICH6A = 0xF91,
  AE_MMICH6D = 0xF92,
  AE_MMICH7D = 0xF93,
  AE_MMICH8D = 0xF94,
  AE_MMICH9D = 0xF95,
  AE_MMIL10D = 0xF96,
  AE_MMILL1A = 0xF97,
  AE_MMILL1B = 0xF98,
  AE_MMILL1C = 0xF99,
  AE_MMILL1D = 0xF9A,
  AE_MMILL1E = 0xF9B,
  AE_MMILL1F = 0xF9C,
  AE_MMILL1G = 0xF9D,
  AE_MMILL1H = 0xF9E,
  AE_MMILL1J = 0xF9F,
  AE_MMILL1K = 0xFA0,
  AE_MMILL2A = 0xFA1,
  AE_MMILL2B = 0xFA2,
  AE_MMILL2C = 0xFA3,
  AE_MMILL2D = 0xFA4,
  AE_MMILL2E = 0xFA5,
  AE_MMILL2F = 0xFA6,
  AE_MMILL2G = 0xFA7,
  AE_MMILL2H = 0xFA8,
  AE_MMILL2J = 0xFA9,
  AE_MMILL2K = 0xFAA,
  AE_MMILL2L = 0xFAB,
  AE_MMILL3A = 0xFAC,
  AE_MMILL3B = 0xFAD,
  AE_MMILL4A = 0xFAE,
  AE_MMILL4D = 0xFAF,
  AE_MMILL5A = 0xFB0,
  AE_MMILL5D = 0xFB1,
  AE_MMILL6A = 0xFB2,
  AE_MMILL6B = 0xFB3,
  AE_MMILL7A = 0xFB4,
  AE_MMILL7D = 0xFB5,
  AE_MMILL8D = 0xFB6,
  AE_MMILL9D = 0xFB7,
  AE_REVERB_CAR_SCREECH = 0xFB8,
  AE_MPUL01B = 0xFB9,
  AE_MPUL01G = 0xFBA,
  AE_MPUL01H = 0xFBB,
  AE_MPUL01M = 0xFBC,
  AE_MPUL01O = 0xFBD,
  AE_MROS01B = 0xFBE,
  AE_MROS01D = 0xFBF,
  AE_MROS01E = 0xFC0,
  AE_MROS01F = 0xFC1,
  AE_MROS01H = 0xFC2,
  AE_MROS01L = 0xFC3,
  AE_MROS02A = 0xFC4,
  AE_MROS02B = 0xFC5,
  AE_MROS02C = 0xFC6,
  AE_MROS02D = 0xFC7,
  AE_MROS02E = 0xFC8,
  AE_MROS02F = 0xFC9,
  AE_MROS02G = 0xFCA,
  AE_MROS03A = 0xFCB,
  AE_MROS03B = 0xFCC,
  AE_MROS03C = 0xFCD,
  AE_MROS03D = 0xFCE,
  AE_MROS03E = 0xFCF,
  AE_MROS03F = 0xFD0,
  AE_MROS03G = 0xFD1,
  AE_MROS03H = 0xFD2,
  AE_MROS03J = 0xFD3,
  AE_MROS03K = 0xFD4,
  AE_MROS03L = 0xFD5,
  AE_MROS03N = 0xFD6,
  AE_MROS03O = 0xFD7,
  AE_MROS03P = 0xFD8,
  AE_MROS03Q = 0xFD9,
  AE_MSAL01A = 0xFDA,
  AE_MSAL01B = 0xFDB,
  AE_MSAL01C = 0xFDC,
  AE_MSAL01D = 0xFDD,
  AE_MSAL01E = 0xFDE,
  AE_MSAL01F = 0xFDF,
  AE_MSAL01G = 0xFE0,
  AE_MSAL01H = 0xFE1,
  AE_MSAL01J = 0xFE2,
  AE_MSAL01K = 0xFE3,
  AE_MSAL01M = 0xFE4,
  AE_MSAL01N = 0xFE5,
  AE_MSAL01O = 0xFE6,
  AE_MSAL02A = 0xFE7,
  AE_MSAL02B = 0xFE8,
  AE_MSAL02C = 0xFE9,
  AE_MSAL02D = 0xFEA,
  AE_MSAL02E = 0xFEB,
  AE_MSAL02F = 0xFEC,
  AE_MSAL02G = 0xFED,
  AE_MSAL02H = 0xFEE,
  AE_MSAL02J = 0xFEF,
  AE_MSAL02K = 0xFF0,
  AE_MSMK01A = 0xFF1,
  AE_MSMK01B = 0xFF2,
  AE_MSMK01C = 0xFF3,
  AE_MSMK01D = 0xFF4,
  AE_MSMK01E = 0xFF5,
  AE_MSMK01F = 0xFF6,
  AE_MSMK01G = 0xFF7,
  AE_MSMK01H = 0xFF8,
  AE_MSMK01J = 0xFF9,
  AE_MSMK01K = 0xFFA,
  AE_MSMK01L = 0xFFB,
  AE_MSMK01M = 0xFFC,
  AE_MSWE01A = 0xFFD,
  AE_MSWE01B = 0xFFE,
  AE_MSWE01C = 0xFFF,
  AE_MSWE01D = 0x1000,
  AE_MSWE01E = 0x1001,
  AE_MSWE01F = 0x1002,
  AE_MSWE01G = 0x1003,
  AE_MSWE01H = 0x1004,
  AE_MSWE01J = 0x1005,
  AE_MSWE01K = 0x1006,
  AE_MSWE01L = 0x1007,
  AE_MSWE01M = 0x1008,
  AE_MSWE01N = 0x1009,
  AE_MSWE02A = 0x100A,
  AE_MSWE02B = 0x100B,
  AE_MSWE02C = 0x100C,
  AE_MSWE02D = 0x100D,
  AE_MSWE02E = 0x100E,
  AE_MSWE02F = 0x100F,
  AE_MSWE02G = 0x1010,
  AE_MSWE02H = 0x1011,
  AE_MSWE02J = 0x1012,
  AE_MSWE02K = 0x1013,
  AE_MSWE02L = 0x1014,
  AE_MSWE03A = 0x1015,
  AE_MSWE03B = 0x1016,
  AE_MSWE03C = 0x1017,
  AE_MSWE03D = 0x1018,
  AE_MSWE03E = 0x1019,
  AE_MSWE03F = 0x101A,
  AE_MSWE03G = 0x101B,
  AE_MSWE03H = 0x101C,
  AE_MSWE03J = 0x101D,
  AE_MSWE03K = 0x101E,
  AE_MSWE04A = 0x101F,
  AE_MSWE04B = 0x1020,
  AE_MSWE04C = 0x1021,
  AE_MSWE04D = 0x1022,
  AE_MSWE04E = 0x1023,
  AE_MSWE04F = 0x1024,
  AE_MSWE04G = 0x1025,
  AE_MSWE04H = 0x1026,
  AE_MSWE05A = 0x1027,
  AE_MSWE05B = 0x1028,
  AE_MSWE05C = 0x1029,
  AE_MSWE05D = 0x102A,
  AE_MSWE05E = 0x102B,
  AE_MSWE05F = 0x102C,
  AE_MSWE05G = 0x102D,
  AE_MSWE05H = 0x102E,
  AE_MSWE05J = 0x102F,
  AE_MSWE05K = 0x1030,
  AE_MSWE06A = 0x1031,
  AE_MSWE06B = 0x1032,
  AE_MSWE06C = 0x1033,
  AE_MSWE06D = 0x1034,
  AE_MSWE06E = 0x1035,
  AE_MSWE06F = 0x1036,
  AE_MSWE06G = 0x1037,
  AE_MSWE06H = 0x1038,
  AE_MSWE06J = 0x1039,
  AE_MSWE06K = 0x103A,
  AE_MSWE06L = 0x103B,
  AE_MSWE06M = 0x103C,
  AE_MSWE06N = 0x103D,
  AE_MSWE06O = 0x103E,
  AE_MSWE07A = 0x103F,
  AE_MSWE07B = 0x1040,
  AE_MSWE07C = 0x1041,
  AE_MSWE07D = 0x1042,
  AE_MSWE07E = 0x1043,
  AE_MSWE07F = 0x1044,
  AE_MSWE07G = 0x1045,
  AE_MSWE07H = 0x1046,
  AE_MSWE07J = 0x1047,
  AE_MSWE07K = 0x1048,
  AE_MSWE08A = 0x1049,
  AE_MSWE08B = 0x104A,
  AE_MSWE08C = 0x104B,
  AE_MSWE08D = 0x104C,
  AE_MSWE08E = 0x104D,
  AE_MSWE08F = 0x104E,
  AE_MSWE08G = 0x104F,
  AE_MSWE08H = 0x1050,
  AE_MSWE08J = 0x1051,
  AE_MSWE08K = 0x1052,
  AE_MSWE08L = 0x1053,
  AE_MSWE08M = 0x1054,
  AE_MSWE08N = 0x1055,
  AE_MSWE09A = 0x1056,
  AE_MSWE09B = 0x1057,
  AE_MSWE09C = 0x1058,
  AE_MSWE09E = 0x1059,
  AE_MSWE09F = 0x105A,
  AE_MSWE09G = 0x105B,
  AE_MSWE09H = 0x105C,
  AE_MSWE10A = 0x105D,
  AE_MSWE10B = 0x105E,
  AE_MSWE10C = 0x105F,
  AE_MSWE10D = 0x1060,
  AE_MSWE10E = 0x1061,
  AE_MSWE10F = 0x1062,
  AE_MSWE10G = 0x1063,
  AE_MSWE10H = 0x1064,
  AE_MSWE10J = 0x1065,
  AE_MSWE10K = 0x1066,
  AE_MSWE10L = 0x1067,
  AE_MSWE10N = 0x1068,
  AE_MSWE11A = 0x1069,
  AE_MSWE11B = 0x106A,
  AE_MSWE11C = 0x106B,
  AE_MSWE11D = 0x106C,
  AE_MSWE11E = 0x106D,
  AE_MSWE11F = 0x106E,
  AE_MSWE11G = 0x106F,
  AE_MSWE11H = 0x1070,
  AE_MSWE11J = 0x1071,
  AE_MSWE12A = 0x1072,
  AE_MSWE12B = 0x1073,
  AE_MSWE12C = 0x1074,
  AE_MSWE12D = 0x1075,
  AE_MSWE12E = 0x1076,
  AE_MSWE12F = 0x1077,
  AE_MSWE12G = 0x1078,
  AE_MSWE12H = 0x1079,
  AE_MSWE12J = 0x107A,
  AE_MSWE12K = 0x107B,
  AE_MSWE12L = 0x107C,
  AE_MSWE12M = 0x107D,
  AE_MSWE12N = 0x107E,
  AE_MSWE12O = 0x107F,
  AE_MSWE12P = 0x1080,
  AE_MSWE12Q = 0x1081,
  AE_MSWE12R = 0x1082,
  AE_MSWE12S = 0x1083,
  AE_MSWE12T = 0x1084,
  AE_MSWE12U = 0x1085,
  AE_MSWE13A = 0x1086,
  AE_MSWE13B = 0x1087,
  AE_MSWE13C = 0x1088,
  AE_MSWE13D = 0x1089,
  AE_MSWE13E = 0x108A,
  AE_MSWE13F = 0x108B,
  AE_MSWE13G = 0x108C,
  AE_MSWE14A = 0x108D,
  AE_MSWE14B = 0x108E,
  AE_MSWE14C = 0x108F,
  AE_MSWE14D = 0x1090,
  AE_MSWE14E = 0x1091,
  AE_MSWE14F = 0x1092,
  AE_MSWE14G = 0x1093,
  AE_MSWE14H = 0x1094,
  AE_MSWE14J = 0x1095,
  AE_MSWE14K = 0x1096,
  AE_MSWE14L = 0x1097,
  AE_MSWE14N = 0x1098,
  AE_MTEN01A = 0x1099,
  AE_MTEN01B = 0x109A,
  AE_MTEN01C = 0x109B,
  AE_MTEN01D = 0x109C,
  AE_MTEN01E = 0x109D,
  AE_MTEN01F = 0x109E,
  AE_MTEN01G = 0x109F,
  AE_MTEN01H = 0x10A0,
  AE_MTEN01J = 0x10A1,
  AE_MTEN02A = 0x10A2,
  AE_MTEN02B = 0x10A3,
  AE_MTEN02C = 0x10A4,
  AE_MTEN02D = 0x10A5,
  AE_MTEN02E = 0x10A6,
  AE_MTEN02F = 0x10A7,
  AE_MTEN03B = 0x10A8,
  AE_MTEN03D = 0x10A9,
  AE_MTEN03M = 0x10AA,
  AE_MTG01A = 0x10AB,
  AE_MTG01B = 0x10AC,
  AE_MTG01C = 0x10AD,
  AE_MTG01D = 0x10AE,
  AE_MTG01E = 0x10AF,
  AE_MTG01F = 0x10B0,
  AE_MTG01G = 0x10B1,
  AE_MTG01H = 0x10B2,
  AE_MTG02A = 0x10B3,
  AE_MTG02B = 0x10B4,
  AE_MTG02C = 0x10B5,
  AE_MTG02D = 0x10B6,
  AE_MTG02E = 0x10B7,
  AE_MTG02F = 0x10B8,
  AE_MTOR01A = 0x10B9,
  AE_MTOR01B = 0x10BA,
  AE_MTOR01C = 0x10BB,
  AE_MTOR01D = 0x10BC,
  AE_MTOR01E = 0x10BD,
  AE_MTOR01F = 0x10BE,
  AE_MTOR01G = 0x10BF,
  AE_MTOR01H = 0x10C0,
  AE_MTOR01J = 0x10C1,
  AE_MTOR01K = 0x10C2,
  AE_MTOR01L = 0x10C3,
  AE_MTOR02A = 0x10C4,
  AE_MTOR02B = 0x10C5,
  AE_MTOR02C = 0x10C6,
  AE_MTOR02D = 0x10C7,
  AE_MTOR02E = 0x10C8,
  AE_MTOR03A = 0x10C9,
  AE_MTOR03B = 0x10CA,
  AE_MTOR04A = 0x10CB,
  AE_MTOR04B = 0x10CC,
  AE_MTOR04C = 0x10CD,
  AE_MTOR04D = 0x10CE,
  AE_MTOR04E = 0x10CF,
  AE_MTOR04F = 0x10D0,
  AE_MTOR04G = 0x10D1,
  AE_MTOR04H = 0x10D2,
  AE_MTOR04J = 0x10D3,
  AE_MTOR04K = 0x10D4,
  AE_MTOR04L = 0x10D5,
  AE_MTOR04M = 0x10D6,
  AE_MTOR05A = 0x10D7,
  AE_MTOR05B = 0x10D8,
  AE_MTOR05C = 0x10D9,
  AE_MTOR05D = 0x10DA,
  AE_MTOR05E = 0x10DB,
  AE_MTOR05F = 0x10DC,
  AE_MTOR05G = 0x10DD,
  AE_MTOR05H = 0x10DE,
  AE_MTOR05J = 0x10DF,
  AE_MTOR06A = 0x10E0,
  AE_MTOR06B = 0x10E1,
  AE_MTOR06C = 0x10E2,
  AE_MTOR06D = 0x10E3,
  AE_MTOR06E = 0x10E4,
  AE_MTOR06F = 0x10E5,
  AE_MTOR06G = 0x10E6,
  AE_MTOR06H = 0x10E7,
  AE_MTOR06J = 0x10E8,
  AE_MTOR06K = 0x10E9,
  AE_MTOR06L = 0x10EA,
  AE_MTOR06M = 0x10EB,
  AE_MTOR06N = 0x10EC,
  AE_MTOR07A = 0x10ED,
  AE_MTOR07B = 0x10EE,
  AE_MTOR07C = 0x10EF,
  AE_MTOR07D = 0x10F0,
  AE_MTOR07E = 0x10F1,
  AE_MTOR07F = 0x10F2,
  AE_MTOR07G = 0x10F3,
  AE_MTOR07H = 0x10F4,
  AE_MTOR07J = 0x10F5,
  AE_MTOR07K = 0x10F6,
  AE_MTOR07L = 0x10F7,
  AE_MTOR07M = 0x10F8,
  AE_MTOR07N = 0x10F9,
  AE_MTOR07O = 0x10FA,
  AE_MTRU01A = 0x10FB,
  AE_MTRU01B = 0x10FC,
  AE_MTRU01C = 0x10FD,
  AE_MTRU01D = 0x10FE,
  AE_MTRU01E = 0x10FF,
  AE_MTRU01F = 0x1100,
  AE_MTRU01G = 0x1101,
  AE_MTRU01H = 0x1102,
  AE_MTRU01J = 0x1103,
  AE_MTRU01K = 0x1104,
  AE_MTRU01L = 0x1105,
  AE_MTRU01M = 0x1106,
  AE_MTRU01N = 0x1107,
  AE_MTRU01O = 0x1108,
  AE_MTRU01P = 0x1109,
  AE_MTRU02A = 0x110A,
  AE_MTRU02B = 0x110B,
  AE_MTRU02C = 0x110C,
  AE_MTRU02D = 0x110D,
  AE_MTRU02E = 0x110E,
  AE_MTRU02F = 0x110F,
  AE_MTRU03A = 0x1110,
  AE_MTRU03B = 0x1111,
  AE_MTRU03C = 0x1112,
  AE_MTRU03D = 0x1113,
  AE_MTRU03E = 0x1114,
  AE_MWUZ00A = 0x1115,
  AE_MWUZ00B = 0x1116,
  AE_MWUZ00C = 0x1117,
  AE_MWUZ00D = 0x1118,
  AE_MWUZ00E = 0x1119,
  AE_MWUZ00F = 0x111A,
  AE_MWUZ00G = 0x111B,
  AE_MWUZ00H = 0x111C,
  AE_MWUZ00J = 0x111D,
  AE_MWUZ01A = 0x111E,
  AE_MWUZ01B = 0x111F,
  AE_MWUZ01C = 0x1120,
  AE_MWUZ01D = 0x1121,
  AE_MWUZ01E = 0x1122,
  AE_MWUZ01F = 0x1123,
  AE_MWUZ01G = 0x1124,
  AE_MWUZ01H = 0x1125,
  AE_MWUZ01J = 0x1126,
  AE_MWUZ01K = 0x1127,
  AE_MWUZ02A = 0x1128,
  AE_MWUZ02B = 0x1129,
  AE_MWUZ02C = 0x112A,
  AE_MWUZ02D = 0x112B,
  AE_MWUZ02E = 0x112C,
  AE_MWUZ02F = 0x112D,
  AE_MWUZ02G = 0x112E,
  AE_MWUZ02H = 0x112F,
  AE_MWUZ02J = 0x1130,
  AE_MWUZ02K = 0x1131,
  AE_MWUZ03A = 0x1132,
  AE_MWUZ03B = 0x1133,
  AE_MWUZ03C = 0x1134,
  AE_MWUZ03D = 0x1135,
  AE_MWUZ03E = 0x1136,
  AE_MWUZ03F = 0x1137,
  AE_MWUZ03G = 0x1138,
  AE_MWUZ03H = 0x1139,
  AE_MWUZ03J = 0x113A,
  AE_MWUZ03K = 0x113B,
  AE_MWUZ03L = 0x113C,
  AE_MWUZ04A = 0x113D,
  AE_MWUZ04B = 0x113E,
  AE_MWUZ04C = 0x113F,
  AE_MWUZ04D = 0x1140,
  AE_MWUZ04E = 0x1141,
  AE_MWUZ04F = 0x1142,
  AE_MWUZ04G = 0x1143,
  AE_MWUZ04H = 0x1144,
  AE_MWUZ05A = 0x1145,
  AE_MWUZ05B = 0x1146,
  AE_MWUZ05C = 0x1147,
  AE_MWUZ05D = 0x1148,
  AE_MWUZ05E = 0x1149,
  AE_MWUZ05F = 0x114A,
  AE_MWUZ05G = 0x114B,
  AE_MWUZ05H = 0x114C,
  AE_MWUZ05J = 0x114D,
  AE_MWUZ06A = 0x114E,
  AE_MWUZ06B = 0x114F,
  AE_MWUZ06C = 0x1150,
  AE_MWUZ06D = 0x1151,
  AE_MWUZ06E = 0x1152,
  AE_MWUZ06F = 0x1153,
  AE_MWUZ06G = 0x1154,
  AE_MWUZ06H = 0x1155,
  AE_MWUZ06J = 0x1156,
  AE_MWUZ06K = 0x1157,
  AE_MWUZ06L = 0x1158,
  AE_MWUZ06M = 0x1159,
  AE_MWUZ06N = 0x115A,
  AE_MWUZ07A = 0x115B,
  AE_MWUZ07B = 0x115C,
  AE_MWUZ07C = 0x115D,
  AE_MWUZ07D = 0x115E,
  AE_MWUZ07E = 0x115F,
  AE_MWUZ08B = 0x1160,
  AE_MWUZ08C = 0x1161,
  AE_MWUZ08D = 0x1162,
  AE_MWUZ08F = 0x1163,
  AE_MWUZ09E = 0x1164,
  AE_MWUZ09F = 0x1165,
  AE_MWUZ09H = 0x1166,
  AE_MWUZ09J = 0x1167,
  AE_MZAHN1A = 0x1168,
  AE_MZAHN1B = 0x1169,
  AE_MZAHN1C = 0x116A,
  AE_MZAHN1D = 0x116B,
  AE_MZAHN1E = 0x116C,
  AE_MZAHN1F = 0x116D,
  AE_MZAHN1G = 0x116E,
  AE_MZAHN1H = 0x116F,
  AE_MZAHN1J = 0x1170,
  AE_MZAHN2A = 0x1171,
  AE_MZAHN2D = 0x1172,
  AE_MZAHN3A = 0x1173,
  AE_MZAHN3B = 0x1174,
  AE_MZAHN4A = 0x1175,
  AE_MZAHN4D = 0x1176,
  AE_MZAHN5A = 0x1177,
  AE_MZAHN5B = 0x1178,
  AE_MZAHN6A = 0x1179,
  AE_MZAHN6D = 0x117A,
  AE_MZAHN7D = 0x117B,
  AE_MZAHN8D = 0x117C,
  AE_MZAHN9D = 0x117D,
  AE_MZER01A = 0x117E,
  AE_MZER01B = 0x117F,
  AE_MZER01C = 0x1180,
  AE_MZER01D = 0x1181,
  AE_MZER01E = 0x1182,
  AE_MZER01F = 0x1183,
  AE_MZER01G = 0x1184,
  AE_MZER02A = 0x1185,
  AE_MZER02B = 0x1186,
  AE_MZER02C = 0x1187,
  AE_MZER02D = 0x1188,
  AE_MZER02E = 0x1189,
  AE_MZER02F = 0x118A,
  AE_MZER02G = 0x118B,
  AE_MZER02H = 0x118C,
  AE_MZER02J = 0x118D,
  AE_MZER02K = 0x118E,
  AE_RADAR_LEVEL_WARNING = 0x118F,
  AE_NULL_1A = 0x1190,
  AE_NULL_1B = 0x1191,
  AE_NULL_2A = 0x1192,
  AE_NULL_2B = 0x1193,
  AE__OGLOC_DOORBELL = 0x1194,
  AE__OGLOC_WINDOW_RATTLE_BANG = 0x1195,
  AE__BET_ZERO = 0x1196,
  AE__INCREASE_BET = 0x1197,
  AE__LOSE = 0x1198,
  AE__NO_CASH = 0x1199,
  AE__PLACEBET = 0x119A,
  AE__WIN = 0x119B,
  AE_PIMP_CUSTOMER_SEX = 0x119C,
  AE_POOL_B1 = 0x119D,
  AE_POOL_B2 = 0x119E,
  AE_POOL_B3 = 0x119F,
  AE_POOL_B4 = 0x11A0,
  AE_POOL_B5 = 0x11A1,
  AE_POOL_B6 = 0x11A2,
  AE__POOL_BALL_HIT_BALL_1 = 0x11A3,
  AE__POOL_BALL_HIT_BALL_2 = 0x11A4,
  AE__POOL_BALL_HIT_BALL_3 = 0x11A5,
  AE__POOL_BALL_POT_1 = 0x11A6,
  AE__POOL_BALL_POT_2 = 0x11A7,
  AE__POOL_BALL_POT_3 = 0x11A8,
  AE__POOL_BREAK = 0x11A9,
  AE__POOL_CHALK_CUE = 0x11AA,
  AE__POOL_HIT_CUSHION_1 = 0x11AB,
  AE__POOL_HIT_CUSHION_2 = 0x11AC,
  AE__POOL_HIT_WHITE = 0x11AD,
  AE_FIT_TYRE = 0x11AE,
  AE__CJ_EAT = 0x11AF,
  AE__CJ_PUKE = 0x11B0,
  AE_CAR_SMASH_SIGN = 0x11B1,
  AE_CEILING_VENT_OPEN = 0x11B2,
  AE_HELI_SLASH_PED = 0x11B3,
  AE_TRAILER_HOOKUP = 0x11B4,
  AE_ROT1_AA = 0x11B5,
  AE_ROT1_AB = 0x11B6,
  AE_ROT1_BA = 0x11B7,
  AE_ROT1_BB = 0x11B8,
  AE_ROT1_BC = 0x11B9,
  AE_ROT1_BD = 0x11BA,
  AE_ROT1_BE = 0x11BB,
  AE_ROT1_DA = 0x11BC,
  AE_ROT1_DB = 0x11BD,
  AE_ROT1_DC = 0x11BE,
  AE_ROT1_EA = 0x11BF,
  AE_ROT1_EB = 0x11C0,
  AE_ROT1_EC = 0x11C1,
  AE_ROT1_ED = 0x11C2,
  AE_ROT1_EE = 0x11C3,
  AE_ROT1_EF = 0x11C4,
  AE_ROT1_EG = 0x11C5,
  AE_ROT1_EH = 0x11C6,
  AE_ROT1_EJ = 0x11C7,
  AE_ROT1_EK = 0x11C8,
  AE_ROT1_EL = 0x11C9,
  AE_ROT1_EM = 0x11CA,
  AE_ROT1_EN = 0x11CB,
  AE_ROT1_FA = 0x11CC,
  AE_ROT1_FB = 0x11CD,
  AE_ROT1_FC = 0x11CE,
  AE_ROT1_FD = 0x11CF,
  AE_ROT1_FE = 0x11D0,
  AE_ROT1_FF = 0x11D1,
  AE_ROT1_FG = 0x11D2,
  AE_ROT1_FH = 0x11D3,
  AE_ROT1_GA = 0x11D4,
  AE_ROT1_GB = 0x11D5,
  AE_ROT1_GC = 0x11D6,
  AE_ROT1_GD = 0x11D7,
  AE_ROT1_GE = 0x11D8,
  AE_ROT1_GG = 0x11D9,
  AE_ROT1_GH = 0x11DA,
  AE_ROT1_GJ = 0x11DB,
  AE_ROT1_GK = 0x11DC,
  AE_ROT1_GL = 0x11DD,
  AE_ROT1_GM = 0x11DE,
  AE_ROT1_HA = 0x11DF,
  AE_ROT1_HB = 0x11E0,
  AE_ROT1_HC = 0x11E1,
  AE_ROT1_HD = 0x11E2,
  AE_ROT1_HE = 0x11E3,
  AE_ROT1_HF = 0x11E4,
  AE_ROT2_AA = 0x11E5,
  AE_ROT2_AB = 0x11E6,
  AE_ROT2_AD = 0x11E7,
  AE_ROT2_AE = 0x11E8,
  AE_ROT2_BA = 0x11E9,
  AE_ROT2_BB = 0x11EA,
  AE_ROT2_BC = 0x11EB,
  AE_ROT2_BD = 0x11EC,
  AE_ROT2_CA = 0x11ED,
  AE_ROT2_CB = 0x11EE,
  AE_ROT2_CC = 0x11EF,
  AE_ROT2_CD = 0x11F0,
  AE_ROT2_CE = 0x11F1,
  AE_ROT2_CF = 0x11F2,
  AE_ROT2_CG = 0x11F3,
  AE_ROT2_CH = 0x11F4,
  AE_ROT2_CJ = 0x11F5,
  AE_ROT2_CK = 0x11F6,
  AE_ROT2_CL = 0x11F7,
  AE_ROT2_CM = 0x11F8,
  AE_ROT2_CN = 0x11F9,
  AE_ROT2_CO = 0x11FA,
  AE_ROT2_CP = 0x11FB,
  AE_ROT2_CQ = 0x11FC,
  AE_ROT2_DA = 0x11FD,
  AE_ROT2_DB = 0x11FE,
  AE_ROT2_DC = 0x11FF,
  AE_ROT2_DD = 0x1200,
  AE_ROT2_DE = 0x1201,
  AE_ROT2_DF = 0x1202,
  AE_ROT2_DH = 0x1203,
  AE_ROT2_DJ = 0x1204,
  AE_ROT2_DK = 0x1205,
  AE_ROT2_DL = 0x1206,
  AE_ROT2_DM = 0x1207,
  AE_ROT2_EA = 0x1208,
  AE_ROT2_EB = 0x1209,
  AE_ROT2_EC = 0x120A,
  AE_ROT2_ED = 0x120B,
  AE_ROT2_EE = 0x120C,
  AE_ROT2_EF = 0x120D,
  AE_ROT2_EG = 0x120E,
  AE_ROT2_EH = 0x120F,
  AE_ROT2_EJ = 0x1210,
  AE_ROT2_EK = 0x1211,
  AE_ROT2_EL = 0x1212,
  AE_ROT2_EM = 0x1213,
  AE_ROT2_EN = 0x1214,
  AE_ROT2_EO = 0x1215,
  AE_ROT2_EP = 0x1216,
  AE_ROT2_EQ = 0x1217,
  AE_ROT2_ER = 0x1218,
  AE_ROT2_ES = 0x1219,
  AE_ROT2_ET = 0x121A,
  AE_ROT2_EU = 0x121B,
  AE_ROT2_EV = 0x121C,
  AE_ROT2_EW = 0x121D,
  AE_ROT2_EX = 0x121E,
  AE_ROT2_EY = 0x121F,
  AE_ROT2_FA = 0x1220,
  AE_ROT2_FB = 0x1221,
  AE_ROT2_FC = 0x1222,
  AE_ROT2_FD = 0x1223,
  AE_ROT2_FE = 0x1224,
  AE_ROT2_FG = 0x1225,
  AE_ROT2_FH = 0x1226,
  AE_ROT2_GA = 0x1227,
  AE_ROT2_GB = 0x1228,
  AE_ROT2_GC = 0x1229,
  AE_ROT2_GD = 0x122A,
  AE_ROT2_HA = 0x122B,
  AE_ROT2_HB = 0x122C,
  AE_ROT2_HC = 0x122D,
  AE_ROT2_JA = 0x122E,
  AE_ROT2_JB = 0x122F,
  AE_ROT2_KA = 0x1230,
  AE_ROT2_KB = 0x1231,
  AE_ROT2_KC = 0x1232,
  AE_ROT2_LA = 0x1233,
  AE_ROT2_LB = 0x1234,
  AE_ROT2_LC = 0x1235,
  AE_ROT2_MA = 0x1236,
  AE_ROT2_MB = 0x1237,
  AE_ROT2_MC = 0x1238,
  AE_ROT2_MD = 0x1239,
  AE_ROT2_ME = 0x123A,
  AE_ROT2_MF = 0x123B,
  AE_ROT2_MG = 0x123C,
  AE_ROT2_MH = 0x123D,
  AE_ROT4_AA = 0x123E,
  AE_ROT4_AB = 0x123F,
  AE_ROT4_AC = 0x1240,
  AE_ROT4_BA = 0x1241,
  AE_ROT4_BB = 0x1242,
  AE_ROT4_BC = 0x1243,
  AE_ROT4_BD = 0x1244,
  AE_ROT4_BE = 0x1245,
  AE_ROT4_BF = 0x1246,
  AE_ROT4_BG = 0x1247,
  AE_ROT4_BH = 0x1248,
  AE_ROT4_BJ = 0x1249,
  AE_ROT4_CA = 0x124A,
  AE_ROT4_CB = 0x124B,
  AE_ROT4_CC = 0x124C,
  AE_ROT4_DA = 0x124D,
  AE_ROT4_DB = 0x124E,
  AE_ROT4_EA = 0x124F,
  AE_ROT4_EB = 0x1250,
  AE_ROT4_EC = 0x1251,
  AE_ROT4_ED = 0x1252,
  AE_ROT4_FA = 0x1253,
  AE_ROT4_FB = 0x1254,
  AE_ROT4_FC = 0x1255,
  AE_ROT4_FD = 0x1256,
  AE_ROT4_GA = 0x1257,
  AE_ROT4_GB = 0x1258,
  AE_ROT4_HA = 0x1259,
  AE_ROT4_HB = 0x125A,
  AE_ROT4_HC = 0x125B,
  AE_ROT4_JB = 0x125C,
  AE_ROT4_JC = 0x125D,
  AE_ROT4_JD = 0x125E,
  AE_ROT4_KA = 0x125F,
  AE_ROT4_KB = 0x1260,
  AE_ROT4_KC = 0x1261,
  AE_ROT4_KD = 0x1262,
  AE_ROT4_KE = 0x1263,
  AE_ROT4_KF = 0x1264,
  AE_ROT4_KG = 0x1265,
  AE_ROT4_KH = 0x1266,
  AE_ROT4_KJ = 0x1267,
  AE_ROT4_LA = 0x1268,
  AE_ROT4_LB = 0x1269,
  AE_ROT4_MA = 0x126A,
  AE_ROT4_MB = 0x126B,
  AE_ROT4_MC = 0x126C,
  AE_ROT4_MD = 0x126D,
  AE_ROT4_ME = 0x126E,
  AE_ROT4_NA = 0x126F,
  AE_ROT4_NB = 0x1270,
  AE_ROT4_NC = 0x1271,
  AE_ROT4_ND = 0x1272,
  AE_ROT4_NE = 0x1273,
  AE_ROT4_NF = 0x1274,
  AE_ROT4_NG = 0x1275,
  AE_ROT4_NH = 0x1276,
  AE_ROT4_NJ = 0x1277,
  AE_ROT4_NK = 0x1278,
  AE_ROT4_NL = 0x1279,
  AE_ROT4_NM = 0x127A,
  AE_ROT4_NN = 0x127B,
  AE_ROT4_NO = 0x127C,
  AE_ROT4_NP = 0x127D,
  AE_ROT4_NQ = 0x127E,
  AE_ROT4_NR = 0x127F,
  AE_ROT4_NS = 0x1280,
  AE_ROT4_NT = 0x1281,
  AE_ROT4_NU = 0x1282,
  AE_ROT4_OA = 0x1283,
  AE_ROT4_OD = 0x1284,
  AE_ROT4_PA = 0x1285,
  AE_ROT4_PB = 0x1286,
  AE_ROT4_PC = 0x1287,
  AE_ROT4_QA = 0x1288,
  AE_ROT4_QB = 0x1289,
  AE_ROT4_QC = 0x128A,
  AE_ROT4_QD = 0x128B,
  AE_ROT4_QE = 0x128C,
  AE_ROT4_RA = 0x128D,
  AE_ROT4_RB = 0x128E,
  AE_ROT4_RC = 0x128F,
  AE_ROT4_RD = 0x1290,
  AE_ROT4_RE = 0x1291,
  AE_ROT4_SA = 0x1292,
  AE_ROT4_SB = 0x1293,
  AE_ROT4_TA = 0x1294,
  AE_ROT4_TB = 0x1295,
  AE_ROT4_TC = 0x1296,
  AE_ROT4_TD = 0x1297,
  AE_ROT4_TE = 0x1298,
  AE_ROT4_TF = 0x1299,
  AE_ROT4_TG = 0x129A,
  AE_ROT4_TH = 0x129B,
  AE_ROT4_TJ = 0x129C,
  AE_ROT4_TK = 0x129D,
  AE_ROT4_TL = 0x129E,
  AE_ROT4_TM = 0x129F,
  AE_ROT4_UA = 0x12A0,
  AE_ROT4_UB = 0x12A1,
  AE_ROT4_UC = 0x12A2,
  AE_ROT4_UD = 0x12A3,
  AE_ROT4_ZA = 0x12A4,
  AE_ROT4_ZB = 0x12A5,
  AE_ROT4_ZC = 0x12A6,
  AE__ROULETTE_SPIN = 0x12A7,
  AE__ROULETTE_BALL_BOUNCE1 = 0x12A8,
  AE__ROULETTE_BALL_BOUNCE2 = 0x12A9,
  AE__ROULETTE_BALL_BOUNCE3 = 0x12AA,
  AE_RYD1_AA = 0x12AB,
  AE_RYD1_AB = 0x12AC,
  AE_RYD1_AC = 0x12AD,
  AE_RYD1_AD = 0x12AE,
  AE_RYD1_AE = 0x12AF,
  AE_RYD1_AF = 0x12B0,
  AE_RYD1_AG = 0x12B1,
  AE_RYD1_AH = 0x12B2,
  AE_RYD1_AJ = 0x12B3,
  AE_RYD1_BA = 0x12B4,
  AE_RYD1_BB = 0x12B5,
  AE_RYD1_BC = 0x12B6,
  AE_RYD1_BD = 0x12B7,
  AE_RYD1_BE = 0x12B8,
  AE_RYD1_BF = 0x12B9,
  AE_RYD1_CA = 0x12BA,
  AE_RYD1_CB = 0x12BB,
  AE_RYD1_CC = 0x12BC,
  AE_RYD1_CD = 0x12BD,
  AE_RYD1_CE = 0x12BE,
  AE_RYD1_CF = 0x12BF,
  AE_RYD1_DB = 0x12C0,
  AE_RYD1_DC = 0x12C1,
  AE_RYD1_DD = 0x12C2,
  AE_RYD1_DE = 0x12C3,
  AE_RYD1_DF = 0x12C4,
  AE_RYD1_DG = 0x12C5,
  AE_RYD1_DH = 0x12C6,
  AE_RYD1_DJ = 0x12C7,
  AE_RYD1_DK = 0x12C8,
  AE_RYD1_DL = 0x12C9,
  AE_RYD1_EA = 0x12CA,
  AE_RYD1_EB = 0x12CB,
  AE_RYD1_EC = 0x12CC,
  AE_RYD1_ED = 0x12CD,
  AE_RYD1_FA = 0x12CE,
  AE_RYD1_FB = 0x12CF,
  AE_RYD1_FC = 0x12D0,
  AE_RYD1_GA = 0x12D1,
  AE_RYD1_GB = 0x12D2,
  AE_RYD1_GC = 0x12D3,
  AE_RYD1_GD = 0x12D4,
  AE_RYD1_GE = 0x12D5,
  AE_RYD1_GF = 0x12D6,
  AE_RYD1_GG = 0x12D7,
  AE_RYD1_GH = 0x12D8,
  AE_RYD1_GJ = 0x12D9,
  AE_RYD1_GK = 0x12DA,
  AE_RYD1_GL = 0x12DB,
  AE_RYD1_HA = 0x12DC,
  AE_RYD1_HB = 0x12DD,
  AE_RYD1_JA = 0x12DE,
  AE_RYD1_JB = 0x12DF,
  AE_RYD1_KA = 0x12E0,
  AE_RYD1_KB = 0x12E1,
  AE_RYD1_KC = 0x12E2,
  AE_RYD1_KD = 0x12E3,
  AE_RYD1_KE = 0x12E4,
  AE_RYD1_KF = 0x12E5,
  AE_RYD1_KG = 0x12E6,
  AE_RYD1_KH = 0x12E7,
  AE_RYD1_LA = 0x12E8,
  AE_RYD1_LB = 0x12E9,
  AE_RYD1_LC = 0x12EA,
  AE_RYD1_ZA = 0x12EB,
  AE_RYD1_ZB = 0x12EC,
  AE_RYD1_ZC = 0x12ED,
  AE_RYD1_ZD = 0x12EE,
  AE_RYD1_ZE = 0x12EF,
  AE_RYD1_ZF = 0x12F0,
  AE_RYD1_ZG = 0x12F1,
  AE_RYD1_ZH = 0x12F2,
  AE_RYD1_ZJ = 0x12F3,
  AE_RYD1_ZK = 0x12F4,
  AE_RYD1_ZL = 0x12F5,
  AE_RYD1_ZM = 0x12F6,
  AE_RYD1_ZN = 0x12F7,
  AE_RYD2_AA = 0x12F8,
  AE_RYD2_AB = 0x12F9,
  AE_RYD2_BA = 0x12FA,
  AE_RYD2_BB = 0x12FB,
  AE_RYD2_BC = 0x12FC,
  AE_RYD2_CA = 0x12FD,
  AE_RYD2_CB = 0x12FE,
  AE_RYD2_CC = 0x12FF,
  AE_RYD2_CD = 0x1300,
  AE_RYD2_CE = 0x1301,
  AE_RYD2_CF = 0x1302,
  AE_RYD2_CG = 0x1303,
  AE_RYD2_CH = 0x1304,
  AE_RYD2_CJ = 0x1305,
  AE_RYD2_DA = 0x1306,
  AE_RYD2_DB = 0x1307,
  AE_RYD2_DC = 0x1308,
  AE_RYD2_DD = 0x1309,
  AE_RYD2_DE = 0x130A,
  AE_RYD2_DF = 0x130B,
  AE_RYD2_EA = 0x130C,
  AE_RYD2_EB = 0x130D,
  AE_RYD2_FA = 0x130E,
  AE_RYD2_GA = 0x130F,
  AE_RYD2_GB = 0x1310,
  AE_RYD2_HA = 0x1311,
  AE_RYD2_HB = 0x1312,
  AE_RYD2_JA = 0x1313,
  AE_RYD2_JB = 0x1314,
  AE_RYD2_JC = 0x1315,
  AE_RYD2_KA = 0x1316,
  AE_RYD2_KB = 0x1317,
  AE_RYD2_KC = 0x1318,
  AE_RYD2_LA = 0x1319,
  AE_RYD2_LB = 0x131A,
  AE_RYD2_LC = 0x131B,
  AE_RYD2_LD = 0x131C,
  AE_RYD2_LE = 0x131D,
  AE_RYD2_LF = 0x131E,
  AE_RYD2_LG = 0x131F,
  AE_RYD2_LH = 0x1320,
  AE_RYD2_LJ = 0x1321,
  AE_RYD2_MA = 0x1322,
  AE_RYD2_MB = 0x1323,
  AE_RYD2_MC = 0x1324,
  AE_RYD2_MD = 0x1325,
  AE_RYD2_ME = 0x1326,
  AE_RYD2_MF = 0x1327,
  AE_RYD2_NA = 0x1328,
  AE_RYD2_NB = 0x1329,
  AE_RYD2_NC = 0x132A,
  AE_RYD2_ND = 0x132B,
  AE_RYD2_OA = 0x132C,
  AE_RYD2_OB = 0x132D,
  AE_RYD2_PA = 0x132E,
  AE_RYD2_PB = 0x132F,
  AE_RYD2_PC = 0x1330,
  AE_RYD2_PD = 0x1331,
  AE_RYD2_PE = 0x1332,
  AE_RYD2_PF = 0x1333,
  AE_RYD2_PG = 0x1334,
  AE_RYD2_QA = 0x1335,
  AE_RYD2_QB = 0x1336,
  AE_RYD2_QC = 0x1337,
  AE_RYD2_RA = 0x1338,
  AE_RYD2_RB = 0x1339,
  AE_RYD2_SA = 0x133A,
  AE_RYD2_SB = 0x133B,
  AE_RYD2_SC = 0x133C,
  AE_RYD2_SD = 0x133D,
  AE_RYD2_SE = 0x133E,
  AE_RYD2_SF = 0x133F,
  AE_RYD2_SG = 0x1340,
  AE_RYD2_SH = 0x1341,
  AE_RYD2_SJ = 0x1342,
  AE_RYD2_SK = 0x1343,
  AE_RYD2_TA = 0x1344,
  AE_RYD2_TB = 0x1345,
  AE_RYD2_TC = 0x1346,
  AE_RYD2_TD = 0x1347,
  AE_RYD2_UA = 0x1348,
  AE_RYD2_UB = 0x1349,
  AE_RYD2_UC = 0x134A,
  AE_RYD2_VA = 0x134B,
  AE_RYD2_VB = 0x134C,
  AE_RYD2_VC = 0x134D,
  AE_RYD2_VD = 0x134E,
  AE_RYD2_VE = 0x134F,
  AE_RYD2_VF = 0x1350,
  AE_RYD2_VG = 0x1351,
  AE_RYD3_AA = 0x1352,
  AE_RYD3_AB = 0x1353,
  AE_RYD3_AC = 0x1354,
  AE_RYD3_AD = 0x1355,
  AE_RYD3_AE = 0x1356,
  AE_RYD3_BA = 0x1357,
  AE_RYD3_BB = 0x1358,
  AE_RYD3_BC = 0x1359,
  AE_RYD3_BD = 0x135A,
  AE_RYD3_BE = 0x135B,
  AE_RYD3_BF = 0x135C,
  AE_RYD3_BG = 0x135D,
  AE_RYD3_BH = 0x135E,
  AE_RYD3_BJ = 0x135F,
  AE_RYD3_CA = 0x1360,
  AE_RYD3_CB = 0x1361,
  AE_RYD3_CC = 0x1362,
  AE_RYD3_CD = 0x1363,
  AE_RYD3_DA = 0x1364,
  AE_RYD3_DB = 0x1365,
  AE_RYD3_DC = 0x1366,
  AE_RYD3_EA = 0x1367,
  AE_RYD3_FA = 0x1368,
  AE_RYD3_FB = 0x1369,
  AE_RYD3_GA = 0x136A,
  AE_RYD3_GB = 0x136B,
  AE_RYD3_GC = 0x136C,
  AE_RYD3_HA = 0x136D,
  AE_RYD3_HB = 0x136E,
  AE_RYD3_HC = 0x136F,
  AE_RYD3_HD = 0x1370,
  AE_RYD3_HE = 0x1371,
  AE_RYD3_HF = 0x1372,
  AE_RYD3_HG = 0x1373,
  AE_RYD3_HH = 0x1374,
  AE_RYD3_HJ = 0x1375,
  AE_RYD3_HK = 0x1376,
  AE_RYD3_HL = 0x1377,
  AE_RYD3_HM = 0x1378,
  AE_RYD3_HN = 0x1379,
  AE_RYD3_JA = 0x137A,
  AE_RYD3_JB = 0x137B,
  AE_RYD3_JC = 0x137C,
  AE_RYD3_JD = 0x137D,
  AE_RYD3_JE = 0x137E,
  AE_RYD3_JF = 0x137F,
  AE_RYD3_JG = 0x1380,
  AE_RYD3_KA = 0x1381,
  AE_RYD3_KB = 0x1382,
  AE_RYD3_LA = 0x1383,
  AE_RYD3_LB = 0x1384,
  AE_RYD3_LC = 0x1385,
  AE_RYD3_LD = 0x1386,
  AE_RYD3_LE = 0x1387,
  AE_RYD3_LF = 0x1388,
  AE_RYD3_LG = 0x1389,
  AE_RYD3_LH = 0x138A,
  AE_RYD3_MA = 0x138B,
  AE_RYD3_MB = 0x138C,
  AE_RYD3_MC = 0x138D,
  AE_RYD3_MD = 0x138E,
  AE_RYD3_ME = 0x138F,
  AE_RYD3_NA = 0x1390,
  AE_RYD3_NB = 0x1391,
  AE_RYD3_NC = 0x1392,
  AE_RYD3_OA = 0x1393,
  AE_RYD3_OB = 0x1394,
  AE_RYD3_OC = 0x1395,
  AE_RYDX_AA = 0x1396,
  AE_RYDX_AB = 0x1397,
  AE_RYDX_AC = 0x1398,
  AE_RYDX_AD = 0x1399,
  AE_RYDX_AE = 0x139A,
  AE_RYDX_AF = 0x139B,
  AE_RYDX_AG = 0x139C,
  AE_RYDX_AH = 0x139D,
  AE_RYDX_AI = 0x139E,
  AE_RYDX_AJ = 0x139F,
  AE_RYDX_AK = 0x13A0,
  AE_RYDX_AL = 0x13A1,
  AE_RYDX_AM = 0x13A2,
  AE_RYDX_AN = 0x13A3,
  AE_RYDX_AO = 0x13A4,
  AE_RYDX_AP = 0x13A5,
  AE_RYDX_AQ = 0x13A6,
  AE_RYDX_AR = 0x13A7,
  AE_RYDX_AS = 0x13A8,
  AE_RYDX_AT = 0x13A9,
  AE_RYDX_AU = 0x13AA,
  AE_RYDX_BA = 0x13AB,
  AE_RYDX_BB = 0x13AC,
  AE_RYDX_BC = 0x13AD,
  AE_RYDX_BD = 0x13AE,
  AE_RYDX_BE = 0x13AF,
  AE_RYDX_BF = 0x13B0,
  AE_RYDX_BG = 0x13B1,
  AE_RYDX_BH = 0x13B2,
  AE_RYDX_BI = 0x13B3,
  AE_RYDX_BJ = 0x13B4,
  AE_RYDX_BK = 0x13B5,
  AE_RYDX_BL = 0x13B6,
  AE_RYDX_BM = 0x13B7,
  AE_RYDX_BN = 0x13B8,
  AE_RYDX_BO = 0x13B9,
  AE_RYDX_BP = 0x13BA,
  AE_RYDX_BQ = 0x13BB,
  AE_RYDX_BR = 0x13BC,
  AE_RYDX_BS = 0x13BD,
  AE_RYDX_CA = 0x13BE,
  AE_RYDX_CB = 0x13BF,
  AE_RYDX_CC = 0x13C0,
  AE_RYDX_CD = 0x13C1,
  AE_RYDX_CE = 0x13C2,
  AE_RYDX_CF = 0x13C3,
  AE_RYDX_CG = 0x13C4,
  AE_RYDX_CH = 0x13C5,
  AE_RYDX_CI = 0x13C6,
  AE_RYDX_CJ = 0x13C7,
  AE_RYDX_CK = 0x13C8,
  AE_RYDX_CL = 0x13C9,
  AE_RYDX_CM = 0x13CA,
  AE_RYDX_CN = 0x13CB,
  AE_RYDX_CO = 0x13CC,
  AE_RYDX_CP = 0x13CD,
  AE_RYDX_CQ = 0x13CE,
  AE_RYDX_CR = 0x13CF,
  AE_RYDX_CS = 0x13D0,
  AE_RYDX_CT = 0x13D1,
  AE_RYDX_DA = 0x13D2,
  AE_RYDX_DB = 0x13D3,
  AE_RYDX_DC = 0x13D4,
  AE_RYDX_DD = 0x13D5,
  AE_RYDX_DE = 0x13D6,
  AE_RYDX_DF = 0x13D7,
  AE_RYDX_DG = 0x13D8,
  AE_RYDX_DH = 0x13D9,
  AE_RYDX_DI = 0x13DA,
  AE_RYDX_DJ = 0x13DB,
  AE_RYDX_DK = 0x13DC,
  AE_RYDX_DL = 0x13DD,
  AE_RYDX_DM = 0x13DE,
  AE_RYDX_DN = 0x13DF,
  AE_SCR1_AA = 0x13E0,
  AE_SCR1_AB = 0x13E1,
  AE_SCR1_AC = 0x13E2,
  AE_SCR1_AD = 0x13E3,
  AE_SCR1_AE = 0x13E4,
  AE_SCR1_AF = 0x13E5,
  AE_SCR1_AG = 0x13E6,
  AE_SCR1_AH = 0x13E7,
  AE_SCR1_AJ = 0x13E8,
  AE_SCR1_AK = 0x13E9,
  AE_SCR1_AL = 0x13EA,
  AE_SCR1_AM = 0x13EB,
  AE_SCR1_BA = 0x13EC,
  AE_SCR1_BB = 0x13ED,
  AE_SCR1_BC = 0x13EE,
  AE_SCR1_BD = 0x13EF,
  AE__SHOOTING_RANGE_TARGET_MOVE_LOOP = 0x13F0,
  AE__SHOOTING_RANGE_TARGET_DROP = 0x13F1,
  AE__SHOOTING_RANGE_TARGET_SHATTER_1 = 0x13F2,
  AE__SHOOTING_RANGE_TARGET_SHATTER_2 = 0x13F3,
  AE__SHOOTING_RANGE_TARGET_SHATTER_3 = 0x13F4,
  AE__SHOOTING_RANGE_TARGET_SHATTER_4 = 0x13F5,
  AE__SHOOTING_RANGE_TARGET_SHATTER_5 = 0x13F6,
  AE_SHRK10A = 0x13F7,
  AE_SHRK10B = 0x13F8,
  AE_SHRK11A = 0x13F9,
  AE_SHRK11B = 0x13FA,
  AE_SHRK12A = 0x13FB,
  AE_SHRK12B = 0x13FC,
  AE_SHRK13A = 0x13FD,
  AE_SHRK13B = 0x13FE,
  AE_SHRK14A = 0x13FF,
  AE_SHRK14B = 0x1400,
  AE_SHRK15A = 0x1401,
  AE_SHRK15B = 0x1402,
  AE_SHRK16A = 0x1403,
  AE_SHRK16B = 0x1404,
  AE_SHRK_1A = 0x1405,
  AE_SHRK_1B = 0x1406,
  AE_SHRK_2A = 0x1407,
  AE_SHRK_2B = 0x1408,
  AE_SHRK_3A = 0x1409,
  AE_SHRK_3B = 0x140A,
  AE_SHRK_4A = 0x140B,
  AE_SHRK_4B = 0x140C,
  AE_SHRK_5A = 0x140D,
  AE_SHRK_5B = 0x140E,
  AE_SHRK_6A = 0x140F,
  AE_SHRK_6B = 0x1410,
  AE_SHRK_7A = 0x1411,
  AE_SHRK_7B = 0x1412,
  AE_SHRK_8A = 0x1413,
  AE_SHRK_8B = 0x1414,
  AE_SHRK_9A = 0x1415,
  AE_SHRK_9B = 0x1416,
  AE_SMO1_AA = 0x1417,
  AE_SMO1_AC = 0x1418,
  AE_SMO1_AD = 0x1419,
  AE_SMO1_AE = 0x141A,
  AE_SMO1_AF = 0x141B,
  AE_SMO1_AG = 0x141C,
  AE_SMO1_AH = 0x141D,
  AE_SMO1_AJ = 0x141E,
  AE_SMO1_BA = 0x141F,
  AE_SMO1_BB = 0x1420,
  AE_SMO1_BC = 0x1421,
  AE_SMO1_BD = 0x1422,
  AE_SMO1_BE = 0x1423,
  AE_SMO1_BF = 0x1424,
  AE_SMO1_BG = 0x1425,
  AE_SMO1_CA = 0x1426,
  AE_SMO1_CB = 0x1427,
  AE_SMO1_CC = 0x1428,
  AE_SMO1_CD = 0x1429,
  AE_SMO1_CE = 0x142A,
  AE_SMO1_CF = 0x142B,
  AE_SMO1_CG = 0x142C,
  AE_SMO1_CH = 0x142D,
  AE_SMO1_CJ = 0x142E,
  AE_SMO1_CK = 0x142F,
  AE_SMO1_CL = 0x1430,
  AE_SMO1_CM = 0x1431,
  AE_SMO1_CN = 0x1432,
  AE_SMO1_CO = 0x1433,
  AE_SMO1_CP = 0x1434,
  AE_SMO1_DA = 0x1435,
  AE_SMO1_DB = 0x1436,
  AE_SMO1_DC = 0x1437,
  AE_SMO1_EA = 0x1438,
  AE_SMO1_EB = 0x1439,
  AE_SMO1_FA = 0x143A,
  AE_SMO1_FB = 0x143B,
  AE_SMO1_FC = 0x143C,
  AE_SMO1_FD = 0x143D,
  AE_SMO1_FE = 0x143E,
  AE_SMO1_FF = 0x143F,
  AE_SMO1_FG = 0x1440,
  AE_SMO1_FH = 0x1441,
  AE_SMO1_FJ = 0x1442,
  AE_SMO1_FK = 0x1443,
  AE_SMO1_FL = 0x1444,
  AE_SMO1_FM = 0x1445,
  AE_SMO1_GA = 0x1446,
  AE_SMO1_GB = 0x1447,
  AE_SMO1_GC = 0x1448,
  AE_SMO1_GD = 0x1449,
  AE_SMO1_GE = 0x144A,
  AE_SMO1_GF = 0x144B,
  AE_SMO1_HA = 0x144C,
  AE_SMO1_HB = 0x144D,
  AE_SMO1_HC = 0x144E,
  AE_SMO1_HD = 0x144F,
  AE_SMO1_HE = 0x1450,
  AE_SMO1_HF = 0x1451,
  AE_SMO1_HG = 0x1452,
  AE_SMO1_HH = 0x1453,
  AE_SMO1_JA = 0x1454,
  AE_SMO1_JB = 0x1455,
  AE_SMO1_JC = 0x1456,
  AE_SMO1_JD = 0x1457,
  AE_SMO1_JG = 0x1458,
  AE_SMO1_JH = 0x1459,
  AE_SMO1_JJ = 0x145A,
  AE_SMO1_JK = 0x145B,
  AE_SMO1_JL = 0x145C,
  AE_SMO1_JM = 0x145D,
  AE_SMO1_KA = 0x145E,
  AE_SMO1_KB = 0x145F,
  AE_SMO1_KC = 0x1460,
  AE_SMO1_KD = 0x1461,
  AE_SMO1_KE = 0x1462,
  AE_SMO2B11 = 0x1463,
  AE_SMO2_AA = 0x1464,
  AE_SMO2_AB = 0x1465,
  AE_SMO2_BA = 0x1466,
  AE_SMO2_BB = 0x1467,
  AE_SMO2_BC = 0x1468,
  AE_SMO2_BD = 0x1469,
  AE_SMO2_BE = 0x146A,
  AE_SMO2_BF = 0x146B,
  AE_SMO2_BG = 0x146C,
  AE_SMO2_BH = 0x146D,
  AE_SMO2_BJ = 0x146E,
  AE_SMO2_BK = 0x146F,
  AE_SMO2_BL = 0x1470,
  AE_SMO2_CA = 0x1471,
  AE_SMO2_CB = 0x1472,
  AE_SMO2_CC = 0x1473,
  AE_SMO2_DA = 0x1474,
  AE_SMO2_DB = 0x1475,
  AE_SMO2_DC = 0x1476,
  AE_SMO2_EA = 0x1477,
  AE_SMO2_FA = 0x1478,
  AE_SMO2_FB = 0x1479,
  AE_SMO2_FC = 0x147A,
  AE_SMO2_FD = 0x147B,
  AE_SMO2_GA = 0x147C,
  AE_SMO2_GB = 0x147D,
  AE_SMO2_GC = 0x147E,
  AE_SMO2_GD = 0x147F,
  AE_SMO2_GE = 0x1480,
  AE_SMO2_GF = 0x1481,
  AE_SMO2_GG = 0x1482,
  AE_SMO2_GH = 0x1483,
  AE_SMO2_GJ = 0x1484,
  AE_SMO2_GK = 0x1485,
  AE_SMO2_GL = 0x1486,
  AE_SMO2_HA = 0x1487,
  AE_SMO2_HB = 0x1488,
  AE_SMO2_HC = 0x1489,
  AE_SMO2_HD = 0x148A,
  AE_SMO2_HE = 0x148B,
  AE_SMO3_AA = 0x148C,
  AE_SMO3_AB = 0x148D,
  AE_SMO3_AC = 0x148E,
  AE_SMO3_AD = 0x148F,
  AE_SMO3_AE = 0x1490,
  AE_SMO3_AF = 0x1491,
  AE_SMO3_AG = 0x1492,
  AE_SMO3_AH = 0x1493,
  AE_SMO3_AJ = 0x1494,
  AE_SMO3_AK = 0x1495,
  AE_SMO3_AL = 0x1496,
  AE_SMO3_AM = 0x1497,
  AE_SMO3_BA = 0x1498,
  AE_SMO3_BB = 0x1499,
  AE_SMO3_BC = 0x149A,
  AE_SMO3_BD = 0x149B,
  AE_SMO3_BE = 0x149C,
  AE_SMO3_BF = 0x149D,
  AE_SMO3_BG = 0x149E,
  AE_SMO3_BH = 0x149F,
  AE_SMO3_CA = 0x14A0,
  AE_SMO3_CB = 0x14A1,
  AE_SMO3_CC = 0x14A2,
  AE_SMO3_DA = 0x14A3,
  AE_SMO3_DB = 0x14A4,
  AE_SMO3_DC = 0x14A5,
  AE_SMO3_DD = 0x14A6,
  AE_SMO3_DE = 0x14A7,
  AE_SMO3_EA = 0x14A8,
  AE_SMO3_EB = 0x14A9,
  AE_SMO3_EC = 0x14AA,
  AE_SMO3_FA = 0x14AB,
  AE_SMO3_FB = 0x14AC,
  AE_SMO3_FC = 0x14AD,
  AE_SMO3_GA = 0x14AE,
  AE_SMO3_GB = 0x14AF,
  AE_SMO3_GC = 0x14B0,
  AE_SMO3_HA = 0x14B1,
  AE_SMO3_HB = 0x14B2,
  AE_SMO3_HC = 0x14B3,
  AE_SMO3_JA = 0x14B4,
  AE_SMO3_JB = 0x14B5,
  AE_SMO3_JC = 0x14B6,
  AE_SMO3_KA = 0x14B7,
  AE_SMO3_KB = 0x14B8,
  AE_SMO3_KC = 0x14B9,
  AE_SMO3_LA = 0x14BA,
  AE_SMO3_LB = 0x14BB,
  AE_SMO3_LC = 0x14BC,
  AE_SMO3_MA = 0x14BD,
  AE_SMO3_MB = 0x14BE,
  AE_SMO3_MC = 0x14BF,
  AE_SMO3_NA = 0x14C0,
  AE_SMO3_NB = 0x14C1,
  AE_SMO3_NC = 0x14C2,
  AE_SMO3_OA = 0x14C3,
  AE_SMO3_OB = 0x14C4,
  AE_SMO3_OC = 0x14C5,
  AE_SMO3_PA = 0x14C6,
  AE_SMO3_PB = 0x14C7,
  AE_SMO3_PC = 0x14C8,
  AE_SMO3_QA = 0x14C9,
  AE_SMO3_QB = 0x14CA,
  AE_SMO3_QC = 0x14CB,
  AE_SMO3_QD = 0x14CC,
  AE_SMO3_QE = 0x14CD,
  AE_SMO3_QF = 0x14CE,
  AE_SMO3_QG = 0x14CF,
  AE_SMO3_QH = 0x14D0,
  AE_SMO3_QJ = 0x14D1,
  AE_SMO3_QK = 0x14D2,
  AE_SMO3_QL = 0x14D3,
  AE_SMO3_QM = 0x14D4,
  AE_SMO3_QN = 0x14D5,
  AE_SMO3_QO = 0x14D6,
  AE_SMO3_QP = 0x14D7,
  AE_SMO3_QR = 0x14D8,
  AE_SMO3_RA = 0x14D9,
  AE_SMO3_RB = 0x14DA,
  AE_SMO3_RC = 0x14DB,
  AE_SMO3_RD = 0x14DC,
  AE_SMO3_RE = 0x14DD,
  AE_SMO3_RF = 0x14DE,
  AE_SMO3_RG = 0x14DF,
  AE_SMO3_RH = 0x14E0,
  AE_SMO3_SA = 0x14E1,
  AE_SMO3_SB = 0x14E2,
  AE_SMO3_SC = 0x14E3,
  AE_SMO3_SD = 0x14E4,
  AE_SMO4_AA = 0x14E5,
  AE_SMO4_AB = 0x14E6,
  AE_SMO4_AC = 0x14E7,
  AE_SMO4_AD = 0x14E8,
  AE_SMO4_AE = 0x14E9,
  AE_SMO4_AF = 0x14EA,
  AE_SMO4_AG = 0x14EB,
  AE_SMO4_AH = 0x14EC,
  AE_SMO4_AJ = 0x14ED,
  AE_SMO4_AK = 0x14EE,
  AE_SMO4_AL = 0x14EF,
  AE_SMO4_AM = 0x14F0,
  AE_SMO4_AN = 0x14F1,
  AE_SMO4_AO = 0x14F2,
  AE_SMO4_BA = 0x14F3,
  AE_SMO4_BB = 0x14F4,
  AE_SMO4_BC = 0x14F5,
  AE_SMO4_BD = 0x14F6,
  AE_SMO4_BE = 0x14F7,
  AE_SMO4_BF = 0x14F8,
  AE_SMO4_BG = 0x14F9,
  AE_SMO4_BH = 0x14FA,
  AE_SMO4_BJ = 0x14FB,
  AE_SMO4_BK = 0x14FC,
  AE_SMO4_BL = 0x14FD,
  AE_SMO4_BM = 0x14FE,
  AE_SMO4_BN = 0x14FF,
  AE_SMO4_BO = 0x1500,
  AE_SMO4_BP = 0x1501,
  AE_SMO4_BQ = 0x1502,
  AE_SMO4_BR = 0x1503,
  AE_SMO4_CA = 0x1504,
  AE_SMO4_CB = 0x1505,
  AE_SMO4_CC = 0x1506,
  AE_SMO4_CD = 0x1507,
  AE_SMO4_CE = 0x1508,
  AE_SMO4_CF = 0x1509,
  AE_SMO4_DA = 0x150A,
  AE_SMO4_DB = 0x150B,
  AE_SMO4_DC = 0x150C,
  AE_SMO4_DE = 0x150D,
  AE_SMO4_DF = 0x150E,
  AE_SMO4_DG = 0x150F,
  AE_SMO4_DH = 0x1510,
  AE_SMO4_DJ = 0x1511,
  AE_SMO4_EA = 0x1512,
  AE_SMO4_EB = 0x1513,
  AE_SMO4_EC = 0x1514,
  AE_SMO4_ED = 0x1515,
  AE_SMO4_EE = 0x1516,
  AE_SMO4_EF = 0x1517,
  AE_SMO4_EG = 0x1518,
  AE_SMO4_EH = 0x1519,
  AE_SMO4_EJ = 0x151A,
  AE_SMO4_EK = 0x151B,
  AE_SMO4_EL = 0x151C,
  AE_SMO4_EM = 0x151D,
  AE_SMO4_EN = 0x151E,
  AE_SMO4_EO = 0x151F,
  AE_SMO4_EP = 0x1520,
  AE_SMO4_EQ = 0x1521,
  AE_SMO4_ER = 0x1522,
  AE_SMO4_ES = 0x1523,
  AE_SMO4_FA = 0x1524,
  AE_SMO4_FB = 0x1525,
  AE_SMO4_FC = 0x1526,
  AE_SMO4_FD = 0x1527,
  AE_SMO4_FE = 0x1528,
  AE_SMO4_FF = 0x1529,
  AE_SMO4_FG = 0x152A,
  AE_SMO4_FH = 0x152B,
  AE_SMO4_FJ = 0x152C,
  AE_SMO4_FK = 0x152D,
  AE_SMO4_FL = 0x152E,
  AE_SMO4_FM = 0x152F,
  AE_SMO4_GA = 0x1530,
  AE_SMO4_GB = 0x1531,
  AE_SMO4_GD = 0x1532,
  AE_SMO4_GE = 0x1533,
  AE_SMO4_GF = 0x1534,
  AE_SMO4_GG = 0x1535,
  AE_SMO4_GH = 0x1536,
  AE_SMO4_GJ = 0x1537,
  AE_SMO4_GK = 0x1538,
  AE_SMO4_GL = 0x1539,
  AE_SMO4_GM = 0x153A,
  AE_SMO4_GN = 0x153B,
  AE_SMO4_GO = 0x153C,
  AE_SMO4_GP = 0x153D,
  AE_SMO4_HA = 0x153E,
  AE_SMO4_HB = 0x153F,
  AE_SMO4_HC = 0x1540,
  AE_SMO4_HD = 0x1541,
  AE_SMO4_HE = 0x1542,
  AE_SMO4_HF = 0x1543,
  AE_SMO4_HH = 0x1544,
  AE_SMO4_HJ = 0x1545,
  AE_SMO4_HK = 0x1546,
  AE_SMO4_HL = 0x1547,
  AE_SMO4_HM = 0x1548,
  AE_SMO4_HN = 0x1549,
  AE_SMO4_HO = 0x154A,
  AE_SMO4_HP = 0x154B,
  AE_SMO4_HQ = 0x154C,
  AE_SMO4_HR = 0x154D,
  AE_SMO4_HS = 0x154E,
  AE_SMO4_HT = 0x154F,
  AE_SMO4_HU = 0x1550,
  AE_SMO4_HV = 0x1551,
  AE_SMO4_JA = 0x1552,
  AE_SMO4_JB = 0x1553,
  AE_SMO4_JC = 0x1554,
  AE_SMO4_JD = 0x1555,
  AE_SMO4_JE = 0x1556,
  AE_SMO4_JF = 0x1557,
  AE_SMO4_JG = 0x1558,
  AE_SMO4_JH = 0x1559,
  AE_SMO4_JJ = 0x155A,
  AE_SMO4_JK = 0x155B,
  AE_SMO4_JL = 0x155C,
  AE_SMO4_JM = 0x155D,
  AE_SMO4_JN = 0x155E,
  AE_SMO4_JO = 0x155F,
  AE_SMO4_JP = 0x1560,
  AE_SMO4_JQ = 0x1561,
  AE_SMO4_JR = 0x1562,
  AE_SMO4_JS = 0x1563,
  AE_SMO4_KA = 0x1564,
  AE_SMO4_KB = 0x1565,
  AE_SMO4_KC = 0x1566,
  AE_SMO4_KD = 0x1567,
  AE_SMO4_KE = 0x1568,
  AE_SMO4_KF = 0x1569,
  AE_SMO4_KG = 0x156A,
  AE_SMOX_AA = 0x156B,
  AE_SMOX_AB = 0x156C,
  AE_SMOX_AC = 0x156D,
  AE_SMOX_AD = 0x156E,
  AE_SMOX_AE = 0x156F,
  AE_SMOX_AF = 0x1570,
  AE_SMOX_AG = 0x1571,
  AE_SMOX_AH = 0x1572,
  AE_SMOX_AI = 0x1573,
  AE_SMOX_AJ = 0x1574,
  AE_SMOX_AK = 0x1575,
  AE_SMOX_AL = 0x1576,
  AE_SMOX_AM = 0x1577,
  AE_SMOX_AN = 0x1578,
  AE_SMOX_AO = 0x1579,
  AE_SMOX_AP = 0x157A,
  AE_SMOX_AQ = 0x157B,
  AE_SMOX_AR = 0x157C,
  AE_SMOX_AS = 0x157D,
  AE_SMOX_AT = 0x157E,
  AE_SMOX_AU = 0x157F,
  AE_SMOX_AV = 0x1580,
  AE_SMOX_AW = 0x1581,
  AE_SMOX_AX = 0x1582,
  AE_SMOX_AY = 0x1583,
  AE_SMOX_AZ = 0x1584,
  AE_SMOX_BA = 0x1585,
  AE_SMOX_BB = 0x1586,
  AE_SMOX_BC = 0x1587,
  AE_SMOX_BD = 0x1588,
  AE_SMOX_BE = 0x1589,
  AE_SMOX_BF = 0x158A,
  AE_SMOX_BG = 0x158B,
  AE_SMOX_BH = 0x158C,
  AE_SMOX_BI = 0x158D,
  AE_SMOX_BJ = 0x158E,
  AE_SMOX_BK = 0x158F,
  AE_SMOX_BL = 0x1590,
  AE_SMOX_BM = 0x1591,
  AE_SMOX_BN = 0x1592,
  AE_SMOX_BO = 0x1593,
  AE_SMOX_BP = 0x1594,
  AE_SMOX_BQ = 0x1595,
  AE_SMOX_BR = 0x1596,
  AE_SMOX_BS = 0x1597,
  AE_SMOX_BT = 0x1598,
  AE_SMOX_BU = 0x1599,
  AE_SMOX_BV = 0x159A,
  AE_SMOX_BW = 0x159B,
  AE_SMOX_BX = 0x159C,
  AE_SMOX_BY = 0x159D,
  AE_SMOX_BZ = 0x159E,
  AE_SMOX_CA = 0x159F,
  AE_SMOX_CB = 0x15A0,
  AE_SMOX_CC = 0x15A1,
  AE_SMOX_CD = 0x15A2,
  AE_SMOX_CE = 0x15A3,
  AE_SMOX_CF = 0x15A4,
  AE_SMOX_CG = 0x15A5,
  AE_SMOX_CH = 0x15A6,
  AE_SMOX_CI = 0x15A7,
  AE_SMOX_CJ = 0x15A8,
  AE_SMOX_CK = 0x15A9,
  AE_SMOX_CL = 0x15AA,
  AE_SMOX_CM = 0x15AB,
  AE_SMOX_CN = 0x15AC,
  AE_SMOX_CO = 0x15AD,
  AE_SMOX_CP = 0x15AE,
  AE_SMOX_CQ = 0x15AF,
  AE_SMOX_CR = 0x15B0,
  AE_SMOX_CS = 0x15B1,
  AE_SMOX_CT = 0x15B2,
  AE_SMOX_CU = 0x15B3,
  AE_SMOX_CV = 0x15B4,
  AE_SMOX_CW = 0x15B5,
  AE_SMOX_CX = 0x15B6,
  AE_SMOX_CY = 0x15B7,
  AE_SMOX_CZ = 0x15B8,
  AE_SMOX_DA = 0x15B9,
  AE_SMOX_DB = 0x15BA,
  AE_SMOX_DC = 0x15BB,
  AE_SMOX_DE = 0x15BC,
  AE_SMOX_DF = 0x15BD,
  AE_SMOX_DG = 0x15BE,
  AE_SOLO_AA = 0x15BF,
  AE_CROWD_AWWS = 0x15C0,
  AE_CROWD_AWWS2 = 0x15C1,
  AE_CROWD_CHEERS = 0x15C2,
  AE_CROWD_CHEERS2 = 0x15C3,
  AE_CROWD_CHEERS3 = 0x15C4,
  AE_CROWD_CHEERS_BIG = 0x15C5,
  AE__STINGER_FIRE = 0x15C6,
  AE__STINGER_RELOAD = 0x15C7,
  AE_STL1_AA = 0x15C8,
  AE_STL1_AB = 0x15C9,
  AE_STL1_AC = 0x15CA,
  AE_STL1_AD = 0x15CB,
  AE_STL1_AE = 0x15CC,
  AE_STL2_AA = 0x15CD,
  AE_STL2_BA = 0x15CE,
  AE_STL2_BB = 0x15CF,
  AE_STL2_BC = 0x15D0,
  AE_STL2_BD = 0x15D1,
  AE_STL2_BE = 0x15D2,
  AE_STL2_BF = 0x15D3,
  AE_STL2_BG = 0x15D4,
  AE_STL2_BH = 0x15D5,
  AE_STL2_BJ = 0x15D6,
  AE_STL2_BK = 0x15D7,
  AE_STL2_BL = 0x15D8,
  AE_STL2_BM = 0x15D9,
  AE_STL2_CA = 0x15DA,
  AE_STL2_CB = 0x15DB,
  AE_STL2_CC = 0x15DC,
  AE_STL2_CD = 0x15DD,
  AE_STL2_CE = 0x15DE,
  AE_STL2_CF = 0x15DF,
  AE_STL2_CG = 0x15E0,
  AE_STL2_DA = 0x15E1,
  AE_STL2_DB = 0x15E2,
  AE_STL2_DC = 0x15E3,
  AE_STL2_DD = 0x15E4,
  AE_STL2_DE = 0x15E5,
  AE_STL2_DF = 0x15E6,
  AE_STL2_DH = 0x15E7,
  AE_STL2_DJ = 0x15E8,
  AE_STL2_DK = 0x15E9,
  AE_STL2_EA = 0x15EA,
  AE_STL2_EB = 0x15EB,
  AE_STL2_EC = 0x15EC,
  AE_STL2_ED = 0x15ED,
  AE_STL2_EE = 0x15EE,
  AE_STL2_EF = 0x15EF,
  AE_STL2_FA = 0x15F0,
  AE_STL2_FB = 0x15F1,
  AE_STL2_FC = 0x15F2,
  AE_STL2_FD = 0x15F3,
  AE_STL2_FE = 0x15F4,
  AE_STL2_FF = 0x15F5,
  AE_STL2_FG = 0x15F6,
  AE_STL2_FH = 0x15F7,
  AE_STL2_FJ = 0x15F8,
  AE_STL2_FK = 0x15F9,
  AE_STL2_FL = 0x15FA,
  AE_STL2_FM = 0x15FB,
  AE_STL2_FN = 0x15FC,
  AE_STL2_FO = 0x15FD,
  AE_STL2_FP = 0x15FE,
  AE_STL2_FQ = 0x15FF,
  AE_STL2_FR = 0x1600,
  AE_STL2_GA = 0x1601,
  AE_STL2_GB = 0x1602,
  AE_STL2_HA = 0x1603,
  AE_STL2_HB = 0x1604,
  AE_STL2_HC = 0x1605,
  AE_STL2_HD = 0x1606,
  AE_STL2_HE = 0x1607,
  AE_STL2_HF = 0x1608,
  AE_STL2_HG = 0x1609,
  AE_STL4_AA = 0x160A,
  AE_STL4_AB = 0x160B,
  AE_STL4_BA = 0x160C,
  AE_STL4_BB = 0x160D,
  AE_STL4_BC = 0x160E,
  AE_STL4_BD = 0x160F,
  AE_STL4_CA = 0x1610,
  AE_STL4_CB = 0x1611,
  AE_STL4_CC = 0x1612,
  AE_STL4_DA = 0x1613,
  AE_STL4_DB = 0x1614,
  AE_STL4_EA = 0x1615,
  AE_STL4_FA = 0x1616,
  AE_STL4_FB = 0x1617,
  AE_STL4_FC = 0x1618,
  AE_STL4_GA = 0x1619,
  AE_STL4_GB = 0x161A,
  AE_STL4_GC = 0x161B,
  AE_STL4_HA = 0x161C,
  AE_STL4_HB = 0x161D,
  AE_STL4_HC = 0x161E,
  AE_STL4_JA = 0x161F,
  AE_STL4_JB = 0x1620,
  AE_STL4_KA = 0x1621,
  AE_STL4_KB = 0x1622,
  AE_STL4_LA = 0x1623,
  AE_STL4_LB = 0x1624,
  AE_STL4_LC = 0x1625,
  AE_STL4_LD = 0x1626,
  AE_STL4_LE = 0x1627,
  AE_STL4_MA = 0x1628,
  AE_STL4_MB = 0x1629,
  AE_STL4_MC = 0x162A,
  AE_STL4_MD = 0x162B,
  AE_STL4_NA = 0x162C,
  AE_STL4_NB = 0x162D,
  AE_STL5_AA = 0x162E,
  AE_STL5_AB = 0x162F,
  AE_STL5_AC = 0x1630,
  AE_STL5_AD = 0x1631,
  AE_STL5_AE = 0x1632,
  AE_STL5_AF = 0x1633,
  AE_STL5_AG = 0x1634,
  AE_STL5_BA = 0x1635,
  AE_STL5_BB = 0x1636,
  AE_STL5_BC = 0x1637,
  AE_STL5_BD = 0x1638,
  AE_STL5_BE = 0x1639,
  AE_STL5_BF = 0x163A,
  AE_STL5_BG = 0x163B,
  AE_STL5_BL = 0x163C,
  AE_STL5_CA = 0x163D,
  AE_STL5_CF = 0x163E,
  AE_STL5_DA = 0x163F,
  AE_STL5_DB = 0x1640,
  AE_STL5_DC = 0x1641,
  AE_STL5_DD = 0x1642,
  AE_STL5_DE = 0x1643,
  AE_STL5_DF = 0x1644,
  AE_STL5_ED = 0x1645,
  AE_STL5_EE = 0x1646,
  AE_STL5_FA = 0x1647,
  AE_STL5_FC = 0x1648,
  AE_STL5_FD = 0x1649,
  AE_STL5_FE = 0x164A,
  AE_STL5_FF = 0x164B,
  AE_STL5_FG = 0x164C,
  AE_STL5_FH = 0x164D,
  AE_STL5_FJ = 0x164E,
  AE_STL5_FK = 0x164F,
  AE_STL5_FN = 0x1650,
  AE_STL5_FO = 0x1651,
  AE_STL5_FP = 0x1652,
  AE_STL5_FQ = 0x1653,
  AE_STL5_FR = 0x1654,
  AE_STL5_HA = 0x1655,
  AE_STL5_HB = 0x1656,
  AE_STL5_HC = 0x1657,
  AE_STL5_HD = 0x1658,
  AE_STL5_HE = 0x1659,
  AE_STL5_HF = 0x165A,
  AE_STL5_HG = 0x165B,
  AE_SWE1_AA = 0x165C,
  AE_SWE1_AB = 0x165D,
  AE_SWE1_AC = 0x165E,
  AE_SWE1_AD = 0x165F,
  AE_SWE1_AE = 0x1660,
  AE_SWE1_AF = 0x1661,
  AE_SWE1_AG = 0x1662,
  AE_SWE1_AH = 0x1663,
  AE_SWE1_AJ = 0x1664,
  AE_SWE1_AK = 0x1665,
  AE_SWE1_AL = 0x1666,
  AE_SWE1_AM = 0x1667,
  AE_SWE1_AN = 0x1668,
  AE_SWE1_AO = 0x1669,
  AE_SWE1_AP = 0x166A,
  AE_SWE1_AQ = 0x166B,
  AE_SWE1_AR = 0x166C,
  AE_SWE1_AS = 0x166D,
  AE_SWE1_AT = 0x166E,
  AE_SWE1_AU = 0x166F,
  AE_SWE1_AV = 0x1670,
  AE_SWE1_AW = 0x1671,
  AE_SWE1_AX = 0x1672,
  AE_SWE1_BA = 0x1673,
  AE_SWE1_BB = 0x1674,
  AE_SWE1_BC = 0x1675,
  AE_SWE1_BD = 0x1676,
  AE_SWE1_BE = 0x1677,
  AE_SWE1_BF = 0x1678,
  AE_SWE1_BG = 0x1679,
  AE_SWE1_BH = 0x167A,
  AE_SWE1_BJ = 0x167B,
  AE_SWE1_BK = 0x167C,
  AE_SWE1_BL = 0x167D,
  AE_SWE1_BM = 0x167E,
  AE_SWE1_BN = 0x167F,
  AE_SWE1_BO = 0x1680,
  AE_SWE1_BP = 0x1681,
  AE_SWE1_BQ = 0x1682,
  AE_SWE1_BR = 0x1683,
  AE_SWE1_BS = 0x1684,
  AE_SWE1_BT = 0x1685,
  AE_SWE1_BU = 0x1686,
  AE_SWE1_BX = 0x1687,
  AE_SWE1_CA = 0x1688,
  AE_SWE1_CB = 0x1689,
  AE_SWE1_SA = 0x168A,
  AE_SWE1_SB = 0x168B,
  AE_SWE1_TA = 0x168C,
  AE_SWE1_TB = 0x168D,
  AE_SWE1_TC = 0x168E,
  AE_SWE1_TD = 0x168F,
  AE_SWE1_TE = 0x1690,
  AE_SWE1_TF = 0x1691,
  AE_SWE1_UA = 0x1692,
  AE_SWE1_UB = 0x1693,
  AE_SWE1_UC = 0x1694,
  AE_SWE1_VA = 0x1695,
  AE_SWE1_VB = 0x1696,
  AE_SWE1_VC = 0x1697,
  AE_SWE1_WA = 0x1698,
  AE_SWE1_WB = 0x1699,
  AE_SWE1_WC = 0x169A,
  AE_SWE1_XA = 0x169B,
  AE_SWE1_XB = 0x169C,
  AE_SWE1_YA = 0x169D,
  AE_SWE1_YB = 0x169E,
  AE_SWE1_YC = 0x169F,
  AE_SWE1_YD = 0x16A0,
  AE_SWE1_YE = 0x16A1,
  AE_SWE1_YF = 0x16A2,
  AE_SWE1_YG = 0x16A3,
  AE_SWE1_YH = 0x16A4,
  AE_SWE1_YJ = 0x16A5,
  AE_SWE1_YK = 0x16A6,
  AE_SWE1_YL = 0x16A7,
  AE_SWE1_YM = 0x16A8,
  AE_SWE1_YN = 0x16A9,
  AE_SWE1_YO = 0x16AA,
  AE_SWE1_YP = 0x16AB,
  AE_SWE1_YQ = 0x16AC,
  AE_SWE1_YR = 0x16AD,
  AE_SWE1_YS = 0x16AE,
  AE_SWE1_YT = 0x16AF,
  AE_SWE1_YU = 0x16B0,
  AE_SWE1_YV = 0x16B1,
  AE_SWE1_YW = 0x16B2,
  AE_SWE1_YX = 0x16B3,
  AE_SWE1_YY = 0x16B4,
  AE_SWE1_ZA = 0x16B5,
  AE_SWE1_ZB = 0x16B6,
  AE_SWE1_ZC = 0x16B7,
  AE_SWE1_ZD = 0x16B8,
  AE_SWE1_ZE = 0x16B9,
  AE_SWE1_ZF = 0x16BA,
  AE_SWE2_AA = 0x16BB,
  AE_SWE2_BA = 0x16BC,
  AE_SWE2_BB = 0x16BD,
  AE_SWE2_BC = 0x16BE,
  AE_SWE2_BD = 0x16BF,
  AE_SWE2_BE = 0x16C0,
  AE_SWE2_BF = 0x16C1,
  AE_SWE2_BG = 0x16C2,
  AE_SWE2_BH = 0x16C3,
  AE_SWE2_BJ = 0x16C4,
  AE_SWE2_BK = 0x16C5,
  AE_SWE2_BL = 0x16C6,
  AE_SWE2_BM = 0x16C7,
  AE_SWE2_CA = 0x16C8,
  AE_SWE2_CB = 0x16C9,
  AE_SWE2_CC = 0x16CA,
  AE_SWE2_DA = 0x16CB,
  AE_SWE2_DB = 0x16CC,
  AE_SWE2_DC = 0x16CD,
  AE_SWE2_DD = 0x16CE,
  AE_SWE2_EA = 0x16CF,
  AE_SWE2_EB = 0x16D0,
  AE_SWE2_EC = 0x16D1,
  AE_SWE2_ED = 0x16D2,
  AE_SWE2_EE = 0x16D3,
  AE_SWE2_FA = 0x16D4,
  AE_SWE2_FB = 0x16D5,
  AE_SWE2_FC = 0x16D6,
  AE_SWE2_FD = 0x16D7,
  AE_SWE2_FE = 0x16D8,
  AE_SWE2_GA = 0x16D9,
  AE_SWE2_GB = 0x16DA,
  AE_SWE2_GC = 0x16DB,
  AE_SWE2_GD = 0x16DC,
  AE_SWE2_GE = 0x16DD,
  AE_SWE2_HA = 0x16DE,
  AE_SWE2_HB = 0x16DF,
  AE_SWE2_HC = 0x16E0,
  AE_SWE2_HD = 0x16E1,
  AE_SWE2_HE = 0x16E2,
  AE_SWE2_HF = 0x16E3,
  AE_SWE2_HG = 0x16E4,
  AE_SWE2_JA = 0x16E5,
  AE_SWE2_JB = 0x16E6,
  AE_SWE2_JC = 0x16E7,
  AE_SWE2_KA = 0x16E8,
  AE_SWE2_KB = 0x16E9,
  AE_SWE2_KC = 0x16EA,
  AE_SWE2_LA = 0x16EB,
  AE_SWE2_LB = 0x16EC,
  AE_SWE2_LC = 0x16ED,
  AE_SWE2_MA = 0x16EE,
  AE_SWE2_MB = 0x16EF,
  AE_SWE2_MC = 0x16F0,
  AE_SWE2_MD = 0x16F1,
  AE_SWE2_ME = 0x16F2,
  AE_SWE2_MF = 0x16F3,
  AE_SWE2_MG = 0x16F4,
  AE_SWE2_MH = 0x16F5,
  AE_SWE2_MJ = 0x16F6,
  AE_SWE2_NA = 0x16F7,
  AE_SWE2_NB = 0x16F8,
  AE_SWE2_NC = 0x16F9,
  AE_SWE2_ND = 0x16FA,
  AE_SWE2_NE = 0x16FB,
  AE_SWE2_NF = 0x16FC,
  AE_SWE2_NG = 0x16FD,
  AE_SWE2_NH = 0x16FE,
  AE_SWE2_OA = 0x16FF,
  AE_SWE2_OB = 0x1700,
  AE_SWE2_OC = 0x1701,
  AE_SWE2_OD = 0x1702,
  AE_SWE2_OE = 0x1703,
  AE_SWE2_OF = 0x1704,
  AE_SWE2_OG = 0x1705,
  AE_SWE2_OH = 0x1706,
  AE_SWE2_OJ = 0x1707,
  AE_SWE2_PA = 0x1708,
  AE_SWE2_PB = 0x1709,
  AE_SWE2_PC = 0x170A,
  AE_SWE2_PD = 0x170B,
  AE_SWE2_PE = 0x170C,
  AE_SWE3_AA = 0x170D,
  AE_SWE3_AB = 0x170E,
  AE_SWE3_AC = 0x170F,
  AE_SWE3_AD = 0x1710,
  AE_SWE3_AE = 0x1711,
  AE_SWE3_AF = 0x1712,
  AE_SWE3_AH = 0x1713,
  AE_SWE3_AJ = 0x1714,
  AE_SWE3_AK = 0x1715,
  AE_SWE3_BA = 0x1716,
  AE_SWE3_BB = 0x1717,
  AE_SWE3_BC = 0x1718,
  AE_SWE3_BD = 0x1719,
  AE_SWE3_BE = 0x171A,
  AE_SWE3_BF = 0x171B,
  AE_SWE3_BG = 0x171C,
  AE_SWE3_BH = 0x171D,
  AE_SWE3_BJ = 0x171E,
  AE_SWE3_BK = 0x171F,
  AE_SWE3_CA = 0x1720,
  AE_SWE3_CB = 0x1721,
  AE_SWE3_CC = 0x1722,
  AE_SWE3_CD = 0x1723,
  AE_SWE3_CE = 0x1724,
  AE_SWE3_CF = 0x1725,
  AE_SWE3_CG = 0x1726,
  AE_SWE3_CH = 0x1727,
  AE_SWE3_CJ = 0x1728,
  AE_SWE3_CK = 0x1729,
  AE_SWE3_DA = 0x172A,
  AE_SWE3_DB = 0x172B,
  AE_SWE3_DC = 0x172C,
  AE_SWE3_DD = 0x172D,
  AE_SWE3_DE = 0x172E,
  AE_SWE3_DF = 0x172F,
  AE_SWE3_DG = 0x1730,
  AE_SWE3_EA = 0x1731,
  AE_SWE3_EB = 0x1732,
  AE_SWE3_EC = 0x1733,
  AE_SWE3_ED = 0x1734,
  AE_SWE3_EE = 0x1735,
  AE_SWE3_EF = 0x1736,
  AE_SWE3_FA = 0x1737,
  AE_SWE3_FB = 0x1738,
  AE_SWE3_FC = 0x1739,
  AE_SWE3_FD = 0x173A,
  AE_SWE3_FE = 0x173B,
  AE_SWE3_FF = 0x173C,
  AE_SWE3_FG = 0x173D,
  AE_SWE3_FH = 0x173E,
  AE_SWE3_GA = 0x173F,
  AE_SWE3_GB = 0x1740,
  AE_SWE3_GC = 0x1741,
  AE_SWE3_GD = 0x1742,
  AE_SWE3_GE = 0x1743,
  AE_SWE3_GF = 0x1744,
  AE_SWE3_GG = 0x1745,
  AE_SWE3_GH = 0x1746,
  AE_SWE3_GJ = 0x1747,
  AE_SWE3_GK = 0x1748,
  AE_SWE3_GL = 0x1749,
  AE_SWE3_GM = 0x174A,
  AE_SWE3_GN = 0x174B,
  AE_SWE3_GO = 0x174C,
  AE_SWE3_HA = 0x174D,
  AE_SWE3_HB = 0x174E,
  AE_SWE3_HC = 0x174F,
  AE_SWE3_HD = 0x1750,
  AE_SWE3_HE = 0x1751,
  AE_SWE3_HF = 0x1752,
  AE_SWE3_HG = 0x1753,
  AE_SWE3_JA = 0x1754,
  AE_SWE3_JB = 0x1755,
  AE_SWE3_ZZ = 0x1756,
  AE_SWE4_AA = 0x1757,
  AE_SWE4_AB = 0x1758,
  AE_SWE4_AC = 0x1759,
  AE_SWE4_AD = 0x175A,
  AE_SWE4_AE = 0x175B,
  AE_SWE4_AF = 0x175C,
  AE_SWE4_AG = 0x175D,
  AE_SWE4_AH = 0x175E,
  AE_SWE4_AI = 0x175F,
  AE_SWE4_AJ = 0x1760,
  AE_SWE4_AK = 0x1761,
  AE_SWE4_BA = 0x1762,
  AE_SWE4_BB = 0x1763,
  AE_SWE4_BC = 0x1764,
  AE_SWE4_BD = 0x1765,
  AE_SWE4_BE = 0x1766,
  AE_SWE4_CA = 0x1767,
  AE_SWE4_CB = 0x1768,
  AE_SWE4_CC = 0x1769,
  AE_SWE4_DA = 0x176A,
  AE_SWE4_DB = 0x176B,
  AE_SWE4_DC = 0x176C,
  AE_SWE4_DD = 0x176D,
  AE_SWE4_DE = 0x176E,
  AE_SWE4_DF = 0x176F,
  AE_SWE4_EA = 0x1770,
  AE_SWE4_EB = 0x1771,
  AE_SWE4_EC = 0x1772,
  AE_SWE4_FA = 0x1773,
  AE_SWE4_FB = 0x1774,
  AE_SWE4_FC = 0x1775,
  AE_SWE4_FD = 0x1776,
  AE_SWE4_GA = 0x1777,
  AE_SWE4_GB = 0x1778,
  AE_SWE4_HA = 0x1779,
  AE_SWE4_HB = 0x177A,
  AE_SWE4_KA = 0x177B,
  AE_SWE4_KB = 0x177C,
  AE_SWE4_KC = 0x177D,
  AE_SWE4_KD = 0x177E,
  AE_SWE4_KE = 0x177F,
  AE_SWE4_KF = 0x1780,
  AE_SWE4_KG = 0x1781,
  AE_SWE4_KH = 0x1782,
  AE_SWE4_KI = 0x1783,
  AE_SWE4_LA = 0x1784,
  AE_SWE4_LB = 0x1785,
  AE_SWE4_LC = 0x1786,
  AE_SWE4_MA = 0x1787,
  AE_SWE4_MB = 0x1788,
  AE_SWE4_MC = 0x1789,
  AE_SWE4_MD = 0x178A,
  AE_SWE4_NA = 0x178B,
  AE_SWE4_NB = 0x178C,
  AE_SWE4_NC = 0x178D,
  AE_SWE4_OA = 0x178E,
  AE_SWE4_OB = 0x178F,
  AE_SWE4_OC = 0x1790,
  AE_SWE4_PA = 0x1791,
  AE_SWE4_PB = 0x1792,
  AE_SWE4_PC = 0x1793,
  AE_SWE5_AA = 0x1794,
  AE_SWE5_AB = 0x1795,
  AE_SWE5_AC = 0x1796,
  AE_SWE5_AD = 0x1797,
  AE_SWE5_AE = 0x1798,
  AE_SWE5_AF = 0x1799,
  AE_SWE5_BA = 0x179A,
  AE_SWE5_BB = 0x179B,
  AE_SWE5_BC = 0x179C,
  AE_SWE5_BD = 0x179D,
  AE_SWE5_BE = 0x179E,
  AE_SWE5_BF = 0x179F,
  AE_SWE5_BG = 0x17A0,
  AE_SWE5_BH = 0x17A1,
  AE_SWE5_BI = 0x17A2,
  AE_SWE5_BJ = 0x17A3,
  AE_SWE5_CA = 0x17A4,
  AE_SWE5_CB = 0x17A5,
  AE_SWE5_CC = 0x17A6,
  AE_SWE5_DA = 0x17A7,
  AE_SWE5_DB = 0x17A8,
  AE_SWE5_EA = 0x17A9,
  AE_SWE5_EB = 0x17AA,
  AE_SWE5_EC = 0x17AB,
  AE_SWE5_ED = 0x17AC,
  AE_SWE5_EE = 0x17AD,
  AE_SWE5_FA = 0x17AE,
  AE_SWE5_FB = 0x17AF,
  AE_SWE5_GA = 0x17B0,
  AE_SWE5_GB = 0x17B1,
  AE_SWE5_GC = 0x17B2,
  AE_SWE5_GD = 0x17B3,
  AE_SWE5_GE = 0x17B4,
  AE_SWE5_GF = 0x17B5,
  AE_SWE5_GG = 0x17B6,
  AE_SWE5_GH = 0x17B7,
  AE_SWE5_GJ = 0x17B8,
  AE_SWE5_GK = 0x17B9,
  AE_SWE5_GL = 0x17BA,
  AE_SWE7_AA = 0x17BB,
  AE_SWE7_AB = 0x17BC,
  AE_SWE7_AC = 0x17BD,
  AE_SWE7_AD = 0x17BE,
  AE_SWE7_AE = 0x17BF,
  AE_SWE7_AF = 0x17C0,
  AE_SWE7_AG = 0x17C1,
  AE_SWE7_AH = 0x17C2,
  AE_SWE7_BA = 0x17C3,
  AE_SWE7_BB = 0x17C4,
  AE_SWE7_BC = 0x17C5,
  AE_SWE7_BD = 0x17C6,
  AE_SWE7_BE = 0x17C7,
  AE_SWE7_CA = 0x17C8,
  AE_SWE7_CB = 0x17C9,
  AE_SWE7_CC = 0x17CA,
  AE_SWE7_DA = 0x17CB,
  AE_SWE7_DB = 0x17CC,
  AE_SWE7_DC = 0x17CD,
  AE_SWE7_DD = 0x17CE,
  AE_SWE7_DE = 0x17CF,
  AE_SWE7_EA = 0x17D0,
  AE_SWE7_EB = 0x17D1,
  AE_SWE7_EC = 0x17D2,
  AE_SWE7_ED = 0x17D3,
  AE_SWE7_EE = 0x17D4,
  AE_SWE7_EF = 0x17D5,
  AE_SWE7_EG = 0x17D6,
  AE_SWE7_EH = 0x17D7,
  AE_SWE7_EJ = 0x17D8,
  AE_SWE7_EK = 0x17D9,
  AE_SWE7_FA = 0x17DA,
  AE_SWE7_FB = 0x17DB,
  AE_SWE7_GA = 0x17DC,
  AE_SWE7_GB = 0x17DD,
  AE_SWE7_GC = 0x17DE,
  AE_SWE7_HA = 0x17DF,
  AE_SWE7_HB = 0x17E0,
  AE_SWE7_HC = 0x17E1,
  AE_SWE7_JA = 0x17E2,
  AE_SWE7_JB = 0x17E3,
  AE_SWE7_JC = 0x17E4,
  AE_SWE7_KA = 0x17E5,
  AE_SWE7_KB = 0x17E6,
  AE_SWE7_KC = 0x17E7,
  AE_SWE7_LA = 0x17E8,
  AE_SWE7_LB = 0x17E9,
  AE_SWE7_LC = 0x17EA,
  AE_SWE7_MA = 0x17EB,
  AE_SWE7_MB = 0x17EC,
  AE_SWE7_MC = 0x17ED,
  AE_SWE7_MD = 0x17EE,
  AE_SWE7_NA = 0x17EF,
  AE_SWE7_NB = 0x17F0,
  AE_SWE7_OA = 0x17F1,
  AE_SWE7_OB = 0x17F2,
  AE_SWE7_PA = 0x17F3,
  AE_SWE7_PB = 0x17F4,
  AE_SWE7_PC = 0x17F5,
  AE_SWE7_PD = 0x17F6,
  AE_SWE7_QA = 0x17F7,
  AE_SWE7_QB = 0x17F8,
  AE_SWE7_QC = 0x17F9,
  AE_SWE7_RA = 0x17FA,
  AE_SWE7_RB = 0x17FB,
  AE_SWE7_RC = 0x17FC,
  AE_SWE7_SA = 0x17FD,
  AE_SWE7_SB = 0x17FE,
  AE_SWE7_SC = 0x17FF,
  AE_SWE7_TA = 0x1800,
  AE_SWE7_TB = 0x1801,
  AE_SWE7_TC = 0x1802,
  AE_SWEX_AA = 0x1803,
  AE_SWEX_AB = 0x1804,
  AE_SWEX_AC = 0x1805,
  AE_SWEX_AD = 0x1806,
  AE_SWEX_AE = 0x1807,
  AE_SWEX_AF = 0x1808,
  AE_SWEX_AG = 0x1809,
  AE_SWEX_AH = 0x180A,
  AE_SWEX_AI = 0x180B,
  AE_SWEX_AJ = 0x180C,
  AE_SWEX_AK = 0x180D,
  AE_SWEX_AL = 0x180E,
  AE_SWEX_AM = 0x180F,
  AE_SWEX_AN = 0x1810,
  AE_SWEX_AO = 0x1811,
  AE_SWEX_AP = 0x1812,
  AE_SWEX_AQ = 0x1813,
  AE_SWEX_AR = 0x1814,
  AE_SWEX_AS = 0x1815,
  AE_SWEX_AT = 0x1816,
  AE_SWEX_AU = 0x1817,
  AE_SWEX_AV = 0x1818,
  AE_SWEX_AW = 0x1819,
  AE_SWEX_AX = 0x181A,
  AE_SWEX_AY = 0x181B,
  AE_SWEX_AZ = 0x181C,
  AE_SWEX_BA = 0x181D,
  AE_SWEX_BB = 0x181E,
  AE_SWEX_BC = 0x181F,
  AE_SWEX_BD = 0x1820,
  AE_SWEX_BE = 0x1821,
  AE_SWEX_BF = 0x1822,
  AE_SWEX_BG = 0x1823,
  AE_SWEX_BH = 0x1824,
  AE_SWEX_BI = 0x1825,
  AE_SWEX_BJ = 0x1826,
  AE_SWEX_BK = 0x1827,
  AE_SWEX_BL = 0x1828,
  AE_SWEX_BM = 0x1829,
  AE_SWEX_BN = 0x182A,
  AE_SWEX_BO = 0x182B,
  AE_SWEX_BP = 0x182C,
  AE_SWEX_BQ = 0x182D,
  AE_SWEX_BR = 0x182E,
  AE_SWEX_BS = 0x182F,
  AE_SYN1_AB = 0x1830,
  AE_SYN1_AC = 0x1831,
  AE_SYN1_AE = 0x1832,
  AE_SYN1_BA = 0x1833,
  AE_SYN1_BD = 0x1834,
  AE_SYN1_CB = 0x1835,
  AE_SYN1_EB = 0x1836,
  AE_SYN1_FB = 0x1837,
  AE_SYN1_FC = 0x1838,
  AE_SYN1_FD = 0x1839,
  AE_SYN1_IA = 0x183A,
  AE_SYN1_IB = 0x183B,
  AE_SYN1_ID = 0x183C,
  AE_SYN1_IF = 0x183D,
  AE_SYN1_JA = 0x183E,
  AE_SYN1_JB = 0x183F,
  AE_SYN1_JD = 0x1840,
  AE_SYN1_JE = 0x1841,
  AE_SYN1_JJ = 0x1842,
  AE_SYN1_JK = 0x1843,
  AE_SYN1_JN = 0x1844,
  AE_SYN1_JO = 0x1845,
  AE_SYN1_JP = 0x1846,
  AE_SYN1_JR = 0x1847,
  AE_SYN1_JS = 0x1848,
  AE_SYN1_JT = 0x1849,
  AE_SYN1_JU = 0x184A,
  AE_SYN1_JX = 0x184B,
  AE_SYN1_KB = 0x184C,
  AE_SYN1_LA = 0x184D,
  AE_SYN1_LC = 0x184E,
  AE_SYN1_YA = 0x184F,
  AE_SYN1_YB = 0x1850,
  AE_SYN1_YE = 0x1851,
  AE_SYN1_YF = 0x1852,
  AE_SYN1_YH = 0x1853,
  AE_SYN1_YJ = 0x1854,
  AE_SYN1_YK = 0x1855,
  AE_SYN1_ZC = 0x1856,
  AE_SYN1_ZD = 0x1857,
  AE_SYN1_ZE = 0x1858,
  AE_SYN1_ZG = 0x1859,
  AE_SYN1_ZK = 0x185A,
  AE_SYN1_ZL = 0x185B,
  AE_SYN1_ZM = 0x185C,
  AE_SYN1_ZN = 0x185D,
  AE_SYN1_ZP = 0x185E,
  AE_SYN1_ZQ = 0x185F,
  AE_SYN1_ZR = 0x1860,
  AE_SYN1_ZT = 0x1861,
  AE_SYN1_ZU = 0x1862,
  AE_SYN1_ZW = 0x1863,
  AE_SYN1_ZX = 0x1864,
  AE_SYN1_ZY = 0x1865,
  AE_SYN1_ZZ = 0x1866,
  AE_SYN2_AA = 0x1867,
  AE_SYN2_AB = 0x1868,
  AE_SYN2_AC = 0x1869,
  AE_SYN2_AD = 0x186A,
  AE_SYN2_BA = 0x186B,
  AE_SYN2_BB = 0x186C,
  AE_SYN2_BC = 0x186D,
  AE_SYN2_BD = 0x186E,
  AE_SYN2_BE = 0x186F,
  AE_SYN2_BF = 0x1870,
  AE_SYN2_CA = 0x1871,
  AE_SYN2_CB = 0x1872,
  AE_SYN2_CC = 0x1873,
  AE_SYN2_CD = 0x1874,
  AE_SYN2_CE = 0x1875,
  AE_SYN2_CF = 0x1876,
  AE_SYN2_CG = 0x1877,
  AE_SYN2_DA = 0x1878,
  AE_SYN2_DB = 0x1879,
  AE_SYN2_DC = 0x187A,
  AE_SYN2_DD = 0x187B,
  AE_SYN2_DE = 0x187C,
  AE_SYN2_DF = 0x187D,
  AE_SYN2_DG = 0x187E,
  AE_SYN2_EA = 0x187F,
  AE_SYN2_EB = 0x1880,
  AE_SYN2_EC = 0x1881,
  AE_SYN2_FA = 0x1882,
  AE_SYN2_FB = 0x1883,
  AE_SYN2_FC = 0x1884,
  AE_SYN2_FD = 0x1885,
  AE_SYN2_FE = 0x1886,
  AE_SYN2_FF = 0x1887,
  AE_SYN2_GA = 0x1888,
  AE_SYN2_GB = 0x1889,
  AE_SYN2_GC = 0x188A,
  AE_SYN2_GD = 0x188B,
  AE_SYN2_GE = 0x188C,
  AE_SYN2_GF = 0x188D,
  AE_SYN2_HA = 0x188E,
  AE_SYN2_HB = 0x188F,
  AE_SYN2_HC = 0x1890,
  AE_SYN2_HD = 0x1891,
  AE_SYN2_HE = 0x1892,
  AE_SYN2_HF = 0x1893,
  AE_SYN2_JA = 0x1894,
  AE_SYN2_JB = 0x1895,
  AE_SYN2_JC = 0x1896,
  AE_SYN2_JD = 0x1897,
  AE_SYN2_JE = 0x1898,
  AE_SYN2_JF = 0x1899,
  AE_SYN2_JG = 0x189A,
  AE_SYN2_JH = 0x189B,
  AE_SYN2_KA = 0x189C,
  AE_SYN2_KB = 0x189D,
  AE_SYN2_KC = 0x189E,
  AE_SYN2_KD = 0x189F,
  AE_SYN2_KE = 0x18A0,
  AE_SYN2_LA = 0x18A1,
  AE_SYN2_LB = 0x18A2,
  AE_SYN2_LC = 0x18A3,
  AE_SYN2_LD = 0x18A4,
  AE_SYN2_LE = 0x18A5,
  AE_SYN2_LF = 0x18A6,
  AE_SYN2_LG = 0x18A7,
  AE_SYN2_LH = 0x18A8,
  AE_SYN2_LI = 0x18A9,
  AE_SYN2_LJ = 0x18AA,
  AE_SYN2_LK = 0x18AB,
  AE_SYN2_LL = 0x18AC,
  AE_SYN2_LM = 0x18AD,
  AE_SYN2_LN = 0x18AE,
  AE_SYN2_LO = 0x18AF,
  AE_SYN2_LP = 0x18B0,
  AE_SYN2_LQ = 0x18B1,
  AE_SYN2_LR = 0x18B2,
  AE_SYN2_LS = 0x18B3,
  AE_SYN2_LT = 0x18B4,
  AE_SYN2_LU = 0x18B5,
  AE_SYN3_AA = 0x18B6,
  AE_SYN3_AB = 0x18B7,
  AE_SYN3_AC = 0x18B8,
  AE_SYN3_AD = 0x18B9,
  AE_SYN3_BA = 0x18BA,
  AE_SYN3_BB = 0x18BB,
  AE_SYN3_BC = 0x18BC,
  AE_SYN3_BD = 0x18BD,
  AE_SYN3_BE = 0x18BE,
  AE_SYN3_BF = 0x18BF,
  AE_SYN3_BG = 0x18C0,
  AE_SYN3_BH = 0x18C1,
  AE_SYN3_BI = 0x18C2,
  AE_SYN3_CA = 0x18C3,
  AE_SYN3_CB = 0x18C4,
  AE_SYN3_CC = 0x18C5,
  AE_SYN3_CD = 0x18C6,
  AE_SYN3_CE = 0x18C7,
  AE_SYN3_CF = 0x18C8,
  AE_SYN3_CG = 0x18C9,
  AE_SYN3_DC = 0x18CA,
  AE_SYN3_EA = 0x18CB,
  AE_SYN3_EB = 0x18CC,
  AE_SYN3_HJ = 0x18CD,
  AE_SYN4_AA = 0x18CE,
  AE_SYN4_AB = 0x18CF,
  AE_SYN4_AC = 0x18D0,
  AE_SYN4_AD = 0x18D1,
  AE_SYN4_AE = 0x18D2,
  AE_SYN4_AF = 0x18D3,
  AE_SYN4_AG = 0x18D4,
  AE_SYN4_AH = 0x18D5,
  AE_SYN4_AJ = 0x18D6,
  AE_SYN4_AK = 0x18D7,
  AE_SYN4_AL = 0x18D8,
  AE_SYN4_BA = 0x18D9,
  AE_SYN4_BB = 0x18DA,
  AE_SYN4_BC = 0x18DB,
  AE_SYN5_AA = 0x18DC,
  AE_SYN5_BA = 0x18DD,
  AE_SYN5_BB = 0x18DE,
  AE_SYN5_BC = 0x18DF,
  AE_SYN5_BD = 0x18E0,
  AE_SYN5_BE = 0x18E1,
  AE_SYN5_BF = 0x18E2,
  AE_SYN5_BG = 0x18E3,
  AE_SYN5_BH = 0x18E4,
  AE_SYN5_BJ = 0x18E5,
  AE_SYN5_BK = 0x18E6,
  AE_SYN5_BL = 0x18E7,
  AE_SYN5_BM = 0x18E8,
  AE_SYN5_BN = 0x18E9,
  AE_SYN5_CA = 0x18EA,
  AE_SYN5_CB = 0x18EB,
  AE_SYN5_CC = 0x18EC,
  AE_SYN5_CD = 0x18ED,
  AE_SYN5_CE = 0x18EE,
  AE_SYN5_CF = 0x18EF,
  AE_SYN5_DA = 0x18F0,
  AE_SYN5_DB = 0x18F1,
  AE_SYN5_DC = 0x18F2,
  AE_SYN5_DD = 0x18F3,
  AE_SYN5_DE = 0x18F4,
  AE_SYN5_EA = 0x18F5,
  AE_SYN5_EB = 0x18F6,
  AE_SYN5_EC = 0x18F7,
  AE_SYN5_ED = 0x18F8,
  AE_SYN5_FA = 0x18F9,
  AE_SYN5_FB = 0x18FA,
  AE_SYN5_GA = 0x18FB,
  AE_SYN5_GB = 0x18FC,
  AE_SYN5_GC = 0x18FD,
  AE_SYN5_GD = 0x18FE,
  AE_SYN5_GE = 0x18FF,
  AE_SYN5_GF = 0x1900,
  AE_SYN5_GG = 0x1901,
  AE_SYN5_GH = 0x1902,
  AE_SYN5_GJ = 0x1903,
  AE_SYN5_GK = 0x1904,
  AE_SYN5_GL = 0x1905,
  AE_SYN5_GM = 0x1906,
  AE_SYN5_GN = 0x1907,
  AE_SYN5_GO = 0x1908,
  AE_SYN5_GW = 0x1909,
  AE_SYN5_GX = 0x190A,
  AE_SYN5_GY = 0x190B,
  AE_SYN5_GZ = 0x190C,
  AE_SYN5_HA = 0x190D,
  AE_SYN5_HB = 0x190E,
  AE_SYN5_HC = 0x190F,
  AE_SYN5_HD = 0x1910,
  AE_SYN5_HE = 0x1911,
  AE_SYN5_HF = 0x1912,
  AE_SYN5_HG = 0x1913,
  AE_SYN5_HH = 0x1914,
  AE_SYN5_HJ = 0x1915,
  AE_SYN5_HK = 0x1916,
  AE_SYN5_HL = 0x1917,
  AE_SYN5_JA = 0x1918,
  AE_SYN5_JB = 0x1919,
  AE_SYN5_JC = 0x191A,
  AE_SYN5_KA = 0x191B,
  AE_SYN5_KB = 0x191C,
  AE_SYN5_KC = 0x191D,
  AE_SYN5_KD = 0x191E,
  AE_SYN5_KE = 0x191F,
  AE_SYN7_AA = 0x1920,
  AE_SYN7_AB = 0x1921,
  AE_SYN7_AC = 0x1922,
  AE_SYN7_AD = 0x1923,
  AE_SYN7_AE = 0x1924,
  AE_SYN7_BA = 0x1925,
  AE_SYN7_BB = 0x1926,
  AE_SYN7_BC = 0x1927,
  AE_SYN7_CA = 0x1928,
  AE_SYN7_CB = 0x1929,
  AE_SYN7_CC = 0x192A,
  AE_SYN7_DA = 0x192B,
  AE_SYN7_DB = 0x192C,
  AE_SYN7_DC = 0x192D,
  AE_SYN7_DD = 0x192E,
  AE_SYN7_DE = 0x192F,
  AE_TATTOO = 0x1930,
  AE_TBOX_AA = 0x1931,
  AE_TBOX_AB = 0x1932,
  AE_TBOX_AC = 0x1933,
  AE_TBOX_AD = 0x1934,
  AE_TBOX_AE = 0x1935,
  AE_TBOX_AF = 0x1936,
  AE_TBOX_AG = 0x1937,
  AE_TBOX_AH = 0x1938,
  AE_TBOX_AI = 0x1939,
  AE_TBOX_AJ = 0x193A,
  AE_TBOX_AK = 0x193B,
  AE_TBOX_AL = 0x193C,
  AE_TBOX_AM = 0x193D,
  AE_TBOX_AN = 0x193E,
  AE_TBOX_AO = 0x193F,
  AE_TBOX_AP = 0x1940,
  AE_TBOX_AQ = 0x1941,
  AE_TBOX_AR = 0x1942,
  AE_TBOX_AS = 0x1943,
  AE_TBOX_AT = 0x1944,
  AE_TBOX_AU = 0x1945,
  AE_TBOX_AV = 0x1946,
  AE_TBOX_AW = 0x1947,
  AE_TBOX_AX = 0x1948,
  AE_TBOX_AY = 0x1949,
  AE_TBOX_AZ = 0x194A,
  AE_TBOX_BA = 0x194B,
  AE_TBOX_BB = 0x194C,
  AE_TBOX_BC = 0x194D,
  AE_TBOX_BD = 0x194E,
  AE_TBOX_BE = 0x194F,
  AE_TBOX_BF = 0x1950,
  AE_TBOX_BG = 0x1951,
  AE_TBOX_BH = 0x1952,
  AE_TBOX_BI = 0x1953,
  AE_TBOX_BJ = 0x1954,
  AE_TBOX_BK = 0x1955,
  AE_TBOX_BL = 0x1956,
  AE_TBOX_BM = 0x1957,
  AE__TEMPEST_SHIELD_LOOP = 0x1958,
  AE__TEMPEST_ENEMYSHOOT = 0x1959,
  AE__TEMPEST_EXPLOSION = 0x195A,
  AE__TEMPEST_GAMEOVER = 0x195B,
  AE__TEMPEST_HIGHLIGHT = 0x195C,
  AE__TEMPEST_PICKUP = 0x195D,
  AE__TEMPEST_PLAYERSHOOT = 0x195E,
  AE__TEMPEST_SELECT = 0x195F,
  AE__TEMPEST_WARP = 0x1960,
  AE_GREEN_GOO_HUM = 0x1961,
  AE_TORX_AA = 0x1962,
  AE_TORX_AB = 0x1963,
  AE_TORX_AC = 0x1964,
  AE_TORX_AD = 0x1965,
  AE_TORX_AE = 0x1966,
  AE_TORX_AF = 0x1967,
  AE_TORX_AG = 0x1968,
  AE_TORX_AH = 0x1969,
  AE_TORX_AI = 0x196A,
  AE_TORX_AJ = 0x196B,
  AE_TORX_AK = 0x196C,
  AE_TORX_AL = 0x196D,
  AE_TORX_AM = 0x196E,
  AE_TORX_AN = 0x196F,
  AE_TORX_AO = 0x1970,
  AE_TORX_AP = 0x1971,
  AE_TORX_AQ = 0x1972,
  AE_TORX_AR = 0x1973,
  AE_TORX_AS = 0x1974,
  AE_TORX_AT = 0x1975,
  AE_TORX_AU = 0x1976,
  AE_TRU1_AA = 0x1977,
  AE_TRU1_AB = 0x1978,
  AE_TRU1_AC = 0x1979,
  AE_TRU1_AD = 0x197A,
  AE_TRU1_AE = 0x197B,
  AE_TRU1_AF = 0x197C,
  AE_TRU1_AG = 0x197D,
  AE_TRU1_AH = 0x197E,
  AE_TRU1_BA = 0x197F,
  AE_TRU1_BB = 0x1980,
  AE_TRU1_BC = 0x1981,
  AE_TRU1_BD = 0x1982,
  AE_TRU1_BE = 0x1983,
  AE_TRU1_BF = 0x1984,
  AE_TRU1_BG = 0x1985,
  AE_TRU1_BH = 0x1986,
  AE_TRU1_CA = 0x1987,
  AE_TRU1_CB = 0x1988,
  AE_TRU1_CC = 0x1989,
  AE_TRU1_CD = 0x198A,
  AE_TRU1_CE = 0x198B,
  AE_TRU1_CF = 0x198C,
  AE_TRU1_CG = 0x198D,
  AE_TRU1_CH = 0x198E,
  AE_TRU1_DA = 0x198F,
  AE_TRU1_DB = 0x1990,
  AE_TRU1_DC = 0x1991,
  AE_TRU1_DD = 0x1992,
  AE_TRU1_DE = 0x1993,
  AE_TRU1_DF = 0x1994,
  AE_TRU1_DG = 0x1995,
  AE_TRU1_DH = 0x1996,
  AE_TRU1_FA = 0x1997,
  AE_TRU1_FB = 0x1998,
  AE_TRU1_FC = 0x1999,
  AE_TRU1_FD = 0x199A,
  AE_TRU1_FE = 0x199B,
  AE_TRU1_FF = 0x199C,
  AE_TRU1_FG = 0x199D,
  AE_TRU1_FH = 0x199E,
  AE_TRU1_ZA = 0x199F,
  AE_TRU1_ZB = 0x19A0,
  AE_TRU1_ZC = 0x19A1,
  AE_TRU2_AA = 0x19A2,
  AE_TRU2_AB = 0x19A3,
  AE_TRU2_AC = 0x19A4,
  AE_TRU2_AD = 0x19A5,
  AE_TRU2_AE = 0x19A6,
  AE_TRU2_BA = 0x19A7,
  AE_TRU2_BB = 0x19A8,
  AE_TRU2_BC = 0x19A9,
  AE_TRU2_CA = 0x19AA,
  AE_TRU2_CB = 0x19AB,
  AE_TRU2_DA = 0x19AC,
  AE_TRU2_DB = 0x19AD,
  AE_TRU2_DC = 0x19AE,
  AE_TRU2_DD = 0x19AF,
  AE_TRU2_DE = 0x19B0,
  AE_TRU2_DF = 0x19B1,
  AE_TRU2_EA = 0x19B2,
  AE_TRU2_EB = 0x19B3,
  AE_TRU2_EC = 0x19B4,
  AE_TRU2_ED = 0x19B5,
  AE_TRU2_EF = 0x19B6,
  AE_TRU2_EG = 0x19B7,
  AE_TRU2_FA = 0x19B8,
  AE_TRU2_FB = 0x19B9,
  AE_TRU2_FC = 0x19BA,
  AE_TRU2_FD = 0x19BB,
  AE_TRU2_FE = 0x19BC,
  AE_TRU2_FF = 0x19BD,
  AE_TRU2_FG = 0x19BE,
  AE_TRU2_FH = 0x19BF,
  AE_TRU2_FJ = 0x19C0,
  AE_TRU2_FK = 0x19C1,
  AE_TRU2_GA = 0x19C2,
  AE_TRU2_GB = 0x19C3,
  AE_TRU2_GC = 0x19C4,
  AE_TRU2_GE = 0x19C5,
  AE_TRU2_GF = 0x19C6,
  AE_TRU2_GG = 0x19C7,
  AE_TRU2_GH = 0x19C8,
  AE_TRU2_GJ = 0x19C9,
  AE_TRU2_HA = 0x19CA,
  AE_TRU2_HB = 0x19CB,
  AE_TRU2_HC = 0x19CC,
  AE_TRU2_HD = 0x19CD,
  AE_TRU2_HE = 0x19CE,
  AE_TRU2_HF = 0x19CF,
  AE_TRU2_HG = 0x19D0,
  AE_TRU2_HH = 0x19D1,
  AE_TRU2_HJ = 0x19D2,
  AE_TRU2_HK = 0x19D3,
  AE_TRU2_HL = 0x19D4,
  AE_TRU2_HM = 0x19D5,
  AE_TRU2_HN = 0x19D6,
  AE_TRU2_HO = 0x19D7,
  AE_TRU2_JA = 0x19D8,
  AE_TRU2_JB = 0x19D9,
  AE_TRU2_KA = 0x19DA,
  AE_TRU2_KB = 0x19DB,
  AE_TRU2_KC = 0x19DC,
  AE_TRU2_KD = 0x19DD,
  AE_TRU2_LA = 0x19DE,
  AE_TRU2_LB = 0x19DF,
  AE_TRU2_LC = 0x19E0,
  AE_TRU2_MA = 0x19E1,
  AE_TRU2_MB = 0x19E2,
  AE_TRU2_MC = 0x19E3,
  AE_TRU2_NA = 0x19E4,
  AE_TRU2_NB = 0x19E5,
  AE_TRU2_OA = 0x19E6,
  AE_TRU2_OC = 0x19E7,
  AE_TRU2_OD = 0x19E8,
  AE_TRU2_OE = 0x19E9,
  AE_TRU2_OF = 0x19EA,
  AE_TRUX_AA = 0x19EB,
  AE_TRUX_AB = 0x19EC,
  AE_TRUX_AC = 0x19ED,
  AE_TRUX_AD = 0x19EE,
  AE_TRUX_AE = 0x19EF,
  AE_TRUX_AF = 0x19F0,
  AE_TRUX_AG = 0x19F1,
  AE_TRUX_AH = 0x19F2,
  AE_TRUX_AI = 0x19F3,
  AE_TRUX_AJ = 0x19F4,
  AE_TRUX_AK = 0x19F5,
  AE_TRUX_AL = 0x19F6,
  AE_TRUX_AM = 0x19F7,
  AE_TRUX_AN = 0x19F8,
  AE_TRUX_AO = 0x19F9,
  AE_TRUX_AP = 0x19FA,
  AE_TRUX_AQ = 0x19FB,
  AE_TRUX_AR = 0x19FC,
  AE_TRUX_AS = 0x19FD,
  AE_TRUX_AT = 0x19FE,
  AE_TRUX_AU = 0x19FF,
  AE_TRUX_AV = 0x1A00,
  AE_TRUX_AW = 0x1A01,
  AE_TRUX_AX = 0x1A02,
  AE_TRUX_BA = 0x1A03,
  AE_TRUX_BB = 0x1A04,
  AE_TRUX_BC = 0x1A05,
  AE_TRUX_BD = 0x1A06,
  AE_TRUX_BE = 0x1A07,
  AE_TRUX_BF = 0x1A08,
  AE_TRUX_BG = 0x1A09,
  AE_TRUX_BH = 0x1A0A,
  AE_TRUX_BI = 0x1A0B,
  AE__BLAST_DOOR_SLIDE_LOOP = 0x1A0C,
  AE__BLAST_DOOR_SLIDE_START = 0x1A0D,
  AE__BLAST_DOOR_SLIDE_STOP = 0x1A0E,
  AE__KEYPAD_BEEP2 = 0x1A0F,
  AE__SHOOT_CONTROLS2 = 0x1A10,
  AE_SECURITY_ALARM = 0x1A11,
  AE_VALDED1 = 0x1A12,
  AE_VALDED2 = 0x1A13,
  AE_VALDED3 = 0x1A14,
  AE_VALUND1 = 0x1A15,
  AE_VALUND2 = 0x1A16,
  AE_VANK_1 = 0x1A17,
  AE_VANK_2 = 0x1A18,
  AE_VANK_3 = 0x1A19,
  AE_VANK_4 = 0x1A1A,
  AE_V_HEY_1 = 0x1A1B,
  AE_V_HEY_2 = 0x1A1C,
  AE_V_HEY_3 = 0x1A1D,
  AE_VCR1_AA = 0x1A1E,
  AE_VCR1_AB = 0x1A1F,
  AE_VCR1_AC = 0x1A20,
  AE_VCR1_AD = 0x1A21,
  AE_VCR1_AE = 0x1A22,
  AE_VCR1_AF = 0x1A23,
  AE_VCR1_AG = 0x1A24,
  AE_VCR1_AH = 0x1A25,
  AE_VCR1_AI = 0x1A26,
  AE_VCR2_AA = 0x1A27,
  AE_VCR2_AB = 0x1A28,
  AE_VCR2_AC = 0x1A29,
  AE_VCR2_AD = 0x1A2A,
  AE_VCR2_AE = 0x1A2B,
  AE_VCR2_BA = 0x1A2C,
  AE_VCR2_BB = 0x1A2D,
  AE_VCR2_BC = 0x1A2E,
  AE_VCR2_BE = 0x1A2F,
  AE_VCR2_BF = 0x1A30,
  AE_VCR2_BG = 0x1A31,
  AE_VCR2_BH = 0x1A32,
  AE_VCR2_BJ = 0x1A33,
  AE_VCR2_CA = 0x1A34,
  AE_VCR2_CB = 0x1A35,
  AE_VCR2_CC = 0x1A36,
  AE_VCR2_CD = 0x1A37,
  AE_VCR2_CE = 0x1A38,
  AE_VCR2_CF = 0x1A39,
  AE_VCR2_CG = 0x1A3A,
  AE_VCR2_DA = 0x1A3B,
  AE_VCR2_DB = 0x1A3C,
  AE_VCR2_DC = 0x1A3D,
  AE_VCR2_DD = 0x1A3E,
  AE_VCR2_DE = 0x1A3F,
  AE_DRINKS_CAN = 0x1A40,
  AE_VENDING_EAT = 0x1A41,
  AE__LIFT_LOOP = 0x1A42,
  AE__SECURITY_ALARM = 0x1A43,
  AE__LIFT_START = 0x1A44,
  AE__LIFT_STOP = 0x1A45,
  AE__VIDEO_POKER_BUTTON = 0x1A46,
  AE__VIDEO_POKER_PAYOUT = 0x1A47,
  AE_VO_AA = 0x1A48,
  AE_VO_AB = 0x1A49,
  AE_VO_AC = 0x1A4A,
  AE_VO_AD = 0x1A4B,
  AE_VO_AE = 0x1A4C,
  AE_VO_AF = 0x1A4D,
  AE_VO_AG = 0x1A4E,
  AE_WBOX_1 = 0x1A4F,
  AE_WBOX_2 = 0x1A50,
  AE_WBOX_3 = 0x1A51,
  AE_WBOX_4 = 0x1A52,
  AE_WBOX_5 = 0x1A53,
  AE_WBOX_6 = 0x1A54,
  AE_WBOX_7 = 0x1A55,
  AE_WBOX_8 = 0x1A56,
  AE_W_BET_1 = 0x1A57,
  AE_W_BET_2 = 0x1A58,
  AE_W_LEND1 = 0x1A59,
  AE_W_LEND2 = 0x1A5A,
  AE_W_LEND3 = 0x1A5B,
  AE_W_NEM_1 = 0x1A5C,
  AE_W_NEM_2 = 0x1A5D,
  AE_W_NEM_3 = 0x1A5E,
  AE_W_NMB_1 = 0x1A5F,
  AE_W_NMB_2 = 0x1A60,
  AE_W_NMB_3 = 0x1A61,
  AE_W_NUM10 = 0x1A62,
  AE_W_NUM11 = 0x1A63,
  AE_W_NUM12 = 0x1A64,
  AE_W_NUM13 = 0x1A65,
  AE_W_NUM14 = 0x1A66,
  AE_W_NUM15 = 0x1A67,
  AE_W_NUM16 = 0x1A68,
  AE_W_NUM17 = 0x1A69,
  AE_W_NUM18 = 0x1A6A,
  AE_W_NUM19 = 0x1A6B,
  AE_W_NUM20 = 0x1A6C,
  AE_W_NUM21 = 0x1A6D,
  AE_W_NUM22 = 0x1A6E,
  AE_W_NUM23 = 0x1A6F,
  AE_W_NUM24 = 0x1A70,
  AE_W_NUM25 = 0x1A71,
  AE_W_NUM26 = 0x1A72,
  AE_W_NUM27 = 0x1A73,
  AE_W_NUM28 = 0x1A74,
  AE_W_NUM29 = 0x1A75,
  AE_W_NUM30 = 0x1A76,
  AE_W_NUM31 = 0x1A77,
  AE_W_NUM32 = 0x1A78,
  AE_W_NUM33 = 0x1A79,
  AE_W_NUM34 = 0x1A7A,
  AE_W_NUM35 = 0x1A7B,
  AE_W_NUM36 = 0x1A7C,
  AE_W_NUM_0 = 0x1A7D,
  AE_W_NUM_1 = 0x1A7E,
  AE_W_NUM_2 = 0x1A7F,
  AE_W_NUM_3 = 0x1A80,
  AE_W_NUM_4 = 0x1A81,
  AE_W_NUM_5 = 0x1A82,
  AE_W_NUM_6 = 0x1A83,
  AE_W_NUM_7 = 0x1A84,
  AE_W_NUM_8 = 0x1A85,
  AE_W_NUM_9 = 0x1A86,
  AE_W_PWIN1 = 0x1A87,
  AE_W_PWIN2 = 0x1A88,
  AE_W_PWIN3 = 0x1A89,
  AE_W_REG_1 = 0x1A8A,
  AE_W_REG_2 = 0x1A8B,
  AE_W_THX_1 = 0x1A8C,
  AE_W_THX_2 = 0x1A8D,
  AE_W_WEEL1 = 0x1A8E,
  AE_W_WEEL2 = 0x1A8F,
  AE_W_WEEL3 = 0x1A90,
  AE_W_WEEL4 = 0x1A91,
  AE_W_WEEL5 = 0x1A92,
  AE_W_WEEL6 = 0x1A93,
  AE_W_WEEL7 = 0x1A94,
  AE_W_WINS1 = 0x1A95,
  AE_W_WINS2 = 0x1A96,
  AE_W_WINS3 = 0x1A97,
  AE_WUZ1_AA = 0x1A98,
  AE_WUZ1_AB = 0x1A99,
  AE_WUZ1_BA = 0x1A9A,
  AE_WUZ1_BB = 0x1A9B,
  AE_WUZ1_CA = 0x1A9C,
  AE_WUZ1_CB = 0x1A9D,
  AE_WUZ1_CC = 0x1A9E,
  AE_WUZ1_CD = 0x1A9F,
  AE_WUZ1_CE = 0x1AA0,
  AE_WUZ1_CG = 0x1AA1,
  AE_WUZ1_CH = 0x1AA2,
  AE_WUZ1_DA = 0x1AA3,
  AE_WUZ1_DB = 0x1AA4,
  AE_WUZ1_DC = 0x1AA5,
  AE_WUZ1_DD = 0x1AA6,
  AE_WUZ1_EA = 0x1AA7,
  AE_WUZ1_EB = 0x1AA8,
  AE_WUZ1_EC = 0x1AA9,
  AE_WUZ1_EE = 0x1AAA,
  AE_WUZ1_FA = 0x1AAB,
  AE_WUZ1_FB = 0x1AAC,
  AE_WUZ1_FC = 0x1AAD,
  AE_WUZ1_FD = 0x1AAE,
  AE_WUZ1_FE = 0x1AAF,
  AE_WUZ1_GA = 0x1AB0,
  AE_WUZ1_GB = 0x1AB1,
  AE_WUZ1_GC = 0x1AB2,
  AE_WUZ1_GD = 0x1AB3,
  AE_WUZ1_GE = 0x1AB4,
  AE_WUZ1_GF = 0x1AB5,
  AE_WUZ1_GG = 0x1AB6,
  AE_WUZ1_GH = 0x1AB7,
  AE_WUZ1_GJ = 0x1AB8,
  AE_WUZ1_GK = 0x1AB9,
  AE_WUZ1_GL = 0x1ABA,
  AE_WUZ1_GM = 0x1ABB,
  AE_WUZ1_HA = 0x1ABC,
  AE_WUZ1_HB = 0x1ABD,
  AE_WUZ1_HC = 0x1ABE,
  AE_WUZ1_JA = 0x1ABF,
  AE_WUZ1_JB = 0x1AC0,
  AE_WUZ1_KA = 0x1AC1,
  AE_WUZ1_KB = 0x1AC2,
  AE_WUZ1_KC = 0x1AC3,
  AE_WUZ1_KD = 0x1AC4,
  AE_WUZ1_LA = 0x1AC5,
  AE_WUZ1_LB = 0x1AC6,
  AE_WUZ1_LC = 0x1AC7,
  AE_WUZ1_LD = 0x1AC8,
  AE_WUZ1_MA = 0x1AC9,
  AE_WUZ1_MB = 0x1ACA,
  AE_WUZ1_MC = 0x1ACB,
  AE_WUZ1_MD = 0x1ACC,
  AE_WUZ1_ME = 0x1ACD,
  AE_WUZ1_MF = 0x1ACE,
  AE_WUZ1_MG = 0x1ACF,
  AE_WUZ1_MH = 0x1AD0,
  AE_WUZ1_MJ = 0x1AD1,
  AE_WUZ1_NA = 0x1AD2,
  AE_WUZ1_NB = 0x1AD3,
  AE_WUZ1_NC = 0x1AD4,
  AE_WUZ1_ND = 0x1AD5,
  AE_WUZ1_NE = 0x1AD6,
  AE_WUZ1_NF = 0x1AD7,
  AE_WUZ1_NG = 0x1AD8,
  AE_WUZ1_NH = 0x1AD9,
  AE_WUZ1_NJ = 0x1ADA,
  AE_WUZ1_NK = 0x1ADB,
  AE_WUZ1_NL = 0x1ADC,
  AE_WUZ1_NM = 0x1ADD,
  AE_WUZ1_NN = 0x1ADE,
  AE_WUZ1_NO = 0x1ADF,
  AE_WUZ1_NP = 0x1AE0,
  AE_WUZ1_NQ = 0x1AE1,
  AE_WUZ1_OA = 0x1AE2,
  AE_WUZ1_OB = 0x1AE3,
  AE_WUZ1_OC = 0x1AE4,
  AE_WUZ1_OD = 0x1AE5,
  AE_WUZ1_OE = 0x1AE6,
  AE_WUZ1_OF = 0x1AE7,
  AE_WUZ1_OG = 0x1AE8,
  AE_WUZ1_OH = 0x1AE9,
  AE_WUZ1_OJ = 0x1AEA,
  AE_WUZ1_OK = 0x1AEB,
  AE_WUZ1_OL = 0x1AEC,
  AE_WUZ1_OM = 0x1AED,
  AE_WUZ1_ON = 0x1AEE,
  AE_WUZ1_OO = 0x1AEF,
  AE_WUZ1_OP = 0x1AF0,
  AE_WUZ1_OQ = 0x1AF1,
  AE_WUZ1_OR = 0x1AF2,
  AE_WUZ1_OS = 0x1AF3,
  AE_WUZ1_PA = 0x1AF4,
  AE_WUZ1_PB = 0x1AF5,
  AE_WUZ1_QA = 0x1AF6,
  AE_WUZ1_QB = 0x1AF7,
  AE_WUZ1_QC = 0x1AF8,
  AE_WUZ1_QD = 0x1AF9,
  AE_WUZ1_QE = 0x1AFA,
  AE_WUZ1_QF = 0x1AFB,
  AE_WUZ1_QG = 0x1AFC,
  AE_WUZ1_QH = 0x1AFD,
  AE_WUZ1_RA = 0x1AFE,
  AE_WUZ1_RB = 0x1AFF,
  AE_WUZ1_RC = 0x1B00,
  AE_WUZ1_RD = 0x1B01,
  AE_WUZ2_AA = 0x1B02,
  AE_WUZ2_AB = 0x1B03,
  AE_WUZ2_AC = 0x1B04,
  AE_WUZ2_BA = 0x1B05,
  AE_WUZ2_BB = 0x1B06,
  AE_WUZ2_BC = 0x1B07,
  AE_WUZ2_CA = 0x1B08,
  AE_WUZ2_CB = 0x1B09,
  AE_WUZ2_CC = 0x1B0A,
  AE_WUZ2_DA = 0x1B0B,
  AE_WUZ2_DB = 0x1B0C,
  AE_WUZ2_DC = 0x1B0D,
  AE_WUZ2_EA = 0x1B0E,
  AE_WUZ2_EB = 0x1B0F,
  AE_WUZ2_EC = 0x1B10,
  AE_WUZ2_FA = 0x1B11,
  AE_WUZ2_FB = 0x1B12,
  AE_WUZ2_FC = 0x1B13,
  AE_WUZ2_GA = 0x1B14,
  AE_WUZ2_GB = 0x1B15,
  AE_WUZ2_GC = 0x1B16,
  AE_WUZ2_HA = 0x1B17,
  AE_WUZ2_HB = 0x1B18,
  AE_WUZ2_HC = 0x1B19,
  AE_WUZ2_JA = 0x1B1A,
  AE_WUZ2_JB = 0x1B1B,
  AE_WUZ2_JC = 0x1B1C,
  AE_WUZ2_KA = 0x1B1D,
  AE_WUZ2_KB = 0x1B1E,
  AE_WUZ2_KC = 0x1B1F,
  AE_WUZ2_LA = 0x1B20,
  AE_WUZ2_LB = 0x1B21,
  AE_WUZ2_LC = 0x1B22,
  AE_WUZ2_MA = 0x1B23,
  AE_WUZ2_MB = 0x1B24,
  AE_WUZ2_MC = 0x1B25,
  AE_WUZ2_NA = 0x1B26,
  AE_WUZ2_NB = 0x1B27,
  AE_WUZ2_NC = 0x1B28,
  AE_WUZ2_OA = 0x1B29,
  AE_WUZ2_OB = 0x1B2A,
  AE_WUZ2_OC = 0x1B2B,
  AE_WUZ2_PA = 0x1B2C,
  AE_WUZ2_PB = 0x1B2D,
  AE_WUZ2_PC = 0x1B2E,
  AE_WUZ2_QA = 0x1B2F,
  AE_WUZ2_QB = 0x1B30,
  AE_WUZ2_QC = 0x1B31,
  AE_WUZ2_RA = 0x1B32,
  AE_WUZ2_RB = 0x1B33,
  AE_WUZ2_RC = 0x1B34,
  AE_WUZ2_SA = 0x1B35,
  AE_WUZ2_SB = 0x1B36,
  AE_WUZ2_SC = 0x1B37,
  AE_WUZ2_TA = 0x1B38,
  AE_WUZ2_TB = 0x1B39,
  AE_WUZ2_TC = 0x1B3A,
  AE_WUZ2_UA = 0x1B3B,
  AE_WUZ2_UB = 0x1B3C,
  AE_WUZ2_UC = 0x1B3D,
  AE_WUZ2_VA = 0x1B3E,
  AE_WUZ2_VB = 0x1B3F,
  AE_WUZ2_VC = 0x1B40,
  AE_WUZ2_WA = 0x1B41,
  AE_WUZ2_WB = 0x1B42,
  AE_WUZ2_WC = 0x1B43,
  AE_WUZ2_XA = 0x1B44,
  AE_WUZ2_XB = 0x1B45,
  AE_WUZ2_XC = 0x1B46,
  AE_WUZ2_XD = 0x1B47,
  AE_WUZ2_XE = 0x1B48,
  AE_WUZ2_XF = 0x1B49,
  AE_WUZ2_YA = 0x1B4A,
  AE_WUZ2_YB = 0x1B4B,
  AE_WUZ2_YC = 0x1B4C,
  AE_WUZ2_YD = 0x1B4D,
  AE_WUZ2_YE = 0x1B4E,
  AE_WUZ2_YF = 0x1B4F,
  AE_WUZ2_YG = 0x1B50,
  AE_WUZ2_YH = 0x1B51,
  AE_WUZ2_YJ = 0x1B52,
  AE_WUZ2_YK = 0x1B53,
  AE_WUZ2_YL = 0x1B54,
  AE_WUZ2_ZA = 0x1B55,
  AE_WUZ2_ZB = 0x1B56,
  AE_WUZ2_ZC = 0x1B57,
  AE_WUZ2_ZD = 0x1B58,
  AE_WUZ2_ZE = 0x1B59,
  AE_WUZ2_ZF = 0x1B5A,
  AE_WUZ2_ZG = 0x1B5B,
  AE_WUZ2_ZH = 0x1B5C,
  AE_WUZ2_ZJ = 0x1B5D,
  AE_WUZ2_ZK = 0x1B5E,
  AE_WUZ2_ZL = 0x1B5F,
  AE_WUZ2_ZM = 0x1B60,
  AE_WUZ2_ZN = 0x1B61,
  AE_WUZ2_ZO = 0x1B62,
  AE_WUZ2_ZP = 0x1B63,
  AE_WUZ2_ZQ = 0x1B64,
  AE_WUZ2_ZR = 0x1B65,
  AE_WUZ2_ZS = 0x1B66,
  AE_WUZ2_ZT = 0x1B67,
  AE_WUZ2_ZU = 0x1B68,
  AE_WUZ2_ZV = 0x1B69,
  AE_WUZ2_ZW = 0x1B6A,
  AE_WUZ2_ZX = 0x1B6B,
  AE_WUZ2_ZY = 0x1B6C,
  AE_WUZ2_ZZ = 0x1B6D,
  AE_WUZ4_AA = 0x1B6E,
  AE_WUZ4_AB = 0x1B6F,
  AE_WUZ4_BA = 0x1B70,
  AE_WUZ4_CA = 0x1B71,
  AE_WUZ4_CB = 0x1B72,
  AE_WUZ4_CC = 0x1B73,
  AE_WUZ4_DA = 0x1B74,
  AE_WUZ4_EA = 0x1B75,
  AE_WUZ4_EB = 0x1B76,
  AE_WUZ4_FA = 0x1B77,
  AE_WUZ4_FB = 0x1B78,
  AE_WUZ4_GA = 0x1B79,
  AE_WUZ4_GB = 0x1B7A,
  AE_WUZ4_GC = 0x1B7B,
  AE_WUZ4_HA = 0x1B7C,
  AE_WUZ4_JA = 0x1B7D,
  AE_WUZ4_JB = 0x1B7E,
  AE_WUZ4_JC = 0x1B7F,
  AE_WUZ4_JD = 0x1B80,
  AE_WUZ4_JE = 0x1B81,
  AE_WUZ4_JF = 0x1B82,
  AE_WUZ4_KA = 0x1B83,
  AE_WUZ4_KB = 0x1B84,
  AE_WUZ4_KC = 0x1B85,
  AE_WUZ4_KD = 0x1B86,
  AE_WUZ4_KE = 0x1B87,
  AE_WUZ4_LA = 0x1B88,
  AE_WUZ4_LB = 0x1B89,
  AE_WUZ4_LC = 0x1B8A,
  AE_WUZ4_LD = 0x1B8B,
  AE_WUZ4_LE = 0x1B8C,
  AE_WUZ4_MA = 0x1B8D,
  AE_WUZ4_MB = 0x1B8E,
  AE_WUZ4_MC = 0x1B8F,
  AE_WUZ4_MD = 0x1B90,
  AE_WUZ4_ME = 0x1B91,
  AE_WUZ4_MF = 0x1B92,
  AE_WUZ4_MH = 0x1B93,
  AE_WUZ4_MJ = 0x1B94,
  AE_WUZ4_NA = 0x1B95,
  AE_WUZ4_NB = 0x1B96,
  AE_WUZ4_NC = 0x1B97,
  AE_WUZ4_NE = 0x1B98,
  AE_WUZ4_NF = 0x1B99,
  AE_WUZ4_OA = 0x1B9A,
  AE_WUZ4_OB = 0x1B9B,
  AE_WUZ4_PA = 0x1B9C,
  AE_WUZ4_ZA = 0x1B9D,
  AE_WUZX_AA = 0x1B9E,
  AE_WUZX_AB = 0x1B9F,
  AE_WUZX_AC = 0x1BA0,
  AE_WUZX_AD = 0x1BA1,
  AE_WUZX_AE = 0x1BA2,
  AE_WUZX_AF = 0x1BA3,
  AE_WUZX_AG = 0x1BA4,
  AE_WUZX_AH = 0x1BA5,
  AE_WUZX_AI = 0x1BA6,
  AE_WUZX_AJ = 0x1BA7,
  AE_WUZX_AK = 0x1BA8,
  AE_WUZX_AL = 0x1BA9,
  AE_WUZX_AM = 0x1BAA,
  AE_WUZX_AN = 0x1BAB,
  AE_WUZX_AO = 0x1BAC,
  AE_WUZX_AP = 0x1BAD,
  AE_WUZX_AQ = 0x1BAE,
  AE_WUZX_AR = 0x1BAF,
  AE_WUZX_AS = 0x1BB0,
  AE_WUZX_AT = 0x1BB1,
  AE_WUZX_AU = 0x1BB2,
  AE_WUZX_AV = 0x1BB3,
  AE_WUZX_AW = 0x1BB4,
  AE_WUZX_AX = 0x1BB5,
  AE_WUZX_AY = 0x1BB6,
  AE_WUZX_AZ = 0x1BB7,
  AE_WUZX_BA = 0x1BB8,
  AE_WUZX_BB = 0x1BB9,
  AE_WUZX_BC = 0x1BBA,
  AE_WUZX_BD = 0x1BBB,
  AE_WUZX_BE = 0x1BBC,
  AE_WUZX_BF = 0x1BBD,
  AE_WUZX_BG = 0x1BBE,
  AE_WUZX_BH = 0x1BBF,
  AE_WUZX_BI = 0x1BC0,
  AE_WUZX_BJ = 0x1BC1,
  AE_WUZX_BK = 0x1BC2,
  AE_WUZX_BL = 0x1BC3,
  AE_WUZX_BM = 0x1BC4,
  AE_WUZX_BN = 0x1BC5,
  AE_WUZX_BO = 0x1BC6,
  AE_WUZX_BP = 0x1BC7,
  AE_WUZX_BQ = 0x1BC8,
  AE_WUZX_BR = 0x1BC9,
  AE_WUZX_BS = 0x1BCA,
  AE_ZER1_AA = 0x1BCB,
  AE_ZER1_AB = 0x1BCC,
  AE_ZER1_AC = 0x1BCD,
  AE_ZER1_AD = 0x1BCE,
  AE_ZER1_AE = 0x1BCF,
  AE_ZER1_BA = 0x1BD0,
  AE_ZER1_BB = 0x1BD1,
  AE_ZER1_BC = 0x1BD2,
  AE_ZER1_BD = 0x1BD3,
  AE_ZER1_BE = 0x1BD4,
  AE_ZER1_BF = 0x1BD5,
  AE_ZER1_BG = 0x1BD6,
  AE_ZER1_BH = 0x1BD7,
  AE_ZER1_BJ = 0x1BD8,
  AE_ZER1_BK = 0x1BD9,
  AE_ZER1_BL = 0x1BDA,
  AE_ZER1_BM = 0x1BDB,
  AE_ZER1_BN = 0x1BDC,
  AE_ZER1_CA = 0x1BDD,
  AE_ZER1_DA = 0x1BDE,
  AE_ZER1_DB = 0x1BDF,
  AE_ZER1_EA = 0x1BE0,
  AE_ZER1_EB = 0x1BE1,
  AE_ZER1_EC = 0x1BE2,
  AE_ZER1_FA = 0x1BE3,
  AE_ZER1_FB = 0x1BE4,
  AE_ZER1_FC = 0x1BE5,
  AE_ZER1_FD = 0x1BE6,
  AE_ZER1_FE = 0x1BE7,
  AE_ZER1_FF = 0x1BE8,
  AE_ZER1_FG = 0x1BE9,
  AE_ZER1_FH = 0x1BEA,
  AE_ZER2_AA = 0x1BEB,
  AE_ZER2_AB = 0x1BEC,
  AE_ZER2_AC = 0x1BED,
  AE_ZER2_AD = 0x1BEE,
  AE_ZER2_BA = 0x1BEF,
  AE_ZER2_BB = 0x1BF0,
  AE_ZER2_CA = 0x1BF1,
  AE_ZER2_CB = 0x1BF2,
  AE_ZER2_CC = 0x1BF3,
  AE_ZER2_CD = 0x1BF4,
  AE_ZER2_CE = 0x1BF5,
  AE_ZER2_DA = 0x1BF6,
  AE_ZER2_DB = 0x1BF7,
  AE_ZER2_DC = 0x1BF8,
  AE_ZER2_DD = 0x1BF9,
  AE_ZER2_EA = 0x1BFA,
  AE_ZER2_EB = 0x1BFB,
  AE_ZER2_FA = 0x1BFC,
  AE_ZER2_FB = 0x1BFD,
  AE_ZER2_FC = 0x1BFE,
  AE_ZER2_FD = 0x1BFF,
  AE_ZER3_AA = 0x1C00,
  AE_ZER3_AB = 0x1C01,
  AE_ZER3_AC = 0x1C02,
  AE_ZER3_AD = 0x1C03,
  AE_ZER3_AE = 0x1C04,
  AE_ZER3_AF = 0x1C05,
  AE_ZER3_ZA = 0x1C06,
  AE_ZER3_ZB = 0x1C07,
  AE_ZER3_ZC = 0x1C08,
  AE_ZER3_ZD = 0x1C09,
  AE_ZER3_ZE = 0x1C0A,
  AE_ZER3_ZF = 0x1C0B,
  AE_ZER4_AA = 0x1C0C,
  AE_ZER4_AB = 0x1C0D,
  AE_ZER4_AC = 0x1C0E,
  AE_ZER4_AD = 0x1C0F,
  AE_ZER4_AE = 0x1C10,
  AE_ZER4_AF = 0x1C11,
  AE_ZER4_BA = 0x1C12,
  AE_ZER4_BB = 0x1C13,
  AE_ZER4_BC = 0x1C14,
  AE_ZER4_CA = 0x1C15,
  AE_ZER4_CB = 0x1C16,
  AE_ZER4_CC = 0x1C17,
  AE_ZER4_DA = 0x1C18,
  AE_ZER4_DB = 0x1C19,
  AE_ZER4_DC = 0x1C1A,
  AE_ZER4_DD = 0x1C1B,
  AE_ZER4_DE = 0x1C1C,
  AE_ZER4_EA = 0x1C1D,
  AE_ZER4_EB = 0x1C1E,
  AE_ZER4_FA = 0x1C1F,
  AE_ZER4_FB = 0x1C20,
  AE_ZER4_FC = 0x1C21,
  AE_ZER4_FD = 0x1C22,
  AE_ZER4_FE = 0x1C23,
  AE_ZER4_FF = 0x1C24,
  AE_ZER4_GA = 0x1C25,
  AE_ZER4_HA = 0x1C26,
  AE_ZER4_HB = 0x1C27,
  AE_ZER4_HC = 0x1C28,
  AE_ZER4_JA = 0x1C29,
  AE_ZER4_JB = 0x1C2A,
  AE_ZER4_JC = 0x1C2B,
  AE_ZER4_JD = 0x1C2C,
  AE_ZER4_JE = 0x1C2D,
  AE_ZER4_JF = 0x1C2E,
  AE_ZER4_KA = 0x1C2F,
  AE_ZER4_KB = 0x1C30,
  AE_ZER4_KC = 0x1C31,
  AE_ZER4_LA = 0x1C32,
  AE_ZER4_LB = 0x1C33,
  AE_ZER4_LC = 0x1C34,
  AE_ZER4_LD = 0x1C35,
  AE_ZER4_MA = 0x1C36,
  AE_ZER4_MB = 0x1C37,
  AE_ZER4_MC = 0x1C38,
  AE_ZER4_MD = 0x1C39,
  AE_ZER4_NA = 0x1C3A,
  AE_ZER4_NB = 0x1C3B,
  AE_ZER4_NC = 0x1C3C,
  AE_ZER4_OA = 0x1C3D,
  AE_ZER4_OB = 0x1C3E,
  AE_ZER4_OC = 0x1C3F,
  AE_ZER4_OD = 0x1C40,
  AE_ZER4_OE = 0x1C41,
  AE_ZER4_OF = 0x1C42,
  AE_ZER4_OG = 0x1C43,
  AE_BLIP_DETECTED = 0x1C44,
  AE_END_OF_EVENTS = 0x1C45,
};

/*  678 */
enum eVehicleSoundVehicleType
{
  VEHICLE_SOUND_CAR = 0x0,
  VEHICLE_SOUND_MOTORCYCLE = 0x1,
  VEHICLE_SOUND_BICYCLE = 0x2,
  VEHICLE_SOUND_BOAT = 0x3,
  VEHICLE_SOUND_HELI = 0x4,
  VEHICLE_SOUND_PLANE = 0x5,
  VEHICLE_SOUND_NON_VEH = 0x6,
  VEHICLE_SOUND_USED_BY_NONE_VEH = 0x7,
  VEHICLE_SOUND_TRAIN = 0x8,
  VEHICLE_SOUND_TRAILER = 0x9,
  VEHICLE_SOUND_SPECIAL = 0xA,
};

/*  679 */
#pragma pack(push, 1)
struct CEventSoundQuiet
{
  CEventEditableResponse parent;
  CEntity *m_pEntity;
  float dword18;
  _DWORD m_dwStartTime;
  CVector m_vPosition;
};
#pragma pack(pop)

/*  680 */
#pragma pack(push, 1)
struct CEventEditableResponse
{
  _DWORD vmt;
  _DWORD dword4;
  _BYTE byte8;
  _BYTE f9[3];
  _BYTE byteC;
  _BYTE fD[1];
  _WORD wordE;
  _WORD word10;
  __int16 field_12;
};
#pragma pack(pop)

/*  681 */
#pragma pack(push, 1)
struct CTaskSimpleCarOpenDoorFromOutside
{
  CTask vmt;
  _BYTE byte8;
  _BYTE f9[3];
  _DWORD dwordC;
  CObject *m_pEntity;
  _DWORD dword14;
  _BYTE byte18;
  _BYTE byte19;
  _BYTE f1A[2];
  _DWORD dword1C;
  _DWORD dword20;
};
#pragma pack(pop)

/*  682 */
#pragma pack(push, 1)
struct CTaskSimpleCarSlowDragPedOut
{
  CTask char0;
  _BYTE byte8;
  _BYTE f9[3];
  _DWORD dwordC;
  CObject *m_pEntity;
  _DWORD dword14;
  _DWORD dword18;
  _BYTE byte1C;
  char _padding[3];
};
#pragma pack(pop)

/*  683 */
enum eTaskIds
{
  TASK_SIMPLE_PLAYER_ON_FOOT = 0x0,
  TASK_SIMPLE_PLAYER_IN_CAR = 0x1,
  TASK_COMPLEX_MEDIC_TREAT_INJURED_PED = 0x64,
  TASK_COMPLEX_TREAT_ACCIDENT = 0x65,
  TASK_SIMPLE_GIVE_CPR = 0x66,
  TASK_COMPLEX_COP_ARREST_PED = 0x67,
  TASK_COMPLEX_COP_HASSLE_PED = 0x68,
  TASK_COMPLEX_HASSLED_BY_COP = 0x69,
  TASK_COMPLEX_PRESENT_ID_TO_COP = 0x6A,
  TASK_COMPLEX_DRIVE_FIRE_TRUCK = 0x6B,
  TASK_COMPLEX_USE_SWAT_ROPE = 0x6C,
  TASK_COMPLEX_USE_WATER_CANNON = 0x6D,
  TASK_COMPLEX_EXTINGUISH_FIRE_ON_FOOT = 0x6E,
  TASK_NONE = 0xC8,
  TASK_SIMPLE_UNINTERRUPTABLE = 0xC9,
  TASK_SIMPLE_PAUSE = 0xCA,
  TASK_SIMPLE_STAND_STILL = 0xCB,
  TASK_SIMPLE_SET_STAY_IN_SAME_PLACE = 0xCC,
  TASK_SIMPLE_GET_UP = 0xCD,
  TASK_COMPLEX_GET_UP_AND_STAND_STILL = 0xCE,
  TASK_SIMPLE_FALL = 0xCF,
  TASK_COMPLEX_FALL_AND_GET_UP = 0xD0,
  TASK_COMPLEX_FALL_AND_STAY_DOWN = 0xD1,
  TASK_SIMPLE_JUMP = 0xD2,
  TASK_COMPLEX_JUMP = 0xD3,
  TASK_SIMPLE_DIE = 0xD4,
  TASK_SIMPLE_DROWN = 0xD5,
  TASK_SIMPLE_DIE_IN_CAR = 0xD6,
  TASK_COMPLEX_DIE_IN_CAR = 0xD7,
  TASK_SIMPLE_DROWN_IN_CAR = 0xD8,
  TASK_COMPLEX_DIE = 0xD9,
  TASK_SIMPLE_DEAD = 0xDA,
  TASK_SIMPLE_TIRED = 0xDB,
  TASK_SIMPLE_SIT_DOWN = 0xDC,
  TASK_SIMPLE_SIT_IDLE = 0xDD,
  TASK_SIMPLE_STAND_UP = 0xDE,
  TASK_COMPLEX_SIT_DOWN_THEN_IDLE_THEN_STAND_UP = 0xDF,
  TASK_COMPLEX_OBSERVE_TRAFFIC_LIGHTS = 0xE0,
  TASK_COMPLEX_OBSERVE_TRAFFIC_LIGHTS_AND_ACHIEVE_HEADING = 0xE1,
  TASK_NOT_USED = 0xE2,
  TASK_COMPLEX_CROSS_ROAD_LOOK_AND_ACHIEVE_HEADING = 0xE3,
  TASK_SIMPLE_TURN_180 = 0xE4,
  TASK_SIMPLE_HAIL_TAXI = 0xE5,
  TASK_COMPLEX_HIT_RESPONSE = 0xE6,
  TASK_COMPLEX_HIT_BY_GUN_RESPONSE = 0xE7,
  TASK_UNUSED_SLOT = 0xE8,
  TASK_COMPLEX_USE_EFFECT = 0xE9,
  TASK_COMPLEX_WAIT_AT_ATTRACTOR = 0xEA,
  TASK_COMPLEX_USE_ATTRACTOR = 0xEB,
  TASK_COMPLEX_WAIT_FOR_DRY_WEATHER = 0xEC,
  TASK_COMPLEX_WAIT_FOR_BUS = 0xED,
  TASK_SIMPLE_WAIT_FOR_BUS = 0xEE,
  TASK_SIMPLE_WAIT_FOR_PIZZA = 0xEF,
  TASK_COMPLEX_IN_AIR_AND_LAND = 0xF0,
  TASK_SIMPLE_IN_AIR = 0xF1,
  TASK_SIMPLE_LAND = 0xF2,
  TASK_COMPLEX_BE_IN_GROUP = 0xF3,
  TASK_COMPLEX_SEQUENCE = 0xF4,
  TASK_SIMPLE_CALL_FOR_BACKUP = 0xF5,
  TASK_COMPLEX_USE_PAIRED_ATTRACTOR = 0xF6,
  TASK_COMPLEX_USE_ATTRACTOR_PARTNER = 0xF7,
  TASK_COMPLEX_ATTRACTOR_PARTNER_WAIT = 0xF8,
  TASK_COMPLEX_USE_SCRIPTED_ATTRACTOR = 0xF9,
  TASK_COMPLEX_ON_FIRE = 0xFA,
  TASK_SIMPLE_BE_DAMAGED = 0xFB,
  TASK_SIMPLE_TRIGGER_EVENT = 0xFC,
  TASK_SIMPLE_RAGDOLL = 0xFD,
  TASK_SIMPLE_CLIMB = 0xFE,
  TASK_SIMPLE_PLAYER_ON_FIRE = 0xFF,
  TASK_COMPLEX_PARTNER = 0x100,
  TASK_COMPLEX_STARE_AT_PED = 0x101,
  TASK_COMPLEX_USE_CLOSEST_FREE_SCRIPTED_ATTRACTOR = 0x102,
  TASK_COMPLEX_USE_EFFECT_RUNNING = 0x103,
  TASK_COMPLEX_USE_EFFECT_SPRINTING = 0x104,
  TASK_COMPLEX_USE_CLOSEST_FREE_SCRIPTED_ATTRACTOR_RUN = 0x105,
  TASK_COMPLEX_USE_CLOSEST_FREE_SCRIPTED_ATTRACTOR_SPRINT = 0x106,
  TASK_SIMPLE_CHOKING = 0x107,
  TASK_SIMPLE_IK_CHAIN = 0x108,
  TASK_SIMPLE_IK_MANAGER = 0x109,
  TASK_SIMPLE_IK_LOOK_AT = 0x10A,
  TASK_COMPLEX_CLIMB = 0x10B,
  TASK_COMPLEX_IN_WATER = 0x10C,
  TASK_SIMPLE_TRIGGER_LOOK_AT = 0x10D,
  TASK_SIMPLE_CLEAR_LOOK_AT = 0x10E,
  TASK_SIMPLE_SET_CHAR_DECISION_MAKER = 0x10F,
  TASK_SIMPLE_IK_POINT_R_ARM = 0x110,
  TASK_SIMPLE_IK_POINT_L_ARM = 0x111,
  TASK_COMPLEX_BE_STILL = 0x112,
  TASK_COMPLEX_USE_SEQUENCE = 0x113,
  TASK_SIMPLE_SET_KINDA_STAY_IN_SAME_PLACE = 0x114,
  TASK_COMPLEX_FALL_TO_DEATH = 0x115,
  TASK_WAIT_FOR_MATCHING_LEADER_AREA_CODES = 0x116,
  TASK_SIMPLE_LOOK_AT_ENTITY_OR_COORD = 0x12C,
  TASK_SIMPLE_SAY = 0x12D,
  TASK_SIMPLE_SHAKE_FIST = 0x12E,
  TASK_SIMPLE_FACIAL = 0x12F,
  TASK_COMPLEX_CHAINED_FACIAL = 0x130,
  TASK_COMPLEX_FACIAL = 0x131,
  TASK_SIMPLE_AFFECT_SECONDARY_BEHAVIOUR = 0x132,
  TASK_SIMPLE_HOLD_ENTITY = 0x133,
  TASK_SIMPLE_PICKUP_ENTITY = 0x134,
  TASK_SIMPLE_PUTDOWN_ENTITY = 0x135,
  TASK_COMPLEX_GO_PICKUP_ENTITY = 0x136,
  TASK_SIMPLE_DUCK_WHILE_SHOTS_WHIZZING = 0x137,
  TASK_SIMPLE_ANIM = 0x190,
  TASK_SIMPLE_NAMED_ANIM = 0x191,
  TASK_SIMPLE_TIMED_ANIM = 0x192,
  TASK_SIMPLE_HIT_BACK = 0x193,
  TASK_SIMPLE_HIT_FRONT = 0x194,
  TASK_SIMPLE_HIT_LEFT = 0x195,
  TASK_SIMPLE_HIT_RIGHT = 0x196,
  TASK_SIMPLE_HIT_BY_GUN_BACK = 0x197,
  TASK_SIMPLE_HIT_BY_GUN_FRONT = 0x198,
  TASK_SIMPLE_HIT_BY_GUN_LEFT = 0x199,
  TASK_SIMPLE_HIT_BY_GUN_RIGHT = 0x19A,
  TASK_SIMPLE_HIT_WALL = 0x19B,
  TASK_SIMPLE_COWER = 0x19C,
  TASK_SIMPLE_HANDS_UP = 0x19D,
  TASK_SIMPLE_HIT_BEHIND = 0x19E,
  TASK_SIMPLE_DUCK = 0x19F,
  TASK_SIMPLE_CHAT = 0x1A0,
  TASK_COMPLEX_SUNBATHE = 0x1A1,
  TASK_SIMPLE_SUNBATHE = 0x1A2,
  TASK_SIMPLE_DETONATE = 0x1A3,
  TASK_SIMPLE_USE_ATM = 0x1A4,
  TASK_SIMPLE_SCRATCH_HEAD = 0x1A5,
  TASK_SIMPLE_LOOK_ABOUT = 0x1A6,
  TASK_SIMPLE_ABSEIL = 0x1A7,
  TASK_SIMPLE_ANIM_LOOPED_MIDDLE = 0x1A8,
  TASK_SIMPLE_HANDSIGNAL_ANIM = 0x1A9,
  TASK_COMPLEX_HANDSIGNAL_ANIM = 0x1AA,
  TASK_SIMPLE_DUCK_FOREVER = 0x1AB,
  TASK_SIMPLE_START_SUNBATHING = 0x1AC,
  TASK_SIMPLE_IDLE_SUNBATHING = 0x1AD,
  TASK_SIMPLE_STOP_SUNBATHING = 0x1AE,
  TASK_SIMPLE_HIT_HEAD = 0x1F4,
  TASK_SIMPLE_EVASIVE_STEP = 0x1F5,
  TASK_COMPLEX_EVASIVE_STEP = 0x1F6,
  TASK_SIMPLE_EVASIVE_DIVE = 0x1F7,
  TASK_COMPLEX_EVASIVE_DIVE_AND_GET_UP = 0x1F8,
  TASK_COMPLEX_HIT_PED_WITH_CAR = 0x1F9,
  TASK_SIMPLE_KILL_PED_WITH_CAR = 0x1FA,
  TASK_SIMPLE_HURT_PED_WITH_CAR = 0x1FB,
  TASK_COMPLEX_WALK_ROUND_CAR = 0x1FC,
  TASK_COMPLEX_WALK_ROUND_BUILDING_ATTEMPT = 0x1FD,
  TASK_COMPLEX_WALK_ROUND_OBJECT = 0x1FE,
  TASK_COMPLEX_MOVE_BACK_AND_JUMP = 0x1FF,
  TASK_COMPLEX_EVASIVE_COWER = 0x200,
  TASK_COMPLEX_DIVE_FROM_ATTACHED_ENTITY_AND_GET_UP = 0x201,
  TASK_COMPLEX_WALK_ROUND_FIRE = 0x202,
  TASK_COMPLEX_STUCK_IN_AIR = 0x203,
  TASK_COMPLEX_INVESTIGATE_DEAD_PED = 0x258,
  TASK_COMPLEX_REACT_TO_GUN_AIMED_AT = 0x259,
  TASK_COMPLEX_WAIT_FOR_BACKUP = 0x25A,
  TASK_COMPLEX_GET_OUT_OF_WAY_OF_CAR = 0x25B,
  TASK_COMPLEX_EXTINGUISH_FIRES = 0x25C,
  TASK_COMPLEX_ENTER_CAR_AS_PASSENGER = 0x2BC,
  TASK_COMPLEX_ENTER_CAR_AS_DRIVER = 0x2BD,
  TASK_COMPLEX_STEAL_CAR = 0x2BE,
  TASK_COMPLEX_DRAG_PED_FROM_CAR = 0x2BF,
  TASK_COMPLEX_LEAVE_CAR = 0x2C0,
  TASK_COMPLEX_LEAVE_CAR_AND_DIE = 0x2C1,
  TASK_COMPLEX_LEAVE_CAR_AND_FLEE = 0x2C2,
  TASK_COMPLEX_LEAVE_CAR_AND_WANDER = 0x2C3,
  TASK_COMPLEX_SCREAM_IN_CAR_THEN_LEAVE = 0x2C4,
  TASK_SIMPLE_CAR_DRIVE = 0x2C5,
  TASK_COMPLEX_CAR_DRIVE_TO_POINT = 0x2C6,
  TASK_COMPLEX_CAR_DRIVE_WANDER = 0x2C7,
  TASK_COMPLEX_ENTER_CAR_AS_PASSENGER_TIMED = 0x2C8,
  TASK_COMPLEX_ENTER_CAR_AS_DRIVER_TIMED = 0x2C9,
  TASK_COMPLEX_LEAVE_ANY_CAR = 0x2CA,
  TASK_COMPLEX_ENTER_BOAT_AS_DRIVER = 0x2CB,
  TASK_COMPLEX_LEAVE_BOAT = 0x2CC,
  TASK_COMPLEX_ENTER_ANY_CAR_AS_DRIVER = 0x2CD,
  TASK_COMPLEX_ENTER_CAR_AS_PASSENGER_WAIT = 0x2CE,
  TASK_SIMPLE_CAR_DRIVE_TIMED = 0x2CF,
  TASK_COMPLEX_SHUFFLE_SEATS = 0x2D0,
  TASK_COMPLEX_CAR_DRIVE_POINT_ROUTE = 0x2D1,
  TASK_COMPLEX_CAR_OPEN_DRIVER_DOOR = 0x2D2,
  TASK_SIMPLE_CAR_SET_TEMP_ACTION = 0x2D3,
  TASK_COMPLEX_CAR_DRIVE_MISSION = 0x2D4,
  TASK_COMPLEX_CAR_DRIVE = 0x2D5,
  TASK_COMPLEX_CAR_DRIVE_MISSION_FLEE_SCENE = 0x2D6,
  TASK_COMPLEX_ENTER_LEADER_CAR_AS_PASSENGER = 0x2D7,
  TASK_COMPLEX_CAR_OPEN_PASSENGER_DOOR = 0x2D8,
  TASK_COMPLEX_CAR_DRIVE_MISSION_KILL_PED = 0x2D9,
  TASK_COMPLEX_LEAVE_CAR_AS_PASSENGER_WAIT = 0x2DA,
  TASK_COMPLEX_GO_TO_CAR_DOOR_AND_STAND_STILL = 0x320,
  TASK_SIMPLE_CAR_ALIGN = 0x321,
  TASK_SIMPLE_CAR_OPEN_DOOR_FROM_OUTSIDE = 0x322,
  TASK_SIMPLE_CAR_OPEN_LOCKED_DOOR_FROM_OUTSIDE = 0x323,
  TASK_SIMPLE_BIKE_PICK_UP = 0x324,
  TASK_SIMPLE_CAR_CLOSE_DOOR_FROM_INSIDE = 0x325,
  TASK_SIMPLE_CAR_CLOSE_DOOR_FROM_OUTSIDE = 0x326,
  TASK_SIMPLE_CAR_GET_IN = 0x327,
  TASK_SIMPLE_CAR_SHUFFLE = 0x328,
  TASK_SIMPLE_CAR_WAIT_TO_SLOW_DOWN = 0x329,
  TASK_SIMPLE_CAR_WAIT_FOR_DOOR_NOT_TO_BE_IN_USE = 0x32A,
  TASK_SIMPLE_CAR_SET_PED_IN_AS_PASSENGER = 0x32B,
  TASK_SIMPLE_CAR_SET_PED_IN_AS_DRIVER = 0x32C,
  TASK_SIMPLE_CAR_GET_OUT = 0x32D,
  TASK_SIMPLE_CAR_JUMP_OUT = 0x32E,
  TASK_SIMPLE_CAR_FORCE_PED_OUT = 0x32F,
  TASK_SIMPLE_CAR_SET_PED_OUT = 0x330,
  TASK_SIMPLE_CAR_QUICK_DRAG_PED_OUT = 0x331,
  TASK_SIMPLE_CAR_QUICK_BE_DRAGGED_OUT = 0x332,
  TASK_SIMPLE_CAR_SET_PED_QUICK_DRAGGED_OUT = 0x333,
  TASK_SIMPLE_CAR_SLOW_DRAG_PED_OUT = 0x334,
  TASK_SIMPLE_CAR_SLOW_BE_DRAGGED_OUT = 0x335,
  TASK_SIMPLE_CAR_SET_PED_SLOW_DRAGGED_OUT = 0x336,
  TASK_COMPLEX_CAR_SLOW_BE_DRAGGED_OUT = 0x337,
  TASK_COMPLEX_CAR_SLOW_BE_DRAGGED_OUT_AND_STAND_UP = 0x338,
  TASK_COMPLEX_CAR_QUICK_BE_DRAGGED_OUT = 0x339,
  TASK_SIMPLE_BIKE_JACKED = 0x33A,
  TASK_SIMPLE_SET_PED_AS_AUTO_DRIVER = 0x33B,
  TASK_SIMPLE_GO_TO_POINT_NEAR_CAR_DOOR_UNTIL_DOOR_NOT_IN_USE = 0x33C,
  TASK_SIMPLE_WAIT_UNTIL_PED_OUT_CAR = 0x33D,
  TASK_COMPLEX_GO_TO_BOAT_STEERING_WHEEL = 0x33E,
  TASK_COMPLEX_GET_ON_BOAT_SEAT = 0x33F,
  TASK_SIMPLE_CREATE_CAR_AND_GET_IN = 0x340,
  TASK_SIMPLE_WAIT_UNTIL_PED_IN_CAR = 0x341,
  TASK_SIMPLE_CAR_FALL_OUT = 0x342,
  TASK_SIMPLE_GO_TO_POINT = 0x384,
  TASK_COMPLEX_GO_TO_POINT_SHOOTING = 0x385,
  TASK_SIMPLE_ACHIEVE_HEADING = 0x386,
  TASK_COMPLEX_GO_TO_POINT_AND_STAND_STILL = 0x387,
  TASK_COMPLEX_GO_TO_POINT_AND_STAND_STILL_AND_ACHIEVE_HEADING = 0x388,
  TASK_COMPLEX_FOLLOW_POINT_ROUTE = 0x389,
  TASK_COMPLEX_FOLLOW_NODE_ROUTE = 0x38A,
  TASK_COMPLEX_SEEK_ENTITY = 0x38B,
  TASK_COMPLEX_FLEE_POINT = 0x38C,
  TASK_COMPLEX_FLEE_ENTITY = 0x38D,
  TASK_COMPLEX_SMART_FLEE_POINT = 0x38E,
  TASK_COMPLEX_SMART_FLEE_ENTITY = 0x38F,
  TASK_COMPLEX_WANDER = 0x390,
  TASK_COMPLEX_FOLLOW_LEADER_IN_FORMATION = 0x391,
  TASK_COMPLEX_FOLLOW_SEXY_PED = 0x392,
  TASK_COMPLEX_GO_TO_ATTRACTOR = 0x393,
  TASK_COMPLEX_LEAVE_ATTRACTOR = 0x394,
  TASK_COMPLEX_AVOID_OTHER_PED_WHILE_WANDERING = 0x395,
  TASK_COMPLEX_GO_TO_POINT_ANY_MEANS = 0x396,
  TASK_COMPLEX_WALK_ROUND_SHOP = 0x397,
  TASK_COMPLEX_TURN_TO_FACE_ENTITY = 0x398,
  TASK_COMPLEX_AVOID_BUILDING = 0x399,
  TASK_COMPLEX_SEEK_ENTITY_ANY_MEANS = 0x39A,
  TASK_COMPLEX_FOLLOW_LEADER_ANY_MEANS = 0x39B,
  TASK_COMPLEX_GO_TO_POINT_AIMING = 0x39C,
  TASK_COMPLEX_TRACK_ENTITY = 0x39D,
  TASK_SIMPLE_GO_TO_POINT_FINE = 0x39E,
  TASK_COMPLEX_FLEE_ANY_MEANS = 0x39F,
  TASK_COMPLEX_FLEE_SHOOTING = 0x3A0,
  TASK_COMPLEX_SEEK_ENTITY_SHOOTING = 0x3A1,
  TASK_UNUSED1 = 0x3A2,
  TASK_COMPLEX_FOLLOW_PATROL_ROUTE = 0x3A3,
  TASK_COMPLEX_GOTO_DOOR_AND_OPEN = 0x3A4,
  TASK_COMPLEX_SEEK_ENTITY_AIMING = 0x3A5,
  TASK_SIMPLE_SLIDE_TO_COORD = 0x3A6,
  TASK_COMPLEX_INVESTIGATE_DISTURBANCE = 0x3A7,
  TASK_COMPLEX_FOLLOW_PED_FOOTSTEPS = 0x3A8,
  TASK_COMPLEX_FOLLOW_NODE_ROUTE_SHOOTING = 0x3A9,
  TASK_COMPLEX_USE_ENTRYEXIT = 0x3AA,
  TASK_COMPLEX_AVOID_ENTITY = 0x3AB,
  TASK_SMART_FLEE_ENTITY_WALKING = 0x3AC,
  TASK_COMPLEX_KILL_PED_ON_FOOT = 0x3E8,
  TASK_COMPLEX_KILL_PED_ON_FOOT_MELEE = 0x3E9,
  TASK_COMPLEX_KILL_PED_ON_FOOT_ARMED = 0x3EA,
  TASK_COMPLEX_DESTROY_CAR = 0x3EB,
  TASK_COMPLEX_DESTROY_CAR_MELEE = 0x3EC,
  TASK_COMPLEX_DESTROY_CAR_ARMED = 0x3ED,
  TASK_COMPLEX_REACT_TO_ATTACK = 0x3EE,
  TASK_SIMPLE_BE_KICKED_ON_GROUND = 0x3EF,
  TASK_SIMPLE_BE_HIT = 0x3F0,
  TASK_SIMPLE_BE_HIT_WHILE_MOVING = 0x3F1,
  TASK_COMPLEX_SIDE_STEP_AND_SHOOT = 0x3F2,
  TASK_SIMPLE_DRIVEBY_SHOOT = 0x3F3,
  TASK_SIMPLE_DRIVEBY_WATCH_FOR_TARGET = 0x3F4,
  TASK_COMPLEX_DO_DRIVEBY = 0x3F5,
  TASK_KILL_ALL_THREATS = 0x3F6,
  TASK_KILL_PED_GROUP_ON_FOOT = 0x3F7,
  TASK_SIMPLE_FIGHT = 0x3F8,
  TASK_SIMPLE_USE_GUN = 0x3F9,
  TASK_SIMPLE_THROW = 0x3FA,
  TASK_SIMPLE_FIGHT_CTRL = 0x3FB,
  TASK_SIMPLE_GUN_CTRL = 0x3FC,
  TASK_SIMPLE_THROW_CTRL = 0x3FD,
  TASK_SIMPLE_GANG_DRIVEBY = 0x3FE,
  TASK_COMPLEX_KILL_PED_ON_FOOT_TIMED = 0x3FF,
  TASK_COMPLEX_KILL_PED_ON_FOOT_STAND_STILL = 0x400,
  TASK_UNUSED2 = 0x401,
  TASK_KILL_PED_ON_FOOT_WHILE_DUCKING = 0x402,
  TASK_SIMPLE_STEALTH_KILL = 0x403,
  TASK_COMPLEX_KILL_PED_ON_FOOT_STEALTH = 0x404,
  TASK_COMPLEX_KILL_PED_ON_FOOT_KINDA_STAND_STILL = 0x405,
  TASK_COMPLEX_KILL_PED_AND_REENTER_CAR = 0x406,
  TASK_COMPLEX_ROAD_RAGE = 0x407,
  TASK_KILL_PED_FROM_BOAT = 0x408,
  TASK_SIMPLE_SET_CHAR_IGNORE_WEAPON_RANGE_FLAG = 0x409,
  TASK_SEEK_COVER_UNTIL_TARGET_DEAD = 0x40A,
  TASK_SIMPLE_ARREST_PED = 0x44C,
  TASK_COMPLEX_ARREST_PED = 0x44D,
  TASK_SIMPLE_BE_ARRESTED = 0x44E,
  TASK_COMPLEX_POLICE_PURSUIT = 0x44F,
  TASK_COMPLEX_BE_COP = 0x450,
  TASK_COMPLEX_KILL_CRIMINAL = 0x451,
  TASK_COMPLEX_COP_IN_CAR = 0x452,
  TASK_SIMPLE_INFORM_GROUP = 0x4B0,
  TASK_COMPLEX_GANG_LEADER = 0x4B1,
  TASK_COMPLEX_PARTNER_DEAL = 0x4B2,
  TASK_COMPLEX_PARTNER_GREET = 0x4B3,
  TASK_COMPLEX_PARTNER_CHAT = 0x4B4,
  TASK_COMPLEX_GANG_HASSLE_VEHICLE = 0x4B5,
  TASK_COMPLEX_WALK_WITH_PED = 0x4B6,
  TASK_COMPLEX_GANG_FOLLOWER = 0x4B7,
  TASK_COMPLEX_WALK_ALONGSIDE_PED = 0x4B8,
  TASK_COMPLEX_PARTNER_SHOVE = 0x4B9,
  TASK_COMPLEX_SIGNAL_AT_PED = 0x4BA,
  TASK_COMPLEX_PASS_OBJECT = 0x4BB,
  TASK_COMPLEX_GANG_HASSLE_PED = 0x4BC,
  TASK_COMPLEX_WAIT_FOR_PED = 0x4BD,
  TASK_SIMPLE_DO_HAND_SIGNAL = 0x4BE,
  TASK_COMPLEX_BE_IN_COUPLE = 0x4BF,
  TASK_COMPLEX_GOTO_VEHICLE_AND_LEAN = 0x4C0,
  TASK_COMPLEX_LEAN_ON_VEHICLE = 0x4C1,
  TASK_COMPLEX_CHAT = 0x4C2,
  TASK_COMPLEX_GANG_JOIN_RESPOND = 0x4C3,
  TASK_ZONE_RESPONSE = 0x514,
  TASK_SIMPLE_TOGGLE_PED_THREAT_SCANNER = 0x515,
  TASK_FINISHED = 0x516,
  TASK_SIMPLE_JETPACK = 0x517,
  TASK_SIMPLE_SWIM = 0x518,
  TASK_COMPLEX_SWIM_AND_CLIMB_OUT = 0x519,
  TASK_SIMPLE_DUCK_TOGGLE = 0x51A,
  TASK_WAIT_FOR_MATCHING_AREA_CODES = 0x51B,
  TASK_SIMPLE_ON_ESCALATOR = 0x51C,
  TASK_COMPLEX_PROSTITUTE_SOLICIT = 0x51D,
  TASK_INTERIOR_USE_INFO = 0x578,
  TASK_INTERIOR_GOTO_INFO = 0x579,
  TASK_INTERIOR_BE_IN_HOUSE = 0x57A,
  TASK_INTERIOR_BE_IN_OFFICE = 0x57B,
  TASK_INTERIOR_BE_IN_SHOP = 0x57C,
  TASK_INTERIOR_SHOPKEEPER = 0x57D,
  TASK_INTERIOR_LIE_IN_BED = 0x57E,
  TASK_INTERIOR_SIT_ON_CHAIR = 0x57F,
  TASK_INTERIOR_SIT_AT_DESK = 0x580,
  TASK_INTERIOR_LEAVE = 0x581,
  TASK_INTERIOR_SIT_IN_RESTAURANT = 0x582,
  TASK_INTERIOR_RESERVED2 = 0x583,
  TASK_INTERIOR_RESERVED3 = 0x584,
  TASK_INTERIOR_RESERVED4 = 0x585,
  TASK_INTERIOR_RESERVED5 = 0x586,
  TASK_INTERIOR_RESERVED6 = 0x587,
  TASK_INTERIOR_RESERVED7 = 0x588,
  TASK_INTERIOR_RESERVED8 = 0x589,
  TASK_GROUP_FOLLOW_LEADER_ANY_MEANS = 0x5DC,
  TASK_GROUP_FOLLOW_LEADER_WITH_LIMITS = 0x5DD,
  TASK_GROUP_KILL_THREATS_BASIC = 0x5DE,
  TASK_GROUP_KILL_PLAYER_BASIC = 0x5DF,
  TASK_GROUP_STARE_AT_PED = 0x5E0,
  TASK_GROUP_FLEE_THREAT = 0x5E1,
  TASK_GROUP_PARTNER_DEAL = 0x5E2,
  TASK_GROUP_PARTNER_GREET = 0x5E3,
  TASK_GROUP_HASSLE_SEXY_PED = 0x5E4,
  TASK_GROUP_HASSLE_THREAT = 0x5E5,
  TASK_GROUP_USE_MEMBER_DECISION = 0x5E6,
  TASK_GROUP_EXIT_CAR = 0x5E7,
  TASK_GROUP_ENTER_CAR = 0x5E8,
  TASK_GROUP_ENTER_CAR_AND_PERFORM_SEQUENCE = 0x5E9,
  TASK_GROUP_RESPOND_TO_LEADER_COMMAND = 0x5EA,
  TASK_GROUP_HAND_SIGNAL = 0x5EB,
  TASK_GROUP_DRIVEBY = 0x5EC,
  TASK_GROUP_HASSLE_THREAT_PASSIVE = 0x5ED,
  TASK_COMPLEX_USE_MOBILE_PHONE = 0x640,
  TASK_SIMPLE_PHONE_TALK = 0x641,
  TASK_SIMPLE_PHONE_IN = 0x642,
  TASK_SIMPLE_PHONE_OUT = 0x643,
  TASK_COMPLEX_USE_GOGGLES = 0x644,
  TASK_SIMPLE_GOGGLES_ON = 0x645,
  TASK_SIMPLE_GOGGLES_OFF = 0x646,
  TASK_SIMPLE_INFORM_RESPECTED_FRIENDS = 0x6A4,
  TASK_COMPLEX_USE_SCRIPTED_BRAIN = 0x708,
  TASK_SIMPLE_FINISH_BRAIN = 0x709,
  TASK_SIMPLE_PLAYER_IN_CAR_2 = 0x70A,
};

/*  684 */
#pragma pack(push, 1)
struct CSound
{
  _WORD m_nBankSlotId;
  __int16 m_nSoundIdInSlot;
  CVehicleAudio *m_pBaseAudio;
  CEntity *m_pEntity;
  eAudioEvents m_nEventId;
  float m_dwTimeToPlay;
  float m_fVolume;
  float field_18;
  float m_fSpeed;
  float field_20;
  CVector m_vLastPosn;
  CVector m_vCurrPosn;
  _DWORD m_dwLastFrameUpdate;
  int m_dwLastTime;
  int m_dwCurrTime;
  float m_fLastDistance;
  float m_fCurrDistance;
  float field_50;
  _BYTE field_54;
  _BYTE field_55[1];
  _WORD m_nFlags;
  _WORD m_wIsUsed;
  __int16 field_5A;
  _WORD field_5C;
  _WORD field_5E;
  float field_60;
  float field_64;
  _WORD field_68;
  _BYTE field_6A[2];
  float field_6C;
  _WORD field_70;
  __int16 field_72;
};
#pragma pack(pop)

/*  685 */
#pragma pack(push, 1)
struct CSoundManager
{
  _WORD m_nCountSounds;
  _WORD field_2;
  CSound m_aSounds[300];
  WORD *field_87F4;
  WORD *field_87F8;
  WORD *field_87FC;
  __int16 field_8800[300];
  __int16 field_8A58[300];
  _DWORD m_dwTimeInitialized;
  _BYTE field_8CB4;
  _BYTE field_8CB5;
  _BYTE field_8CB6[2];
  _DWORD field_8CB8;
};
#pragma pack(pop)

/*  686 */
#pragma pack(push, 1)
struct CGlassAudio
{
  _BYTE f0[8];
  CSound sound;
};
#pragma pack(pop)

/*  687 */
#pragma pack(push, 1)
struct CFrontendAudio
{
  _BYTE f0[124];
  _BYTE byte7C;
  _BYTE byte7D;
  _BYTE f7E[2];
  _WORD m_nNumBulletSounds;
  _WORD bankId;
  _DWORD m_dwLastFrameGeneral;
  _DWORD m_dwLastFrameMissionComplete;
  _DWORD m_dwLastFrameBulletPass;
  _DWORD m_dwLastTimeCarRespray;
  _DWORD dword94;
  _DWORD dword98;
  _BYTE f9C[136];
  _WORD word124;
  _BYTE f126[166];
  _WORD word1CC;
};
#pragma pack(pop)

/*  688 */
#pragma pack(push, 1)
struct CVehicleSound
{
  int m_nIndex;
  CSound *m_pSound;
};
#pragma pack(pop)

/*  689 */
#pragma pack(push, 1)
struct CAudioFilesInfo
{
  CBankSlotInfo *m_pBankSlotsInfos;
  CBankLkup *m_pBankLkups;
  void *m_pPakFileName;
  __int16 m_nNumBankSlotsInfos;
  __int16 m_nNumBankLkup;
  __int16 m_nNumPakFiles;
  __int16 __pad1;
  _BYTE m_bAudioFileInfoInitialized;
  char __pad2[3];
  int m_dwBankSlotsSize;
  int m_pBankSlots;
  int *m_pPakFilesStreamIndex;
  CBankSlotBankAssignment m_aBankSlotBankAssignment[50];
  __int16 field_664;
  __int16 field_666;
  __int16 m_nNumBanksAssigned;
  _WORD m_nStreamNum;
  __int16 field_66C[60];
};
#pragma pack(pop)

/*  690 */
#pragma pack(push, 1)
struct CBankLkup
{
  char m_nPakFileNumber;
  char __pad0[3];
  int m_dwOffset;
  int m_dwLength;
};
#pragma pack(pop)

/*  691 */
#pragma pack(push, 1)
struct CBankSlotInfo
{
  int m_dwOffset;
  int m_dwLength;
  int field_8;
  int field_C;
  __int16 m_nBankId;
  __int16 m_nNumSoundInfos?;
  Unk12 m_aSoundsHeader[400];
};
#pragma pack(pop)

/*  692 */
#pragma pack(push, 1)
struct CBankSlotBankAssignment
{
  CBankSlotsInfos *m_pBankSlotInfo;
  int m_dwBankOffset;
  int m_dwBankLength;
  int m_pStreamOffset;
  int m_pStreamBuffer;
  int m_dwState;
  __int16 m_nBankId;
  __int16 m_nBankSlotId;
  __int16 m_nNumSounds;
  char m_nPakFileNumber;
  char __pad;
};
#pragma pack(pop)

/*  693 */
#pragma pack(push, 1)
struct CAudioPlayer
{
  _BYTE byte0;
  char field_1;
  char gap_2[2];
  char field_4;
  _BYTE f5[1];
  _WORD word6;
  _BYTE f8[132];
  _WORD word8C;
  _WORD word8E;
  __int16 field_90[454];
  int field_41C;
  char field_420[16];
  __int16 m_aBankSlotIds[300];
  __int16 m_aSoundTypes[300];
  __int16 field_8E0[300];
  __int16 field_B38[300];
  int field_D90;
  char gap_D94[4];
  CAudioFilesInfo *m_pPakFilesInfo;
  _DWORD m_pTraksInfo;
  _BYTE fDA0[12];
  _DWORD dwordDAC;
  _BYTE fDB0[52];
  _DWORD dwordDE4;
  _BYTE fDE8[40];
  _DWORD dwordE10;
  char charE14;
  _BYTE fE15[79];
  int dwordE64[2];
};
#pragma pack(pop)

/*  694 */
#pragma pack(push, 1)
struct CWeaponAudio
{
  _BYTE f0[8];
  CSound m_sSound;
  _BYTE f7C[2];
  _BYTE byte7E;
  _BYTE f7F[25];
  _DWORD m_dwTimeLastFired;
};
#pragma pack(pop)

/*  695 */
#pragma pack(push, 1)
struct Unk12
{
  __int16 m_dwOffset;
  __int16 field_2;
  int field_4;
  int field_8;
};
#pragma pack(pop)

/*  696 */
#pragma pack(push, 1)
struct CBankSlotsInfos
{
  CBankSlotInfo m_aInfos[45];
};
#pragma pack(pop)

/*  697 */
#pragma pack(push, 1)
struct CAudioWav
{
  char field_0[32];
};
#pragma pack(pop)

/*  698 */
#pragma pack(push, 1)
struct CDummySound
{
  int field_0;
  CSound _;
};
#pragma pack(pop)

/*  700 */
#pragma pack(push, 1)
struct Unk4
{
  __int16 m_nBankId;
  __int16 m_nUsageCount;
};
#pragma pack(pop)

/*  701 */
#pragma pack(push, 1)
struct CSkidmark
{
  CVector m_vPosn[16];
  _DWORD dwordC0;
  _BYTE fC4[60];
  _DWORD dword100;
  _BYTE f104[60];
  _DWORD dword140;
  _DWORD dword144;
  int time1;
  int time2;
  _DWORD m_nSurfaceType;
  _WORD m_nNumParts;
  _BYTE m_nState;
  _BYTE byte157;
};
#pragma pack(pop)

/*  702 */
#pragma pack(push, 1)
struct CClothes
{
  int m_aModelKeys[10];
  int m_aTextureKeys[18];
  float m_fFatStat;
  float m_fMuscleStat;
};
#pragma pack(pop)

/*  704 */
enum eEntityFlags
{
  eEntityFlags_1 = 0x1,
  eEntityFlags_2 = 0x2,
  eEntityFlags_4 = 0x4,
  eEntityFlags_8 = 0x8,
  eEntityFlags_10 = 0x10,
  eEntityFlags_20 = 0x20,
  eEntityFlags_40 = 0x40,
  eEntityFlags_80 = 0x80,
  eEntityFlags_100 = 0x100,
  eEntityFlags_200 = 0x200,
  eEntityFlags_400 = 0x400,
  eEntityFlags_800 = 0x800,
  eEntityFlags_1000 = 0x1000,
  eEntityFlags_2000 = 0x2000,
  eEntityFlags_4000 = 0x4000,
};

/*  705 */
#pragma pack(push, 1)
struct CWindModifier
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
};
#pragma pack(pop)

/*  706 */
#pragma pack(push, 1)
struct CScene
{
  RpWorld *m_pRwWorld;
  RwCamera *m_pRwCamera;
};
#pragma pack(pop)

/*  707 */
#pragma pack(push, 1)
struct RpMesh
{
  unsigned __int16 *indices;
  int numIndices;
  RpMaterial *material;
};
#pragma pack(pop)

/*  708 */
#pragma pack(push, 1)
struct CCarCtrlInternal
{
  int field_0[11];
  __int16 field_2C;
};
#pragma pack(pop)